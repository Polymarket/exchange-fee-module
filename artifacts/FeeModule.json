{
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_exchange",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "NotAdmin",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "FeeRefunded",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "FeeWithdrawn",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "admin",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newAdminAddress",
            "type": "address"
          }
        ],
        "name": "NewAdmin",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "admin",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "removedAdmin",
            "type": "address"
          }
        ],
        "name": "RemovedAdmin",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "admin",
            "type": "address"
          }
        ],
        "name": "addAdmin",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "admins",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "collateral",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "ctf",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "exchange",
        "outputs": [
          {
            "internalType": "contract IExchange",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "addr",
            "type": "address"
          }
        ],
        "name": "isAdmin",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "salt",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "maker",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "signer",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "taker",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "makerAmount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "takerAmount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "expiration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "nonce",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "feeRateBps",
                "type": "uint256"
              },
              {
                "internalType": "enum Side",
                "name": "side",
                "type": "uint8"
              },
              {
                "internalType": "enum SignatureType",
                "name": "signatureType",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ],
            "internalType": "struct Order",
            "name": "takerOrder",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "salt",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "maker",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "signer",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "taker",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "makerAmount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "takerAmount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "expiration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "nonce",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "feeRateBps",
                "type": "uint256"
              },
              {
                "internalType": "enum Side",
                "name": "side",
                "type": "uint8"
              },
              {
                "internalType": "enum SignatureType",
                "name": "signatureType",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ],
            "internalType": "struct Order[]",
            "name": "makerOrders",
            "type": "tuple[]"
          },
          {
            "internalType": "uint256",
            "name": "takerFillAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "makerFillAmounts",
            "type": "uint256[]"
          },
          {
            "internalType": "uint256",
            "name": "makerFeeRate",
            "type": "uint256"
          }
        ],
        "name": "matchOrders",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256[]",
            "name": "",
            "type": "uint256[]"
          },
          {
            "internalType": "uint256[]",
            "name": "",
            "type": "uint256[]"
          },
          {
            "internalType": "bytes",
            "name": "",
            "type": "bytes"
          }
        ],
        "name": "onERC1155BatchReceived",
        "outputs": [
          {
            "internalType": "bytes4",
            "name": "",
            "type": "bytes4"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "",
            "type": "bytes"
          }
        ],
        "name": "onERC1155Received",
        "outputs": [
          {
            "internalType": "bytes4",
            "name": "",
            "type": "bytes4"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "admin",
            "type": "address"
          }
        ],
        "name": "removeAdmin",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceAdmin",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "withdrawFees",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "bytecode": {
      "object": "0x60e06040523480156200001157600080fd5b50604051620018da380380620018da833981016040819052620000349162000149565b3360009081526020818152604091829020600190556001600160a01b03831660808190528251635c1548fb60e01b815292519092635c1548fb9260048083019391928290030181865afa15801562000090573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b6919062000149565b6001600160a01b031660a0816001600160a01b0316815250506080516001600160a01b0316633b521d786040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000110573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000136919062000149565b6001600160a01b031660c052506200017b565b6000602082840312156200015c57600080fd5b81516001600160a01b03811681146200017457600080fd5b9392505050565b60805160a05160c05161170d620001cd6000396000818160f3015281816103b2015261092701526000818161028f015281816103d801526109010152600081816102680152610612015261170d6000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638bad0c0a11610081578063d2f7265a1161005b578063d2f7265a14610263578063d8dfeb451461028a578063f23a6e61146102b157600080fd5b80638bad0c0a146101dc578063bc197c81146101e4578063d2539b371461025057600080fd5b8063425c2096116100b2578063425c209614610188578063429b62e51461019b57806370480275146101c957600080fd5b80631785f53c146100d957806322a9339f146100ee57806324d7806c1461013f575b600080fd5b6100ec6100e7366004610d72565b6102c4565b005b6101157f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61017861014d366004610d72565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460011490565b6040519015158152602001610136565b6100ec610196366004610d8d565b61035f565b6101bb6101a9366004610d72565b60006020819052908152604090205481565b604051908152602001610136565b6100ec6101d7366004610d72565b61046c565b6100ec610508565b61021f6101f2366004610e4e565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610136565b6100ec61025e3660046111d8565b61058c565b6101157f000000000000000000000000000000000000000000000000000000000000000081565b6101157f000000000000000000000000000000000000000000000000000000000000000081565b61021f6102bf3660046112e1565b610691565b3360009081526020819052604090205460011461030d576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166000818152602081905260408082208290555133917f787a2e12f4a55b658b8f573c32432ee11a5e8b51677d1e1e937aaf6a0bb5776e91a350565b336000908152602081905260409020546001146103a8576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082156103d6577f00000000000000000000000000000000000000000000000000000000000000006103f8565b7f00000000000000000000000000000000000000000000000000000000000000005b905061040781308686866106bd565b6040805173ffffffffffffffffffffffffffffffffffffffff808416825286166020820152908101849052606081018390527f6ce49f8691a80db5eb4f60cd55b14640529346a7ddf9bf8f77a423fa6a10bfdb9060800160405180910390a150505050565b336000908152602081905260409020546001146104b5576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116600081815260208190526040808220600190555133917ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc91a350565b33600090815260208190526040902054600114610551576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152602081905260408082208290555182917f787a2e12f4a55b658b8f573c32432ee11a5e8b51677d1e1e937aaf6a0bb5776e91a3565b336000908152602081905260409020546001146105d5576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fe60f0c0500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e60f0c059061064d90889088908890889060040161151a565b600060405180830381600087803b15801561066757600080fd5b505af115801561067b573d6000803e3d6000fd5b5050505061068a848383610711565b5050505050565b7ff23a6e61000000000000000000000000000000000000000000000000000000005b9695505050505050565b801561068a57816000036107045773ffffffffffffffffffffffffffffffffffffffff841630146106f9576106f485858584610789565b61068a565b6106f485848361079b565b6106f485858585856107ab565b825160005b8181101561068a5782858281518110610731576107316115ea565b60200260200101516101200151111561078157610781858281518110610759576107596115ea565b6020026020010151858381518110610773576107736115ea565b602002602001015185610857565b600101610716565b610795848484846109d1565b50505050565b6107a6838383610a95565b505050565b6040517ff242432a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b15801561083857600080fd5b505af115801561084c573d6000803e3d6000fd5b505050505050505050565b6101208301516000906108b0908383876101400151600181111561087d5761087d611359565b14610888578561089b565b61089b868860a001518960c00151610b4e565b8760a001518860c00151896101400151610b7f565b905060008085610140015160018111156108cc576108cc611359565b146108d85760006108de565b84608001515b905060008086610140015160018111156108fa576108fa611359565b14610925577f0000000000000000000000000000000000000000000000000000000000000000610947565b7f00000000000000000000000000000000000000000000000000000000000000005b905082156109c9576109608130886020015185876106bd565b6020808701516040805173ffffffffffffffffffffffffffffffffffffffff808616825290921692820192909252908101839052606081018490527f18fe0464eb77016dc4e227eb0d690e4002756d82b442143bbfb874548952b5f29060800160405180910390a15b505050505050565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064015b60405180910390fd5b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610a8c565b600082600003610b6057506000610b78565b82610b6b8386611648565b610b759190611685565b90505b9392505050565b6000858711610b90575060006106b3565b6000610b9f8887878787610bd3565b905086600003610bb05790506106b3565b610bbd8787878787610bd3565b610bc790826116c0565b98975050505050505050565b60008515610cbb576000610be8858585610cc4565b9050600081118015610c025750670de0b6b3a76400008111155b15610cb9576000836001811115610c1b57610c1b611359565b03610c6d57610c2c61271082611648565b86610c4883610c4381670de0b6b3a76400006116c0565b610d33565b610c52908a611648565b610c5c9190611648565b610c669190611685565b9150610cb9565b610c81670de0b6b3a7640000612710611648565b86610c9883610c4381670de0b6b3a76400006116c0565b610ca2908a611648565b610cac9190611648565b610cb69190611685565b91505b505b95945050505050565b600080826001811115610cd957610cd9611359565b03610d115782600003610ced576000610d0a565b82610d00670de0b6b3a764000086611648565b610d0a9190611685565b9050610b78565b83600003610d20576000610b75565b83610b6b670de0b6b3a764000085611648565b6000818310610d425781610b78565b5090919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d6d57600080fd5b919050565b600060208284031215610d8457600080fd5b610b7882610d49565b600080600060608486031215610da257600080fd5b610dab84610d49565b95602085013595506040909401359392505050565b60008083601f840112610dd257600080fd5b50813567ffffffffffffffff811115610dea57600080fd5b6020830191508360208260051b8501011115610e0557600080fd5b9250929050565b60008083601f840112610e1e57600080fd5b50813567ffffffffffffffff811115610e3657600080fd5b602083019150836020828501011115610e0557600080fd5b60008060008060008060008060a0898b031215610e6a57600080fd5b610e7389610d49565b9750610e8160208a01610d49565b9650604089013567ffffffffffffffff80821115610e9e57600080fd5b610eaa8c838d01610dc0565b909850965060608b0135915080821115610ec357600080fd5b610ecf8c838d01610dc0565b909650945060808b0135915080821115610ee857600080fd5b50610ef58b828c01610e0c565b999c989b5096995094979396929594505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101a0810167ffffffffffffffff81118282101715610f5c57610f5c610f09565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610fa957610fa9610f09565b604052919050565b803560028110610d6d57600080fd5b803560038110610d6d57600080fd5b600082601f830112610fe057600080fd5b813567ffffffffffffffff811115610ffa57610ffa610f09565b61102b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610f62565b81815284602083860101111561104057600080fd5b816020850160208301376000918101602001919091529392505050565b60006101a0828403121561107057600080fd5b611078610f38565b90508135815261108a60208301610d49565b602082015261109b60408301610d49565b60408201526110ac60608301610d49565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101208083013581830152506101406110ff818401610fb1565b90820152610160611111838201610fc0565b908201526101808281013567ffffffffffffffff81111561113157600080fd5b61113d85828601610fcf565b82840152505092915050565b600067ffffffffffffffff82111561116357611163610f09565b5060051b60200190565b600082601f83011261117e57600080fd5b8135602061119361118e83611149565b610f62565b82815260059290921b840181019181810190868411156111b257600080fd5b8286015b848110156111cd57803583529183019183016111b6565b509695505050505050565b600080600080600060a086880312156111f057600080fd5b853567ffffffffffffffff8082111561120857600080fd5b61121489838a0161105d565b965060209150818801358181111561122b57600080fd5b8801601f81018a1361123c57600080fd5b803561124a61118e82611149565b81815260059190911b8201840190848101908c83111561126957600080fd5b8584015b838110156112a1578035868111156112855760008081fd5b6112938f898389010161105d565b84525091860191860161126d565b5098505050506040880135945060608801359150808211156112c257600080fd5b506112cf8882890161116d565b95989497509295608001359392505050565b60008060008060008060a087890312156112fa57600080fd5b61130387610d49565b955061131160208801610d49565b94506040870135935060608701359250608087013567ffffffffffffffff81111561133b57600080fd5b61134789828a01610e0c565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061139857611398611359565b9052565b6003811061139857611398611359565b6000815180845260005b818110156113d2576020818501810151868301820152016113b6565b818111156113e4576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60006101a0825184526020830151611447602086018273ffffffffffffffffffffffffffffffffffffffff169052565b50604083015161146f604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151611497606086018273ffffffffffffffffffffffffffffffffffffffff169052565b506080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100808401518186015250610120808401518186015250610140808401516114eb82870182611388565b5050610160808401516115008287018261139c565b50506101808084015182828701526106b3838701826113ac565b60808152600061152d6080830187611417565b6020838203818501528187518084528284019150828160051b850101838a0160005b8381101561159b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0878403018552611589838351611417565b9486019492509085019060010161154f565b50506040870189905286810360608801528751808252908401945091505081860160005b828110156115db578151855293830193908301906001016115bf565b50929998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561168057611680611619565b500290565b6000826116bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000828210156116d2576116d2611619565b50039056fea2646970667358221220b510ac004bc049628d3b41bc471e9cb938e6710ca33ed6b33fa3725aed27a52164736f6c634300080f0033",
      "sourceMap": "613:3665:24:-:0;;;918:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;408:10:32;401:6;:18;;;;;;;;;;;;422:1;401:22;;-1:-1:-1;;;;;959:31:24;;;;;;1013:24;;-1:-1:-1;;;1013:24:24;;;;959:31;;1013:22;;:24;;;;;401:18:32;;1013:24:24;;;;;959:31;1013:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1000:37:24;;;-1:-1:-1;;;;;1000:37:24;;;;;1053:8;;-1:-1:-1;;;;;1053:15:24;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1047:23:24;;;-1:-1:-1;613:3665:24;;14:290:42;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:42;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:42:o;:::-;613:3665:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
      "linkReferences": {}
    },
    "deployedBytecode": {
      "object": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c80638bad0c0a11610081578063d2f7265a1161005b578063d2f7265a14610263578063d8dfeb451461028a578063f23a6e61146102b157600080fd5b80638bad0c0a146101dc578063bc197c81146101e4578063d2539b371461025057600080fd5b8063425c2096116100b2578063425c209614610188578063429b62e51461019b57806370480275146101c957600080fd5b80631785f53c146100d957806322a9339f146100ee57806324d7806c1461013f575b600080fd5b6100ec6100e7366004610d72565b6102c4565b005b6101157f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61017861014d366004610d72565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460011490565b6040519015158152602001610136565b6100ec610196366004610d8d565b61035f565b6101bb6101a9366004610d72565b60006020819052908152604090205481565b604051908152602001610136565b6100ec6101d7366004610d72565b61046c565b6100ec610508565b61021f6101f2366004610e4e565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610136565b6100ec61025e3660046111d8565b61058c565b6101157f000000000000000000000000000000000000000000000000000000000000000081565b6101157f000000000000000000000000000000000000000000000000000000000000000081565b61021f6102bf3660046112e1565b610691565b3360009081526020819052604090205460011461030d576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166000818152602081905260408082208290555133917f787a2e12f4a55b658b8f573c32432ee11a5e8b51677d1e1e937aaf6a0bb5776e91a350565b336000908152602081905260409020546001146103a8576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082156103d6577f00000000000000000000000000000000000000000000000000000000000000006103f8565b7f00000000000000000000000000000000000000000000000000000000000000005b905061040781308686866106bd565b6040805173ffffffffffffffffffffffffffffffffffffffff808416825286166020820152908101849052606081018390527f6ce49f8691a80db5eb4f60cd55b14640529346a7ddf9bf8f77a423fa6a10bfdb9060800160405180910390a150505050565b336000908152602081905260409020546001146104b5576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116600081815260208190526040808220600190555133917ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc91a350565b33600090815260208190526040902054600114610551576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152602081905260408082208290555182917f787a2e12f4a55b658b8f573c32432ee11a5e8b51677d1e1e937aaf6a0bb5776e91a3565b336000908152602081905260409020546001146105d5576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fe60f0c0500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e60f0c059061064d90889088908890889060040161151a565b600060405180830381600087803b15801561066757600080fd5b505af115801561067b573d6000803e3d6000fd5b5050505061068a848383610711565b5050505050565b7ff23a6e61000000000000000000000000000000000000000000000000000000005b9695505050505050565b801561068a57816000036107045773ffffffffffffffffffffffffffffffffffffffff841630146106f9576106f485858584610789565b61068a565b6106f485848361079b565b6106f485858585856107ab565b825160005b8181101561068a5782858281518110610731576107316115ea565b60200260200101516101200151111561078157610781858281518110610759576107596115ea565b6020026020010151858381518110610773576107736115ea565b602002602001015185610857565b600101610716565b610795848484846109d1565b50505050565b6107a6838383610a95565b505050565b6040517ff242432a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b15801561083857600080fd5b505af115801561084c573d6000803e3d6000fd5b505050505050505050565b6101208301516000906108b0908383876101400151600181111561087d5761087d611359565b14610888578561089b565b61089b868860a001518960c00151610b4e565b8760a001518860c00151896101400151610b7f565b905060008085610140015160018111156108cc576108cc611359565b146108d85760006108de565b84608001515b905060008086610140015160018111156108fa576108fa611359565b14610925577f0000000000000000000000000000000000000000000000000000000000000000610947565b7f00000000000000000000000000000000000000000000000000000000000000005b905082156109c9576109608130886020015185876106bd565b6020808701516040805173ffffffffffffffffffffffffffffffffffffffff808616825290921692820192909252908101839052606081018490527f18fe0464eb77016dc4e227eb0d690e4002756d82b442143bbfb874548952b5f29060800160405180910390a15b505050505050565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064015b60405180910390fd5b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610a8c565b600082600003610b6057506000610b78565b82610b6b8386611648565b610b759190611685565b90505b9392505050565b6000858711610b90575060006106b3565b6000610b9f8887878787610bd3565b905086600003610bb05790506106b3565b610bbd8787878787610bd3565b610bc790826116c0565b98975050505050505050565b60008515610cbb576000610be8858585610cc4565b9050600081118015610c025750670de0b6b3a76400008111155b15610cb9576000836001811115610c1b57610c1b611359565b03610c6d57610c2c61271082611648565b86610c4883610c4381670de0b6b3a76400006116c0565b610d33565b610c52908a611648565b610c5c9190611648565b610c669190611685565b9150610cb9565b610c81670de0b6b3a7640000612710611648565b86610c9883610c4381670de0b6b3a76400006116c0565b610ca2908a611648565b610cac9190611648565b610cb69190611685565b91505b505b95945050505050565b600080826001811115610cd957610cd9611359565b03610d115782600003610ced576000610d0a565b82610d00670de0b6b3a764000086611648565b610d0a9190611685565b9050610b78565b83600003610d20576000610b75565b83610b6b670de0b6b3a764000085611648565b6000818310610d425781610b78565b5090919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d6d57600080fd5b919050565b600060208284031215610d8457600080fd5b610b7882610d49565b600080600060608486031215610da257600080fd5b610dab84610d49565b95602085013595506040909401359392505050565b60008083601f840112610dd257600080fd5b50813567ffffffffffffffff811115610dea57600080fd5b6020830191508360208260051b8501011115610e0557600080fd5b9250929050565b60008083601f840112610e1e57600080fd5b50813567ffffffffffffffff811115610e3657600080fd5b602083019150836020828501011115610e0557600080fd5b60008060008060008060008060a0898b031215610e6a57600080fd5b610e7389610d49565b9750610e8160208a01610d49565b9650604089013567ffffffffffffffff80821115610e9e57600080fd5b610eaa8c838d01610dc0565b909850965060608b0135915080821115610ec357600080fd5b610ecf8c838d01610dc0565b909650945060808b0135915080821115610ee857600080fd5b50610ef58b828c01610e0c565b999c989b5096995094979396929594505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101a0810167ffffffffffffffff81118282101715610f5c57610f5c610f09565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610fa957610fa9610f09565b604052919050565b803560028110610d6d57600080fd5b803560038110610d6d57600080fd5b600082601f830112610fe057600080fd5b813567ffffffffffffffff811115610ffa57610ffa610f09565b61102b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610f62565b81815284602083860101111561104057600080fd5b816020850160208301376000918101602001919091529392505050565b60006101a0828403121561107057600080fd5b611078610f38565b90508135815261108a60208301610d49565b602082015261109b60408301610d49565b60408201526110ac60608301610d49565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101208083013581830152506101406110ff818401610fb1565b90820152610160611111838201610fc0565b908201526101808281013567ffffffffffffffff81111561113157600080fd5b61113d85828601610fcf565b82840152505092915050565b600067ffffffffffffffff82111561116357611163610f09565b5060051b60200190565b600082601f83011261117e57600080fd5b8135602061119361118e83611149565b610f62565b82815260059290921b840181019181810190868411156111b257600080fd5b8286015b848110156111cd57803583529183019183016111b6565b509695505050505050565b600080600080600060a086880312156111f057600080fd5b853567ffffffffffffffff8082111561120857600080fd5b61121489838a0161105d565b965060209150818801358181111561122b57600080fd5b8801601f81018a1361123c57600080fd5b803561124a61118e82611149565b81815260059190911b8201840190848101908c83111561126957600080fd5b8584015b838110156112a1578035868111156112855760008081fd5b6112938f898389010161105d565b84525091860191860161126d565b5098505050506040880135945060608801359150808211156112c257600080fd5b506112cf8882890161116d565b95989497509295608001359392505050565b60008060008060008060a087890312156112fa57600080fd5b61130387610d49565b955061131160208801610d49565b94506040870135935060608701359250608087013567ffffffffffffffff81111561133b57600080fd5b61134789828a01610e0c565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061139857611398611359565b9052565b6003811061139857611398611359565b6000815180845260005b818110156113d2576020818501810151868301820152016113b6565b818111156113e4576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60006101a0825184526020830151611447602086018273ffffffffffffffffffffffffffffffffffffffff169052565b50604083015161146f604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151611497606086018273ffffffffffffffffffffffffffffffffffffffff169052565b506080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100808401518186015250610120808401518186015250610140808401516114eb82870182611388565b5050610160808401516115008287018261139c565b50506101808084015182828701526106b3838701826113ac565b60808152600061152d6080830187611417565b6020838203818501528187518084528284019150828160051b850101838a0160005b8381101561159b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0878403018552611589838351611417565b9486019492509085019060010161154f565b50506040870189905286810360608801528751808252908401945091505081860160005b828110156115db578151855293830193908301906001016115bf565b50929998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561168057611680611619565b500290565b6000826116bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000828210156116d2576116d2611619565b50039056fea2646970667358221220b510ac004bc049628d3b41bc471e9cb938e6710ca33ed6b33fa3725aed27a52164736f6c634300080f0033",
      "sourceMap": "613:3665:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;743:135:32;;;;;;:::i;:::-;;:::i;:::-;;883:28:24;;;;;;;;714:42:42;702:55;;;684:74;;672:2;657:18;883:28:24;;;;;;;;1180:101:32;;;;;;:::i;:::-;1257:12;;1234:4;1257:12;;;;;;;;;;;1273:1;1257:17;;1180:101;;;;934:14:42;;927:22;909:41;;897:2;882:18;1180:101:32;769:187:42;2311:247:24;;;;;;:::i;:::-;;:::i;228:41:32:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1434:25:42;;;1422:2;1407:18;228:41:32;1288:177:42;514:128:32;;;;;;:::i;:::-;;:::i;943:134::-;;;:::i;7931:262:21:-;;;;;;:::i;:::-;8134:52;7931:262;;;;;;;;;;;;;;3583:66:42;3571:79;;;3553:98;;3541:2;3526:18;7931:262:21;3409:248:42;1663:458:24;;;;;;:::i;:::-;;:::i;729:35::-;;;;;808;;;;;7695:230:21;;;;;;:::i;:::-;;:::i;743:135:32:-;318:10;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;;;;;;;;;;;;;307:46;808:13:::1;::::0;::::1;824:1;808:13:::0;;;::::1;::::0;;;;;;;:17;;;840:31;853:10:::1;::::0;840:31:::1;::::0;::::1;743:135:::0;:::o;2311:247:24:-;318:10:32;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;;;;;;;;;;;;;307:46;2402:13:24::1;2418:7:::0;;:26:::1;;2441:3;2418:26;;;2428:10;2418:26;2402:42;;2454:47;2464:5;2479:4;2486:2;2490;2494:6;2454:9;:47::i;:::-;2516:35;::::0;;10446:42:42;10515:15;;;10497:34;;10567:15;;10562:2;10547:18;;10540:43;10599:18;;;10592:34;;;10657:2;10642:18;;10635:34;;;2516:35:24::1;::::0;10423:3:42;10408:19;2516:35:24::1;;;;;;;2392:166;2311:247:::0;;;:::o;514:128:32:-;318:10;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;;;;;;;;;;;;;307:46;576:13:::1;::::0;::::1;:6;:13:::0;;;::::1;::::0;;;;;;;592:1:::1;576:17:::0;;608:27;617:10:::1;::::0;608:27:::1;::::0;::::1;514:128:::0;:::o;943:134::-;318:10;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;;;;;;;;;;;;;307:46;1004:10:::1;1018:1;997:18:::0;;;::::1;::::0;;;;;;;:22;;;1034:36;1004:10;;1034:36:::1;::::0;::::1;943:134::o:0;1663:458:24:-;318:10:32;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;;;;;;;;;;;;;307:46;1938:80:24::1;::::0;;;;:20:::1;:8;:20;::::0;::::1;::::0;:80:::1;::::0;1959:10;;1971:11;;1984:15;;2001:16;;1938:80:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2058:56;2070:11;2083:16;2101:12;2058:11;:56::i;:::-;1663:458:::0;;;;;:::o;7695:230:21:-;7871:47;7695:230;;;;;;;;;:::o;494:464:33:-;605:10;;601:351;;635:2;641:1;635:7;631:226;;669:21;;;685:4;669:21;:173;;784:58;818:5;825:4;831:2;835:6;784:33;:58::i;:::-;662:180;;669:173;713:48;743:5;750:2;754:6;713:29;:48::i;631:226::-;877:64;913:5;920:4;926:2;930;934:6;877:35;:64::i;2806:396:24:-;2933:13;;2916:14;2979:217;2990:6;2986:1;:10;2979:217;;;3039:7;3016:6;3023:1;3016:9;;;;;;;;:::i;:::-;;;;;;;:20;;;:30;3013:114;;;3066:46;3077:6;3084:1;3077:9;;;;;;;;:::i;:::-;;;;;;;3088:11;3100:1;3088:14;;;;;;;;:::i;:::-;;;;;;;3104:7;3066:10;:46::i;:::-;3168:3;;2979:217;;1077:175:31;1181:64;1220:5;1228:4;1234:2;1238:6;1181:32;:64::i;:::-;1077:175;;;;:::o;549:147::-;635:54;670:5;678:2;682:6;635:28;:54::i;:::-;549:147;;;:::o;1660:182::-;1778:57;;;;;:31;15209:15:42;;;1778:57:31;;;15191:34:42;15261:15;;;15241:18;;;15234:43;15293:18;;;15286:34;;;15336:18;;;15329:34;;;15400:3;15379:19;;;15372:32;-1:-1:-1;15420:19:42;;;15413:30;1778:31:31;;;;;15460:19:42;;1778:57:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1660:182;;;;;:::o;3421:855:24:-;3625:16;;;;3567:14;;3584:314;;3655:7;3567:14;3676:5;:10;;;:22;;;;;;;;:::i;:::-;;:126;;3792:10;3676:126;;;3701:88;3740:10;3752:5;:17;;;3771:5;:17;;;3701:38;:88::i;:::-;3816:5;:17;;;3847:5;:17;;;3878:5;:10;;;3584:27;:314::i;:::-;3567:331;-1:-1:-1;3909:10:24;;3922:5;:10;;;:22;;;;;;;;:::i;:::-;;:42;;3963:1;3922:42;;;3947:5;:13;;;3922:42;3909:55;-1:-1:-1;3974:13:24;;3990:5;:10;;;:22;;;;;;;;:::i;:::-;;:41;;4021:10;3990:41;;;4015:3;3990:41;3974:57;-1:-1:-1;4115:10:24;;4111:159;;4141:56;4151:5;4166:4;4173:5;:11;;;4186:2;4190:6;4141:9;:56::i;:::-;4235:11;;;;;4216:43;;;10446:42:42;10515:15;;;10497:34;;10567:15;;;10547:18;;;10540:43;;;;10599:18;;;10592:34;;;10657:2;10642:18;;10635:34;;;4216:43:24;;10423:3:42;10408:19;4216:43:24;;;;;;;4111:159;3507:769;;;3421:855;;;:::o;1328:1616:23:-;1466:12;1636:4;1630:11;1778:66;1759:17;1752:93;1892:4;1888:1;1869:17;1865:25;1858:39;1976:2;1971;1952:17;1948:26;1941:38;2056:6;2051:2;2032:17;2028:26;2021:42;2860:2;2857:1;2852:3;2833:17;2830:1;2823:5;2816;2811:52;2379:16;2372:24;2366:2;2348:16;2345:24;2341:1;2337;2331:8;2328:15;2324:46;2321:76;2121:756;2110:767;;;2905:7;2897:40;;;;;;;15692:2:42;2897:40:23;;;15674:21:42;15731:2;15711:18;;;15704:30;15770:22;15750:18;;;15743:50;15810:18;;2897:40:23;;;;;;;;2950:1499;3062:12;3232:4;3226:11;3374:66;3355:17;3348:93;3488:2;3484:1;3465:17;3461:25;3454:37;3568:6;3563:2;3544:17;3540:26;3533:42;4370:2;4367:1;4363:2;4344:17;4341:1;4334:5;4327;4322:51;3891:16;3884:24;3878:2;3860:16;3857:24;3853:1;3849;3843:8;3840:15;3836:46;3833:76;3633:754;3622:765;;;4415:7;4407:35;;;;;;;16041:2:42;4407:35:23;;;16023:21:42;16080:2;16060:18;;;16053:30;16119:17;16099:18;;;16092:45;16154:18;;4407:35:23;15839:339:42;1724:259:29;1866:7;1893:11;1908:1;1893:16;1889:30;;-1:-1:-1;1918:1:29;1911:8;;1889:30;1965:11;1936:26;1951:11;1936:12;:26;:::i;:::-;:40;;;;:::i;:::-;1929:47;;1724:259;;;;;;:::o;830:634::-;1056:7;1098:18;1079:15;:37;1075:51;;-1:-1:-1;1125:1:29;1118:8;;1075:51;1137:11;1151:76;1164:15;1181:13;1196:11;1209;1222:4;1151:12;:76::i;:::-;1137:90;;1320:18;1342:1;1320:23;1316:39;;1352:3;-1:-1:-1;1345:10:29;;1316:39;1378:79;1391:18;1411:13;1426:11;1439;1452:4;1378:12;:79::i;:::-;1372:85;;:3;:85;:::i;:::-;1365:92;830:634;-1:-1:-1;;;;;;;;830:634:29:o;2435:935::-;2622:11;2649:14;;2645:719;;2679:13;2695:47;2711:11;2724;2737:4;2695:15;:47::i;:::-;2679:63;;2768:1;2760:5;:9;:25;;;;;177:8;2773:5;:12;;2760:25;2756:598;;;2817:8;2809:4;:16;;;;;;;;:::i;:::-;;2805:535;;3045:19;232:6;3045:5;:19;:::i;:::-;3027:13;3001:23;3005:5;3012:11;3005:5;177:8;3012:11;:::i;:::-;3001:3;:23::i;:::-;2988:36;;:10;:36;:::i;:::-;:52;;;;:::i;:::-;2987:78;;;;:::i;:::-;2981:84;;2805:535;;;3303:17;177:8;232:6;3303:17;:::i;:::-;3286:13;3260:23;3264:5;3271:11;3264:5;177:8;3271:11;:::i;3260:23::-;3247:36;;:10;:36;:::i;:::-;:52;;;;:::i;:::-;:74;;;;:::i;:::-;3241:80;;2805:535;2665:699;2645:719;2435:935;;;;;;;:::o;3486:281::-;3587:7;;3610:4;:16;;;;;;;;:::i;:::-;;3606:83;;3635:11;3650:1;3635:16;:54;;3688:1;3635:54;;;3674:11;3654:17;177:8;3654:11;:17;:::i;:::-;:31;;;;:::i;:::-;3628:61;;;;3606:83;3706:11;3721:1;3706:16;:54;;3759:1;3706:54;;;3745:11;3725:17;177:8;3725:11;:17;:::i;3376:104::-;3434:7;3464:1;3460;:5;:13;;3472:1;3460:13;;;-1:-1:-1;3468:1:29;;3453:20;-1:-1:-1;3376:104:29:o;14:196:42:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;961:322::-;1038:6;1046;1054;1107:2;1095:9;1086:7;1082:23;1078:32;1075:52;;;1123:1;1120;1113:12;1075:52;1146:29;1165:9;1146:29;:::i;:::-;1136:39;1222:2;1207:18;;1194:32;;-1:-1:-1;1273:2:42;1258:18;;;1245:32;;961:322;-1:-1:-1;;;961:322:42:o;1470:367::-;1533:8;1543:6;1597:3;1590:4;1582:6;1578:17;1574:27;1564:55;;1615:1;1612;1605:12;1564:55;-1:-1:-1;1638:20:42;;1681:18;1670:30;;1667:50;;;1713:1;1710;1703:12;1667:50;1750:4;1742:6;1738:17;1726:29;;1810:3;1803:4;1793:6;1790:1;1786:14;1778:6;1774:27;1770:38;1767:47;1764:67;;;1827:1;1824;1817:12;1764:67;1470:367;;;;;:::o;1842:347::-;1893:8;1903:6;1957:3;1950:4;1942:6;1938:17;1934:27;1924:55;;1975:1;1972;1965:12;1924:55;-1:-1:-1;1998:20:42;;2041:18;2030:30;;2027:50;;;2073:1;2070;2063:12;2027:50;2110:4;2102:6;2098:17;2086:29;;2162:3;2155:4;2146:6;2138;2134:19;2130:30;2127:39;2124:59;;;2179:1;2176;2169:12;2194:1210;2354:6;2362;2370;2378;2386;2394;2402;2410;2463:3;2451:9;2442:7;2438:23;2434:33;2431:53;;;2480:1;2477;2470:12;2431:53;2503:29;2522:9;2503:29;:::i;:::-;2493:39;;2551:38;2585:2;2574:9;2570:18;2551:38;:::i;:::-;2541:48;;2640:2;2629:9;2625:18;2612:32;2663:18;2704:2;2696:6;2693:14;2690:34;;;2720:1;2717;2710:12;2690:34;2759:70;2821:7;2812:6;2801:9;2797:22;2759:70;:::i;:::-;2848:8;;-1:-1:-1;2733:96:42;-1:-1:-1;2936:2:42;2921:18;;2908:32;;-1:-1:-1;2952:16:42;;;2949:36;;;2981:1;2978;2971:12;2949:36;3020:72;3084:7;3073:8;3062:9;3058:24;3020:72;:::i;:::-;3111:8;;-1:-1:-1;2994:98:42;-1:-1:-1;3199:3:42;3184:19;;3171:33;;-1:-1:-1;3216:16:42;;;3213:36;;;3245:1;3242;3235:12;3213:36;;3284:60;3336:7;3325:8;3314:9;3310:24;3284:60;:::i;:::-;2194:1210;;;;-1:-1:-1;2194:1210:42;;-1:-1:-1;2194:1210:42;;;;;;3363:8;-1:-1:-1;;;2194:1210:42:o;3662:184::-;3714:77;3711:1;3704:88;3811:4;3808:1;3801:15;3835:4;3832:1;3825:15;3851:255;3923:2;3917:9;3965:6;3953:19;;4002:18;3987:34;;4023:22;;;3984:62;3981:88;;;4049:18;;:::i;:::-;4085:2;4078:22;3851:255;:::o;4111:334::-;4182:2;4176:9;4238:2;4228:13;;4243:66;4224:86;4212:99;;4341:18;4326:34;;4362:22;;;4323:62;4320:88;;;4388:18;;:::i;:::-;4424:2;4417:22;4111:334;;-1:-1:-1;4111:334:42:o;4450:145::-;4520:20;;4569:1;4559:12;;4549:40;;4585:1;4582;4575:12;4600:154;4679:20;;4728:1;4718:12;;4708:40;;4744:1;4741;4734:12;4759:589;4801:5;4854:3;4847:4;4839:6;4835:17;4831:27;4821:55;;4872:1;4869;4862:12;4821:55;4908:6;4895:20;4934:18;4930:2;4927:26;4924:52;;;4956:18;;:::i;:::-;5000:114;5108:4;5039:66;5032:4;5028:2;5024:13;5020:86;5016:97;5000:114;:::i;:::-;5139:2;5130:7;5123:19;5185:3;5178:4;5173:2;5165:6;5161:15;5157:26;5154:35;5151:55;;;5202:1;5199;5192:12;5151:55;5267:2;5260:4;5252:6;5248:17;5241:4;5232:7;5228:18;5215:55;5315:1;5290:16;;;5308:4;5286:27;5279:38;;;;5294:7;4759:589;-1:-1:-1;;;4759:589:42:o;5353:1285::-;5405:5;5453:6;5441:9;5436:3;5432:19;5428:32;5425:52;;;5473:1;5470;5463:12;5425:52;5495:22;;:::i;:::-;5486:31;;5553:9;5540:23;5533:5;5526:38;5596;5630:2;5619:9;5615:18;5596:38;:::i;:::-;5591:2;5584:5;5580:14;5573:62;5667:38;5701:2;5690:9;5686:18;5667:38;:::i;:::-;5662:2;5655:5;5651:14;5644:62;5738:38;5772:2;5761:9;5757:18;5738:38;:::i;:::-;5733:2;5726:5;5722:14;5715:62;5838:3;5827:9;5823:19;5810:33;5804:3;5797:5;5793:15;5786:58;5905:3;5894:9;5890:19;5877:33;5871:3;5864:5;5860:15;5853:58;5972:3;5961:9;5957:19;5944:33;5938:3;5931:5;5927:15;5920:58;6039:3;6028:9;6024:19;6011:33;6005:3;5998:5;5994:15;5987:58;6064:3;6127:2;6116:9;6112:18;6099:32;6094:2;6087:5;6083:14;6076:56;;6151:3;6214:2;6203:9;6199:18;6186:32;6181:2;6174:5;6170:14;6163:56;;6238:3;6273:40;6309:2;6298:9;6294:18;6273:40;:::i;:::-;6257:14;;;6250:64;6333:3;6368:49;6398:18;;;6368:49;:::i;:::-;6352:14;;;6345:73;6437:3;6476:18;;;6463:32;6518:18;6507:30;;6504:50;;;6550:1;6547;6540:12;6504:50;6586:45;6627:3;6618:6;6607:9;6603:22;6586:45;:::i;:::-;6581:2;6574:5;6570:14;6563:69;;;5353:1285;;;;:::o;6643:188::-;6708:4;6741:18;6733:6;6730:30;6727:56;;;6763:18;;:::i;:::-;-1:-1:-1;6808:1:42;6804:14;6820:4;6800:25;;6643:188::o;6836:667::-;6890:5;6943:3;6936:4;6928:6;6924:17;6920:27;6910:55;;6961:1;6958;6951:12;6910:55;6997:6;6984:20;7023:4;7047:65;7063:48;7108:2;7063:48;:::i;:::-;7047:65;:::i;:::-;7146:15;;;7232:1;7228:10;;;;7216:23;;7212:32;;;7177:12;;;;7256:15;;;7253:35;;;7284:1;7281;7274:12;7253:35;7320:2;7312:6;7308:15;7332:142;7348:6;7343:3;7340:15;7332:142;;;7414:17;;7402:30;;7452:12;;;;7365;;7332:142;;;-1:-1:-1;7492:5:42;6836:667;-1:-1:-1;;;;;;6836:667:42:o;7508:1742::-;7701:6;7709;7717;7725;7733;7786:3;7774:9;7765:7;7761:23;7757:33;7754:53;;;7803:1;7800;7793:12;7754:53;7843:9;7830:23;7872:18;7913:2;7905:6;7902:14;7899:34;;;7929:1;7926;7919:12;7899:34;7952:56;8000:7;7991:6;7980:9;7976:22;7952:56;:::i;:::-;7942:66;;8027:2;8017:12;;8082:2;8071:9;8067:18;8054:32;8111:2;8101:8;8098:16;8095:36;;;8127:1;8124;8117:12;8095:36;8150:24;;8205:4;8197:13;;8193:27;-1:-1:-1;8183:55:42;;8234:1;8231;8224:12;8183:55;8270:2;8257:16;8293:65;8309:48;8354:2;8309:48;:::i;8293:65::-;8392:15;;;8474:1;8470:10;;;;8462:19;;8458:28;;;8423:12;;;;8498:19;;;8495:39;;;8530:1;8527;8520:12;8495:39;8562:2;8558;8554:11;8574:359;8590:6;8585:3;8582:15;8574:359;;;8676:3;8663:17;8712:2;8699:11;8696:19;8693:109;;;8756:1;8785:2;8781;8774:14;8693:109;8827:63;8882:7;8877:2;8863:11;8859:2;8855:20;8851:29;8827:63;:::i;:::-;8815:76;;-1:-1:-1;8911:12:42;;;;8607;;8574:359;;;-1:-1:-1;8952:5:42;-1:-1:-1;;;;9004:2:42;8989:18;;8976:32;;-1:-1:-1;9061:2:42;9046:18;;9033:32;;-1:-1:-1;9077:16:42;;;9074:36;;;9106:1;9103;9096:12;9074:36;;9129:63;9184:7;9173:8;9162:9;9158:24;9129:63;:::i;:::-;7508:1742;;;;-1:-1:-1;7508:1742:42;;9239:3;9224:19;9211:33;;7508:1742;-1:-1:-1;;;7508:1742:42:o;9505:695::-;9611:6;9619;9627;9635;9643;9651;9704:3;9692:9;9683:7;9679:23;9675:33;9672:53;;;9721:1;9718;9711:12;9672:53;9744:29;9763:9;9744:29;:::i;:::-;9734:39;;9792:38;9826:2;9815:9;9811:18;9792:38;:::i;:::-;9782:48;;9877:2;9866:9;9862:18;9849:32;9839:42;;9928:2;9917:9;9913:18;9900:32;9890:42;;9983:3;9972:9;9968:19;9955:33;10011:18;10003:6;10000:30;9997:50;;;10043:1;10040;10033:12;9997:50;10082:58;10132:7;10123:6;10112:9;10108:22;10082:58;:::i;:::-;9505:695;;;;-1:-1:-1;9505:695:42;;-1:-1:-1;9505:695:42;;10159:8;;9505:695;-1:-1:-1;;;9505:695:42:o;10680:184::-;10732:77;10729:1;10722:88;10829:4;10826:1;10819:15;10853:4;10850:1;10843:15;10869:135;10945:1;10938:5;10935:12;10925:46;;10951:18;;:::i;:::-;10980;;10869:135::o;11009:144::-;11094:1;11087:5;11084:12;11074:46;;11100:18;;:::i;11158:530::-;11199:3;11237:5;11231:12;11264:6;11259:3;11252:19;11289:1;11299:162;11313:6;11310:1;11307:13;11299:162;;;11375:4;11431:13;;;11427:22;;11421:29;11403:11;;;11399:20;;11392:59;11328:12;11299:162;;;11479:6;11476:1;11473:13;11470:87;;;11545:1;11538:4;11529:6;11524:3;11520:16;11516:27;11509:38;11470:87;-1:-1:-1;11602:2:42;11590:15;11607:66;11586:88;11577:98;;;;11677:4;11573:109;;11158:530;-1:-1:-1;;11158:530:42:o;11693:1288::-;11741:3;11769:6;11802:5;11796:12;11791:3;11784:25;11855:4;11848:5;11844:16;11838:23;11870:48;11912:4;11907:3;11903:14;11889:12;483:42;472:54;460:67;;406:127;11870:48;;11966:4;11959:5;11955:16;11949:23;11981:50;12025:4;12020:3;12016:14;12000;483:42;472:54;460:67;;406:127;11981:50;;12079:4;12072:5;12068:16;12062:23;12094:50;12138:4;12133:3;12129:14;12113;483:42;472:54;460:67;;406:127;12094:50;;12193:4;12186:5;12182:16;12176:23;12169:4;12164:3;12160:14;12153:47;12249:4;12242:5;12238:16;12232:23;12225:4;12220:3;12216:14;12209:47;12305:4;12298:5;12294:16;12288:23;12281:4;12276:3;12272:14;12265:47;12361:4;12354:5;12350:16;12344:23;12337:4;12332:3;12328:14;12321:47;12387:6;12440:2;12433:5;12429:14;12423:21;12418:2;12413:3;12409:12;12402:43;;12464:6;12517:2;12510:5;12506:14;12500:21;12495:2;12490:3;12486:12;12479:43;;12541:6;12595:2;12588:5;12584:14;12578:21;12608:50;12654:2;12649:3;12645:12;12629:14;12608:50;:::i;:::-;;;12677:6;12731:2;12724:5;12720:14;12714:21;12744:59;12799:2;12794:3;12790:12;12774:14;12744:59;:::i;:::-;;;12822:6;12876:2;12869:5;12865:14;12859:21;12910:2;12905;12900:3;12896:12;12889:24;12929:46;12971:2;12966:3;12962:12;12946:14;12929:46;:::i;12986:1655::-;13395:3;13384:9;13377:22;13358:4;13422:52;13469:3;13458:9;13454:19;13446:6;13422:52;:::i;:::-;13493:2;13543:9;13535:6;13531:22;13526:2;13515:9;13511:18;13504:50;13574:6;13609;13603:13;13640:6;13632;13625:22;13675:2;13667:6;13663:15;13656:22;;13734:2;13724:6;13721:1;13717:14;13709:6;13705:27;13701:36;13772:2;13764:6;13760:15;13793:1;13803:317;13817:6;13814:1;13811:13;13803:317;;;13903:66;13894:6;13886;13882:19;13878:92;13873:3;13866:105;13994:46;14033:6;14024;14018:13;13994:46;:::i;:::-;14098:12;;;;13984:56;-1:-1:-1;14063:15:42;;;;13839:1;13832:9;13803:317;;;-1:-1:-1;;14151:2:42;14136:18;;14129:34;;;14199:22;;;14194:2;14179:18;;14172:50;14275:13;;14297:24;;;14339:15;;;;-1:-1:-1;14275:13:42;-1:-1:-1;;14379:15:42;;;-1:-1:-1;14424:189:42;14440:8;14435:3;14432:17;14424:189;;;14509:15;;14495:30;;14547:14;;;;14586:17;;;;14468:1;14459:11;14424:189;;;-1:-1:-1;14630:5:42;;12986:1655;-1:-1:-1;;;;;;;;;12986:1655:42:o;14646:184::-;14698:77;14695:1;14688:88;14795:4;14792:1;14785:15;14819:4;14816:1;14809:15;16183:184;16235:77;16232:1;16225:88;16332:4;16329:1;16322:15;16356:4;16353:1;16346:15;16372:228;16412:7;16538:1;16470:66;16466:74;16463:1;16460:81;16455:1;16448:9;16441:17;16437:105;16434:131;;;16545:18;;:::i;:::-;-1:-1:-1;16585:9:42;;16372:228::o;16605:274::-;16645:1;16671;16661:189;;16706:77;16703:1;16696:88;16807:4;16804:1;16797:15;16835:4;16832:1;16825:15;16661:189;-1:-1:-1;16864:9:42;;16605:274::o;16884:125::-;16924:4;16952:1;16949;16946:8;16943:34;;;16957:18;;:::i;:::-;-1:-1:-1;16994:9:42;;16884:125::o",
      "linkReferences": {},
      "immutableReferences": {
        "30404": [
          {
            "start": 616,
            "length": 32
          },
          {
            "start": 1554,
            "length": 32
          }
        ],
        "30407": [
          {
            "start": 655,
            "length": 32
          },
          {
            "start": 984,
            "length": 32
          },
          {
            "start": 2305,
            "length": 32
          }
        ],
        "30410": [
          {
            "start": 243,
            "length": 32
          },
          {
            "start": 946,
            "length": 32
          },
          {
            "start": 2343,
            "length": 32
          }
        ]
      }
    },
    "methodIdentifiers": {
      "addAdmin(address)": "70480275",
      "admins(address)": "429b62e5",
      "collateral()": "d8dfeb45",
      "ctf()": "22a9339f",
      "exchange()": "d2f7265a",
      "isAdmin(address)": "24d7806c",
      "matchOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256,uint256[],uint256)": "d2539b37",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
      "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
      "removeAdmin(address)": "1785f53c",
      "renounceAdmin()": "8bad0c0a",
      "withdrawFees(address,uint256,uint256)": "425c2096"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchange\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotAdmin\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdminAddress\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedAdmin\",\"type\":\"address\"}],\"name\":\"RemovedAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ctf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"contract IExchange\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRateBps\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"enum SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"takerOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRateBps\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"enum SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order[]\",\"name\":\"makerOrders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"takerFillAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"makerFillAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"makerFeeRate\",\"type\":\"uint256\"}],\"name\":\"matchOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jon Amenechi (jon@polymarket.com)\",\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"params\":{\"admin\":\"- The address of the admin\"}},\"isAdmin(address)\":{\"params\":{\"addr\":\"- The address to be checked\"}},\"matchOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256,uint256[],uint256)\":{\"params\":{\"makerFeeRate\":\"- The fee rate to be charged to maker orders\",\"makerFillAmounts\":\"- The array of amounts to fill on the maker orders, always in terms of the maker amount\",\"makerOrders\":\"- The array of maker orders to be matched against the active order\",\"takerFillAmount\":\"- The amount to fill on the taker order, always in terms of the maker amount\",\"takerOrder\":\"- The active order to be matched\"}},\"removeAdmin(address)\":{\"params\":{\"admin\":\"- The address of the admin to be removed\"}},\"withdrawFees(address,uint256,uint256)\":{\"params\":{\"amount\":\"- The amount to be withdrawn\",\"id\":\"- The tokenID to be withdrawn. If 0, will be the collateral token.\"}}},\"title\":\"Polymarket CTF Fee Module\",\"version\":1},\"userdoc\":{\"events\":{\"FeeRefunded(address,address,uint256,uint256)\":{\"notice\":\"Emitted when fees are refunded to the order maker\"},\"FeeWithdrawn(address,address,uint256,uint256)\":{\"notice\":\"Emitted when fees are withdrawn from the FeeModule\"},\"NewAdmin(address,address)\":{\"notice\":\"Emitted when a new admin is added\"},\"RemovedAdmin(address,address)\":{\"notice\":\"Emitted when an admin is removed\"}},\"kind\":\"user\",\"methods\":{\"addAdmin(address)\":{\"notice\":\"Adds an Admin\"},\"admins(address)\":{\"notice\":\"Auth\"},\"collateral()\":{\"notice\":\"The Collateral token\"},\"ctf()\":{\"notice\":\"The CTF contract\"},\"exchange()\":{\"notice\":\"The Exchange contract\"},\"isAdmin(address)\":{\"notice\":\"Checks if an address is an admin\"},\"matchOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256,uint256[],uint256)\":{\"notice\":\"Matches a taker order against a list of maker orders, refunding maker order fees if necessary\"},\"removeAdmin(address)\":{\"notice\":\"Removes an admin\"},\"renounceAdmin()\":{\"notice\":\"Renounces Admin privileges from the caller\"},\"withdrawFees(address,uint256,uint256)\":{\"notice\":\"Withdraw collected fees\"}},\"notice\":\"Proxies the CTFExchange contract and refunds maker orders\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FeeModule.sol\":\"FeeModule\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC1155.sol\":{\"keccak256\":\"0x00502c7d7671d9dce495858572943999633ac298f20dbb70476280a93720d412\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://62c6b793ba478e87398fa891a36f936ece0df7f9d4b0d0e1e3a853b8b707c181\",\"dweb:/ipfs/QmeRJVA9f1txCw7JRW31JszJH3a1abQjxJszfF5acsh8sk\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]},\"src/FeeModule.sol\":{\"keccak256\":\"0x44cc9bde3bf773d4aacb42d41c5cece191d74918514eda674ef527fab25f71bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a3339162d2be0c00eb88adf92844fdb1405d1f61cc9ce98d527b6855fb599ce\",\"dweb:/ipfs/QmVtj3b2Ge7dAKpR3C7VgLgwYfmZSbFagFe63ujopq2ugJ\"]},\"src/interfaces/IAuth.sol\":{\"keccak256\":\"0xc3ec2b588856d11ad47ac65bdb9b2e9c94f1c4012b8a4e19e3f243c4e0bb95d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95efcbbadbc71fd721e3731da4114b10bac07cef3587d7de850728e998cbefcf\",\"dweb:/ipfs/QmNuzZksifypzzjmxUhPWqaEy4HKp5TKbyT6N3hMqZvayy\"]},\"src/interfaces/IExchange.sol\":{\"keccak256\":\"0x0dd6882caa2b38ce3c3df34dd063a4cf7a821ef4ece777eb1416d0400c48a3f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2128d2a90e4195750fa40d32430a7ac3722eb600587ec1ced4d6966c558d0c4a\",\"dweb:/ipfs/QmYKscgbD91aJV3Rz6LiT5oLxX8FU9ux1PMCniUNM2oVyW\"]},\"src/interfaces/IFeeModule.sol\":{\"keccak256\":\"0x45b4e92765be621513b3d03965b99f241f15d278105ff7de11f2fd62f0edbe30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7042be8bcb907a1b64489ce986b516b690e3d6abf000675cf119052cbb0e963b\",\"dweb:/ipfs/QmUEpVNqw5yVvSKXtG8D3fnrW2RCu4mHJLsufrj7R1jZbt\"]},\"src/libraries/CalculatorHelper.sol\":{\"keccak256\":\"0x957cf59777920496cd022a68c5f910c9fe8feb5c10a78c2d012944f28d47b462\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c60d495578130cdc59ed936ecb3f7b8b595c497a866a5e1cf6ceda535778150f\",\"dweb:/ipfs/QmVpFbCF4EQLXh8DBsjJkMfm88Q67mAFVYrc68bDxfxAMC\"]},\"src/libraries/Structs.sol\":{\"keccak256\":\"0x65f5cc2f91af56ff05613b99bd6d3dccd3989e8755c363e39c99ab76d57e2e6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d3c9b7be58fadb4513cadd5ec35f6d28fa2d70ef24163adf536b757d8b987a8\",\"dweb:/ipfs/QmVXsYp4wijVtsqSw2NSZAxdbUHf7Mnb7S8ukK57ewJUFi\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x604096a2008c80419564782e485cebdc261295e30093ee422ca1781051c60bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56bb1c91e839c2da9415c3879c8927cadf0dc0d7cb318736a67dfcbf434a0597\",\"dweb:/ipfs/QmNvUCWXWU8JXUXuqn7FLmuiKkqAG7XLZeDvKRSALoQPUZ\"]},\"src/mixins/Auth.sol\":{\"keccak256\":\"0x4952f4e099d5068482ec3668e47662f9a10884beb74e78d15799d4a012d1af48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e3580afafe9d4bf1cfa65e70be1384288c190d72a9c7d8897c58710029b682f\",\"dweb:/ipfs/QmXD5PjnGQp36184uDqDej7JZmWwwZjkcfCJxPHXpvqADU\"]},\"src/mixins/Transfers.sol\":{\"keccak256\":\"0xd4f8ff35dfcda1c035960a1e5bcbde16187d51f438fdc68c33e49fc402fc6162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6760dbdab198ab54066a5de5b133f6b43478a83bb9c116a23f0b1a8268526368\",\"dweb:/ipfs/QmUaGuP4ae7C2XfQW1mESGtBXxVLgjdniTXY6E7VrAMCxj\"]}},\"version\":1}",
    "metadata": {
      "compiler": {
        "version": "0.8.15+commit.e14f2714"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_exchange",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "NotAdmin"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "token",
                "type": "address",
                "indexed": false
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address",
                "indexed": false
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256",
                "indexed": false
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "FeeRefunded",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "token",
                "type": "address",
                "indexed": false
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address",
                "indexed": false
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256",
                "indexed": false
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "FeeWithdrawn",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "admin",
                "type": "address",
                "indexed": true
              },
              {
                "internalType": "address",
                "name": "newAdminAddress",
                "type": "address",
                "indexed": true
              }
            ],
            "type": "event",
            "name": "NewAdmin",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "admin",
                "type": "address",
                "indexed": true
              },
              {
                "internalType": "address",
                "name": "removedAdmin",
                "type": "address",
                "indexed": true
              }
            ],
            "type": "event",
            "name": "RemovedAdmin",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "admin",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "addAdmin"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "admins",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "collateral",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "ctf",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "exchange",
            "outputs": [
              {
                "internalType": "contract IExchange",
                "name": "",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "addr",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "isAdmin",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "struct Order",
                "name": "takerOrder",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "salt",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "maker",
                    "type": "address"
                  },
                  {
                    "internalType": "address",
                    "name": "signer",
                    "type": "address"
                  },
                  {
                    "internalType": "address",
                    "name": "taker",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "makerAmount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "takerAmount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "expiration",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "nonce",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "feeRateBps",
                    "type": "uint256"
                  },
                  {
                    "internalType": "enum Side",
                    "name": "side",
                    "type": "uint8"
                  },
                  {
                    "internalType": "enum SignatureType",
                    "name": "signatureType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "bytes",
                    "name": "signature",
                    "type": "bytes"
                  }
                ]
              },
              {
                "internalType": "struct Order[]",
                "name": "makerOrders",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "salt",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "maker",
                    "type": "address"
                  },
                  {
                    "internalType": "address",
                    "name": "signer",
                    "type": "address"
                  },
                  {
                    "internalType": "address",
                    "name": "taker",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "makerAmount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "takerAmount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "expiration",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "nonce",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "feeRateBps",
                    "type": "uint256"
                  },
                  {
                    "internalType": "enum Side",
                    "name": "side",
                    "type": "uint8"
                  },
                  {
                    "internalType": "enum SignatureType",
                    "name": "signatureType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "bytes",
                    "name": "signature",
                    "type": "bytes"
                  }
                ]
              },
              {
                "internalType": "uint256",
                "name": "takerFillAmount",
                "type": "uint256"
              },
              {
                "internalType": "uint256[]",
                "name": "makerFillAmounts",
                "type": "uint256[]"
              },
              {
                "internalType": "uint256",
                "name": "makerFeeRate",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "matchOrders"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "uint256[]",
                "name": "",
                "type": "uint256[]"
              },
              {
                "internalType": "uint256[]",
                "name": "",
                "type": "uint256[]"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "onERC1155BatchReceived",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "onERC1155Received",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "admin",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "removeAdmin"
          },
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "renounceAdmin"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "withdrawFees"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {
            "addAdmin(address)": {
              "params": {
                "admin": "- The address of the admin"
              }
            },
            "isAdmin(address)": {
              "params": {
                "addr": "- The address to be checked"
              }
            },
            "matchOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256,uint256[],uint256)": {
              "params": {
                "makerFeeRate": "- The fee rate to be charged to maker orders",
                "makerFillAmounts": "- The array of amounts to fill on the maker orders, always in terms of the maker amount",
                "makerOrders": "- The array of maker orders to be matched against the active order",
                "takerFillAmount": "- The amount to fill on the taker order, always in terms of the maker amount",
                "takerOrder": "- The active order to be matched"
              }
            },
            "removeAdmin(address)": {
              "params": {
                "admin": "- The address of the admin to be removed"
              }
            },
            "withdrawFees(address,uint256,uint256)": {
              "params": {
                "amount": "- The amount to be withdrawn",
                "id": "- The tokenID to be withdrawn. If 0, will be the collateral token."
              }
            }
          },
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {
            "addAdmin(address)": {
              "notice": "Adds an Admin"
            },
            "admins(address)": {
              "notice": "Auth"
            },
            "collateral()": {
              "notice": "The Collateral token"
            },
            "ctf()": {
              "notice": "The CTF contract"
            },
            "exchange()": {
              "notice": "The Exchange contract"
            },
            "isAdmin(address)": {
              "notice": "Checks if an address is an admin"
            },
            "matchOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256,uint256[],uint256)": {
              "notice": "Matches a taker order against a list of maker orders, refunding maker order fees if necessary"
            },
            "removeAdmin(address)": {
              "notice": "Removes an admin"
            },
            "renounceAdmin()": {
              "notice": "Renounces Admin privileges from the caller"
            },
            "withdrawFees(address,uint256,uint256)": {
              "notice": "Withdraw collected fees"
            }
          },
          "version": 1
        }
      },
      "settings": {
        "remappings": [
          ":ds-test/=lib/forge-std/lib/ds-test/src/",
          ":forge-std/=lib/forge-std/src/",
          ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
          ":solmate/=lib/solmate/src/"
        ],
        "optimizer": {
          "enabled": true,
          "runs": 1000000
        },
        "metadata": {
          "bytecodeHash": "ipfs"
        },
        "compilationTarget": {
          "src/FeeModule.sol": "FeeModule"
        },
        "libraries": {}
      },
      "sources": {
        "lib/solmate/src/tokens/ERC1155.sol": {
          "keccak256": "0x00502c7d7671d9dce495858572943999633ac298f20dbb70476280a93720d412",
          "urls": [
            "bzz-raw://62c6b793ba478e87398fa891a36f936ece0df7f9d4b0d0e1e3a853b8b707c181",
            "dweb:/ipfs/QmeRJVA9f1txCw7JRW31JszJH3a1abQjxJszfF5acsh8sk"
          ],
          "license": "AGPL-3.0-only"
        },
        "lib/solmate/src/tokens/ERC20.sol": {
          "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
          "urls": [
            "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
            "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
          ],
          "license": "AGPL-3.0-only"
        },
        "lib/solmate/src/utils/SafeTransferLib.sol": {
          "keccak256": "0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a",
          "urls": [
            "bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4",
            "dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU"
          ],
          "license": "AGPL-3.0-only"
        },
        "src/FeeModule.sol": {
          "keccak256": "0x44cc9bde3bf773d4aacb42d41c5cece191d74918514eda674ef527fab25f71bf",
          "urls": [
            "bzz-raw://6a3339162d2be0c00eb88adf92844fdb1405d1f61cc9ce98d527b6855fb599ce",
            "dweb:/ipfs/QmVtj3b2Ge7dAKpR3C7VgLgwYfmZSbFagFe63ujopq2ugJ"
          ],
          "license": "MIT"
        },
        "src/interfaces/IAuth.sol": {
          "keccak256": "0xc3ec2b588856d11ad47ac65bdb9b2e9c94f1c4012b8a4e19e3f243c4e0bb95d6",
          "urls": [
            "bzz-raw://95efcbbadbc71fd721e3731da4114b10bac07cef3587d7de850728e998cbefcf",
            "dweb:/ipfs/QmNuzZksifypzzjmxUhPWqaEy4HKp5TKbyT6N3hMqZvayy"
          ],
          "license": "MIT"
        },
        "src/interfaces/IExchange.sol": {
          "keccak256": "0x0dd6882caa2b38ce3c3df34dd063a4cf7a821ef4ece777eb1416d0400c48a3f1",
          "urls": [
            "bzz-raw://2128d2a90e4195750fa40d32430a7ac3722eb600587ec1ced4d6966c558d0c4a",
            "dweb:/ipfs/QmYKscgbD91aJV3Rz6LiT5oLxX8FU9ux1PMCniUNM2oVyW"
          ],
          "license": "MIT"
        },
        "src/interfaces/IFeeModule.sol": {
          "keccak256": "0x45b4e92765be621513b3d03965b99f241f15d278105ff7de11f2fd62f0edbe30",
          "urls": [
            "bzz-raw://7042be8bcb907a1b64489ce986b516b690e3d6abf000675cf119052cbb0e963b",
            "dweb:/ipfs/QmUEpVNqw5yVvSKXtG8D3fnrW2RCu4mHJLsufrj7R1jZbt"
          ],
          "license": "MIT"
        },
        "src/libraries/CalculatorHelper.sol": {
          "keccak256": "0x957cf59777920496cd022a68c5f910c9fe8feb5c10a78c2d012944f28d47b462",
          "urls": [
            "bzz-raw://c60d495578130cdc59ed936ecb3f7b8b595c497a866a5e1cf6ceda535778150f",
            "dweb:/ipfs/QmVpFbCF4EQLXh8DBsjJkMfm88Q67mAFVYrc68bDxfxAMC"
          ],
          "license": "MIT"
        },
        "src/libraries/Structs.sol": {
          "keccak256": "0x65f5cc2f91af56ff05613b99bd6d3dccd3989e8755c363e39c99ab76d57e2e6f",
          "urls": [
            "bzz-raw://6d3c9b7be58fadb4513cadd5ec35f6d28fa2d70ef24163adf536b757d8b987a8",
            "dweb:/ipfs/QmVXsYp4wijVtsqSw2NSZAxdbUHf7Mnb7S8ukK57ewJUFi"
          ],
          "license": "MIT"
        },
        "src/libraries/TransferHelper.sol": {
          "keccak256": "0x604096a2008c80419564782e485cebdc261295e30093ee422ca1781051c60bf3",
          "urls": [
            "bzz-raw://56bb1c91e839c2da9415c3879c8927cadf0dc0d7cb318736a67dfcbf434a0597",
            "dweb:/ipfs/QmNvUCWXWU8JXUXuqn7FLmuiKkqAG7XLZeDvKRSALoQPUZ"
          ],
          "license": "MIT"
        },
        "src/mixins/Auth.sol": {
          "keccak256": "0x4952f4e099d5068482ec3668e47662f9a10884beb74e78d15799d4a012d1af48",
          "urls": [
            "bzz-raw://1e3580afafe9d4bf1cfa65e70be1384288c190d72a9c7d8897c58710029b682f",
            "dweb:/ipfs/QmXD5PjnGQp36184uDqDej7JZmWwwZjkcfCJxPHXpvqADU"
          ],
          "license": "MIT"
        },
        "src/mixins/Transfers.sol": {
          "keccak256": "0xd4f8ff35dfcda1c035960a1e5bcbde16187d51f438fdc68c33e49fc402fc6162",
          "urls": [
            "bzz-raw://6760dbdab198ab54066a5de5b133f6b43478a83bb9c116a23f0b1a8268526368",
            "dweb:/ipfs/QmUaGuP4ae7C2XfQW1mESGtBXxVLgjdniTXY6E7VrAMCxj"
          ],
          "license": "MIT"
        }
      },
      "version": 1
    },
    "ast": {
      "absolutePath": "src/FeeModule.sol",
      "id": 30652,
      "exportedSymbols": {
        "Auth": [
          31303
        ],
        "CalculatorHelper": [
          31051
        ],
        "ERC1155TokenReceiver": [
          29901
        ],
        "FeeModule": [
          30651
        ],
        "IExchange": [
          30763
        ],
        "IFeeModule": [
          30819
        ],
        "Order": [
          31107
        ],
        "Side": [
          31056
        ],
        "Transfers": [
          31363
        ]
      },
      "nodeType": "SourceUnit",
      "src": "32:4247:24",
      "nodes": [
        {
          "id": 30376,
          "nodeType": "PragmaDirective",
          "src": "32:23:24",
          "nodes": [],
          "literals": [
            "solidity",
            "0.8",
            ".15"
          ]
        },
        {
          "id": 30378,
          "nodeType": "ImportDirective",
          "src": "57:66:24",
          "nodes": [],
          "absolutePath": "lib/solmate/src/tokens/ERC1155.sol",
          "file": "solmate/tokens/ERC1155.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 30652,
          "sourceUnit": 29902,
          "symbolAliases": [
            {
              "foreign": {
                "id": 30377,
                "name": "ERC1155TokenReceiver",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 29901,
                "src": "66:20:24",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 30380,
          "nodeType": "ImportDirective",
          "src": "125:41:24",
          "nodes": [],
          "absolutePath": "src/mixins/Auth.sol",
          "file": "./mixins/Auth.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 30652,
          "sourceUnit": 31304,
          "symbolAliases": [
            {
              "foreign": {
                "id": 30379,
                "name": "Auth",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 31303,
                "src": "134:4:24",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 30382,
          "nodeType": "ImportDirective",
          "src": "167:51:24",
          "nodes": [],
          "absolutePath": "src/mixins/Transfers.sol",
          "file": "./mixins/Transfers.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 30652,
          "sourceUnit": 31364,
          "symbolAliases": [
            {
              "foreign": {
                "id": 30381,
                "name": "Transfers",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 31363,
                "src": "176:9:24",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 30384,
          "nodeType": "ImportDirective",
          "src": "220:55:24",
          "nodes": [],
          "absolutePath": "src/interfaces/IExchange.sol",
          "file": "./interfaces/IExchange.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 30652,
          "sourceUnit": 30764,
          "symbolAliases": [
            {
              "foreign": {
                "id": 30383,
                "name": "IExchange",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 30763,
                "src": "229:9:24",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 30386,
          "nodeType": "ImportDirective",
          "src": "276:57:24",
          "nodes": [],
          "absolutePath": "src/interfaces/IFeeModule.sol",
          "file": "./interfaces/IFeeModule.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 30652,
          "sourceUnit": 30820,
          "symbolAliases": [
            {
              "foreign": {
                "id": 30385,
                "name": "IFeeModule",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 30819,
                "src": "285:10:24",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 30389,
          "nodeType": "ImportDirective",
          "src": "335:54:24",
          "nodes": [],
          "absolutePath": "src/libraries/Structs.sol",
          "file": "./libraries/Structs.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 30652,
          "sourceUnit": 31108,
          "symbolAliases": [
            {
              "foreign": {
                "id": 30387,
                "name": "Order",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 31107,
                "src": "344:5:24",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            },
            {
              "foreign": {
                "id": 30388,
                "name": "Side",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 31056,
                "src": "351:4:24",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 30391,
          "nodeType": "ImportDirective",
          "src": "390:68:24",
          "nodes": [],
          "absolutePath": "src/libraries/CalculatorHelper.sol",
          "file": "./libraries/CalculatorHelper.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 30652,
          "sourceUnit": 31052,
          "symbolAliases": [
            {
              "foreign": {
                "id": 30390,
                "name": "CalculatorHelper",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 31051,
                "src": "399:16:24",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 30651,
          "nodeType": "ContractDefinition",
          "src": "613:3665:24",
          "nodes": [
            {
              "id": 30404,
              "nodeType": "VariableDeclaration",
              "src": "729:35:24",
              "nodes": [],
              "constant": false,
              "documentation": {
                "id": 30401,
                "nodeType": "StructuredDocumentation",
                "src": "691:33:24",
                "text": "@notice The Exchange contract"
              },
              "functionSelector": "d2f7265a",
              "mutability": "immutable",
              "name": "exchange",
              "nameLocation": "756:8:24",
              "scope": 30651,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchange_$30763",
                "typeString": "contract IExchange"
              },
              "typeName": {
                "id": 30403,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 30402,
                  "name": "IExchange",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30763,
                  "src": "729:9:24"
                },
                "referencedDeclaration": 30763,
                "src": "729:9:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IExchange_$30763",
                  "typeString": "contract IExchange"
                }
              },
              "visibility": "public"
            },
            {
              "id": 30407,
              "nodeType": "VariableDeclaration",
              "src": "808:35:24",
              "nodes": [],
              "constant": false,
              "documentation": {
                "id": 30405,
                "nodeType": "StructuredDocumentation",
                "src": "771:32:24",
                "text": "@notice The Collateral token"
              },
              "functionSelector": "d8dfeb45",
              "mutability": "immutable",
              "name": "collateral",
              "nameLocation": "833:10:24",
              "scope": 30651,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 30406,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "808:7:24",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "public"
            },
            {
              "id": 30410,
              "nodeType": "VariableDeclaration",
              "src": "883:28:24",
              "nodes": [],
              "constant": false,
              "documentation": {
                "id": 30408,
                "nodeType": "StructuredDocumentation",
                "src": "850:28:24",
                "text": "@notice The CTF contract"
              },
              "functionSelector": "22a9339f",
              "mutability": "immutable",
              "name": "ctf",
              "nameLocation": "908:3:24",
              "scope": 30651,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 30409,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "883:7:24",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "public"
            },
            {
              "id": 30434,
              "nodeType": "FunctionDefinition",
              "src": "918:159:24",
              "nodes": [],
              "body": {
                "id": 30433,
                "nodeType": "Block",
                "src": "949:128:24",
                "nodes": [],
                "statements": [
                  {
                    "expression": {
                      "id": 30419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 30415,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30404,
                        "src": "959:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchange_$30763",
                          "typeString": "contract IExchange"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 30417,
                            "name": "_exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30412,
                            "src": "980:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 30416,
                          "name": "IExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30763,
                          "src": "970:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IExchange_$30763_$",
                            "typeString": "type(contract IExchange)"
                          }
                        },
                        "id": 30418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "970:20:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchange_$30763",
                          "typeString": "contract IExchange"
                        }
                      },
                      "src": "959:31:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$30763",
                        "typeString": "contract IExchange"
                      }
                    },
                    "id": 30420,
                    "nodeType": "ExpressionStatement",
                    "src": "959:31:24"
                  },
                  {
                    "expression": {
                      "id": 30425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 30421,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30407,
                        "src": "1000:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30422,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30404,
                            "src": "1013:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$30763",
                              "typeString": "contract IExchange"
                            }
                          },
                          "id": 30423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30742,
                          "src": "1013:22:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 30424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1013:24:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1000:37:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 30426,
                    "nodeType": "ExpressionStatement",
                    "src": "1000:37:24"
                  },
                  {
                    "expression": {
                      "id": 30431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 30427,
                        "name": "ctf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30410,
                        "src": "1047:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30428,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30404,
                            "src": "1053:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$30763",
                              "typeString": "contract IExchange"
                            }
                          },
                          "id": 30429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getCtf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30747,
                          "src": "1053:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 30430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1053:17:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1047:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 30432,
                    "nodeType": "ExpressionStatement",
                    "src": "1047:23:24"
                  }
                ]
              },
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "parameters": {
                "id": 30413,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 30412,
                    "mutability": "mutable",
                    "name": "_exchange",
                    "nameLocation": "938:9:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30434,
                    "src": "930:17:24",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 30411,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "930:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "929:19:24"
              },
              "returnParameters": {
                "id": 30414,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "949:0:24"
              },
              "scope": 30651,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "id": 30470,
              "nodeType": "FunctionDefinition",
              "src": "1663:458:24",
              "nodes": [],
              "body": {
                "id": 30469,
                "nodeType": "Block",
                "src": "1884:237:24",
                "nodes": [],
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 30457,
                          "name": "takerOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30438,
                          "src": "1959:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                            "typeString": "struct Order memory"
                          }
                        },
                        {
                          "id": 30458,
                          "name": "makerOrders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30442,
                          "src": "1971:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Order_$31107_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Order memory[] memory"
                          }
                        },
                        {
                          "id": 30459,
                          "name": "takerFillAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30444,
                          "src": "1984:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 30460,
                          "name": "makerFillAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30447,
                          "src": "2001:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                            "typeString": "struct Order memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Order_$31107_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Order memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        ],
                        "expression": {
                          "id": 30454,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30404,
                          "src": "1938:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IExchange_$30763",
                            "typeString": "contract IExchange"
                          }
                        },
                        "id": 30456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "matchOrders",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30762,
                        "src": "1938:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Order_$31107_memory_ptr_$_t_array$_t_struct$_Order_$31107_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                          "typeString": "function (struct Order memory,struct Order memory[] memory,uint256,uint256[] memory) external"
                        }
                      },
                      "id": 30461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1938:80:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 30462,
                    "nodeType": "ExpressionStatement",
                    "src": "1938:80:24"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 30464,
                          "name": "makerOrders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30442,
                          "src": "2070:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Order_$31107_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Order memory[] memory"
                          }
                        },
                        {
                          "id": 30465,
                          "name": "makerFillAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30447,
                          "src": "2083:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 30466,
                          "name": "makerFeeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30449,
                          "src": "2101:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_Order_$31107_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Order memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 30463,
                        "name": "_refundFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30560,
                        "src": "2058:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$31107_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                          "typeString": "function (struct Order memory[] memory,uint256[] memory,uint256)"
                        }
                      },
                      "id": 30467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2058:56:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 30468,
                    "nodeType": "ExpressionStatement",
                    "src": "2058:56:24"
                  }
                ]
              },
              "baseFunctions": [
                30809
              ],
              "documentation": {
                "id": 30435,
                "nodeType": "StructuredDocumentation",
                "src": "1083:575:24",
                "text": "@notice Matches a taker order against a list of maker orders, refunding maker order fees if necessary\n @param takerOrder       - The active order to be matched\n @param makerOrders      - The array of maker orders to be matched against the active order\n @param takerFillAmount  - The amount to fill on the taker order, always in terms of the maker amount\n @param makerFillAmounts - The array of amounts to fill on the maker orders, always in terms of the maker amount\n @param makerFeeRate     - The fee rate to be charged to maker orders"
              },
              "functionSelector": "d2539b37",
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 30452,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 30451,
                    "name": "onlyAdmin",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 31213,
                    "src": "1874:9:24"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "1874:9:24"
                }
              ],
              "name": "matchOrders",
              "nameLocation": "1672:11:24",
              "parameters": {
                "id": 30450,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 30438,
                    "mutability": "mutable",
                    "name": "takerOrder",
                    "nameLocation": "1706:10:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30470,
                    "src": "1693:23:24",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                      "typeString": "struct Order"
                    },
                    "typeName": {
                      "id": 30437,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 30436,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31107,
                        "src": "1693:5:24"
                      },
                      "referencedDeclaration": 31107,
                      "src": "1693:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$31107_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 30442,
                    "mutability": "mutable",
                    "name": "makerOrders",
                    "nameLocation": "1741:11:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30470,
                    "src": "1726:26:24",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$31107_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Order[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 30440,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30439,
                          "name": "Order",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31107,
                          "src": "1726:5:24"
                        },
                        "referencedDeclaration": 31107,
                        "src": "1726:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$31107_storage_ptr",
                          "typeString": "struct Order"
                        }
                      },
                      "id": 30441,
                      "nodeType": "ArrayTypeName",
                      "src": "1726:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Order_$31107_storage_$dyn_storage_ptr",
                        "typeString": "struct Order[]"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 30444,
                    "mutability": "mutable",
                    "name": "takerFillAmount",
                    "nameLocation": "1770:15:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30470,
                    "src": "1762:23:24",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 30443,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1762:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 30447,
                    "mutability": "mutable",
                    "name": "makerFillAmounts",
                    "nameLocation": "1812:16:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30470,
                    "src": "1795:33:24",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 30445,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1795:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 30446,
                      "nodeType": "ArrayTypeName",
                      "src": "1795:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 30449,
                    "mutability": "mutable",
                    "name": "makerFeeRate",
                    "nameLocation": "1846:12:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30470,
                    "src": "1838:20:24",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 30448,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1838:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1683:181:24"
              },
              "returnParameters": {
                "id": 30453,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1884:0:24"
              },
              "scope": 30651,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "id": 30510,
              "nodeType": "FunctionDefinition",
              "src": "2311:247:24",
              "nodes": [],
              "body": {
                "id": 30509,
                "nodeType": "Block",
                "src": "2392:166:24",
                "nodes": [],
                "statements": [
                  {
                    "assignments": [
                      30483
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 30483,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2410:5:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 30509,
                        "src": "2402:13:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 30482,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2402:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 30490,
                    "initialValue": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30484,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30475,
                          "src": "2418:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 30485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2424:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2418:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 30488,
                        "name": "ctf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30410,
                        "src": "2441:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 30489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2418:26:24",
                      "trueExpression": {
                        "id": 30487,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30407,
                        "src": "2428:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2402:42:24"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 30492,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30483,
                          "src": "2464:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 30495,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2479:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FeeModule_$30651",
                                "typeString": "contract FeeModule"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FeeModule_$30651",
                                "typeString": "contract FeeModule"
                              }
                            ],
                            "id": 30494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2471:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30493,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2471:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2471:13:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 30497,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30473,
                          "src": "2486:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 30498,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30475,
                          "src": "2490:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 30499,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30477,
                          "src": "2494:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 30491,
                        "name": "_transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31362,
                        "src": "2454:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,address,uint256,uint256)"
                        }
                      },
                      "id": 30500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2454:47:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 30501,
                    "nodeType": "ExpressionStatement",
                    "src": "2454:47:24"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 30503,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30483,
                          "src": "2529:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 30504,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30473,
                          "src": "2536:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 30505,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30475,
                          "src": "2540:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 30506,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30477,
                          "src": "2544:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 30502,
                        "name": "FeeWithdrawn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30778,
                        "src": "2516:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256,uint256)"
                        }
                      },
                      "id": 30507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2516:35:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 30508,
                    "nodeType": "EmitStatement",
                    "src": "2511:40:24"
                  }
                ]
              },
              "baseFunctions": [
                30818
              ],
              "documentation": {
                "id": 30471,
                "nodeType": "StructuredDocumentation",
                "src": "2127:179:24",
                "text": "@notice Withdraw collected fees\n @param id       - The tokenID to be withdrawn. If 0, will be the collateral token.\n @param amount   - The amount to be withdrawn"
              },
              "functionSelector": "425c2096",
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 30480,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 30479,
                    "name": "onlyAdmin",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 31213,
                    "src": "2382:9:24"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "2382:9:24"
                }
              ],
              "name": "withdrawFees",
              "nameLocation": "2320:12:24",
              "parameters": {
                "id": 30478,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 30473,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "2341:2:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30510,
                    "src": "2333:10:24",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 30472,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2333:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 30475,
                    "mutability": "mutable",
                    "name": "id",
                    "nameLocation": "2353:2:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30510,
                    "src": "2345:10:24",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 30474,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2345:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 30477,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "2365:6:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30510,
                    "src": "2357:14:24",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 30476,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2357:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2332:40:24"
              },
              "returnParameters": {
                "id": 30481,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "2392:0:24"
              },
              "scope": 30651,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "id": 30560,
              "nodeType": "FunctionDefinition",
              "src": "2806:396:24",
              "nodes": [],
              "body": {
                "id": 30559,
                "nodeType": "Block",
                "src": "2906:296:24",
                "nodes": [],
                "statements": [
                  {
                    "assignments": [
                      30524
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 30524,
                        "mutability": "mutable",
                        "name": "length",
                        "nameLocation": "2924:6:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 30559,
                        "src": "2916:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 30523,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2916:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 30527,
                    "initialValue": {
                      "expression": {
                        "id": 30525,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30515,
                        "src": "2933:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$31107_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Order memory[] memory"
                        }
                      },
                      "id": 30526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2933:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2916:30:24"
                  },
                  {
                    "assignments": [
                      30529
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 30529,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2964:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 30559,
                        "src": "2956:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 30528,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2956:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 30531,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 30530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2968:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2956:13:24"
                  },
                  {
                    "body": {
                      "id": 30557,
                      "nodeType": "Block",
                      "src": "2999:197:24",
                      "statements": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 30540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 30535,
                                  "name": "orders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30515,
                                  "src": "3016:6:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Order_$31107_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Order memory[] memory"
                                  }
                                },
                                "id": 30537,
                                "indexExpression": {
                                  "id": 30536,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30529,
                                  "src": "3023:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3016:9:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                                  "typeString": "struct Order memory"
                                }
                              },
                              "id": 30538,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeRateBps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31095,
                              "src": "3016:20:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 30539,
                              "name": "feeRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30520,
                              "src": "3039:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3016:30:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 30552,
                          "nodeType": "IfStatement",
                          "src": "3013:114:24",
                          "trueBody": {
                            "id": 30551,
                            "nodeType": "Block",
                            "src": "3048:79:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 30542,
                                        "name": "orders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30515,
                                        "src": "3077:6:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Order_$31107_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Order memory[] memory"
                                        }
                                      },
                                      "id": 30544,
                                      "indexExpression": {
                                        "id": 30543,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30529,
                                        "src": "3084:1:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3077:9:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                                        "typeString": "struct Order memory"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "id": 30545,
                                        "name": "fillAmounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30518,
                                        "src": "3088:11:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 30547,
                                      "indexExpression": {
                                        "id": 30546,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30529,
                                        "src": "3100:1:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3088:14:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 30548,
                                      "name": "feeRate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 30520,
                                      "src": "3104:7:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                                        "typeString": "struct Order memory"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 30541,
                                    "name": "_refundFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30650,
                                    "src": "3066:10:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$31107_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                                      "typeString": "function (struct Order memory,uint256,uint256)"
                                    }
                                  },
                                  "id": 30549,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3066:46:24",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 30550,
                                "nodeType": "ExpressionStatement",
                                "src": "3066:46:24"
                              }
                            ]
                          }
                        },
                        {
                          "id": 30556,
                          "nodeType": "UncheckedBlock",
                          "src": "3140:46:24",
                          "statements": [
                            {
                              "expression": {
                                "id": 30554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": true,
                                "src": "3168:3:24",
                                "subExpression": {
                                  "id": 30553,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30529,
                                  "src": "3170:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 30555,
                              "nodeType": "ExpressionStatement",
                              "src": "3168:3:24"
                            }
                          ]
                        }
                      ]
                    },
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 30534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 30532,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30529,
                        "src": "2986:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 30533,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30524,
                        "src": "2990:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2986:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 30558,
                    "nodeType": "ForStatement",
                    "src": "2979:217:24"
                  }
                ]
              },
              "documentation": {
                "id": 30511,
                "nodeType": "StructuredDocumentation",
                "src": "2564:237:24",
                "text": "@notice Refund fees for a set of orders\n @param orders       - The array of orders\n @param fillAmounts  - The array of fill amounts for the orders\n @param feeRate      - The fee rate to be charged to maker orders"
              },
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_refundFees",
              "nameLocation": "2815:11:24",
              "parameters": {
                "id": 30521,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 30515,
                    "mutability": "mutable",
                    "name": "orders",
                    "nameLocation": "2842:6:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30560,
                    "src": "2827:21:24",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$31107_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Order[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 30513,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30512,
                          "name": "Order",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31107,
                          "src": "2827:5:24"
                        },
                        "referencedDeclaration": 31107,
                        "src": "2827:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$31107_storage_ptr",
                          "typeString": "struct Order"
                        }
                      },
                      "id": 30514,
                      "nodeType": "ArrayTypeName",
                      "src": "2827:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Order_$31107_storage_$dyn_storage_ptr",
                        "typeString": "struct Order[]"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 30518,
                    "mutability": "mutable",
                    "name": "fillAmounts",
                    "nameLocation": "2867:11:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30560,
                    "src": "2850:28:24",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 30516,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2850:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 30517,
                      "nodeType": "ArrayTypeName",
                      "src": "2850:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 30520,
                    "mutability": "mutable",
                    "name": "feeRate",
                    "nameLocation": "2888:7:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30560,
                    "src": "2880:15:24",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 30519,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2880:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2826:70:24"
              },
              "returnParameters": {
                "id": 30522,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "2906:0:24"
              },
              "scope": 30651,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "id": 30650,
              "nodeType": "FunctionDefinition",
              "src": "3421:855:24",
              "nodes": [],
              "body": {
                "id": 30649,
                "nodeType": "Block",
                "src": "3507:769:24",
                "nodes": [],
                "statements": [
                  {
                    "assignments": [
                      30572
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 30572,
                        "mutability": "mutable",
                        "name": "refund",
                        "nameLocation": "3575:6:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 30649,
                        "src": "3567:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 30571,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3567:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 30600,
                    "initialValue": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 30575,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30564,
                            "src": "3625:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                              "typeString": "struct Order memory"
                            }
                          },
                          "id": 30576,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeRateBps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31095,
                          "src": "3625:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 30577,
                          "name": "feeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30568,
                          "src": "3655:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_Side_$31056",
                              "typeString": "enum Side"
                            },
                            "id": 30582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 30578,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30564,
                                "src": "3676:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                                  "typeString": "struct Order memory"
                                }
                              },
                              "id": 30579,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "side",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31099,
                              "src": "3676:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Side_$31056",
                                "typeString": "enum Side"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 30580,
                                "name": "Side",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31056,
                                "src": "3690:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Side_$31056_$",
                                  "typeString": "type(enum Side)"
                                }
                              },
                              "id": 30581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "BUY",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31054,
                              "src": "3690:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Side_$31056",
                                "typeString": "enum Side"
                              }
                            },
                            "src": "3676:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 30591,
                            "name": "fillAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30566,
                            "src": "3792:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 30592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "3676:126:24",
                          "trueExpression": {
                            "arguments": [
                              {
                                "id": 30585,
                                "name": "fillAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30566,
                                "src": "3740:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 30586,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30564,
                                  "src": "3752:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                                    "typeString": "struct Order memory"
                                  }
                                },
                                "id": 30587,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "makerAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31083,
                                "src": "3752:17:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 30588,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30564,
                                  "src": "3771:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                                    "typeString": "struct Order memory"
                                  }
                                },
                                "id": 30589,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "takerAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31086,
                                "src": "3771:17:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30583,
                                "name": "CalculatorHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31051,
                                "src": "3701:16:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CalculatorHelper_$31051_$",
                                  "typeString": "type(library CalculatorHelper)"
                                }
                              },
                              "id": 30584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "calculateTakingAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30909,
                              "src": "3701:38:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 30590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3701:88:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 30593,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30564,
                            "src": "3816:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                              "typeString": "struct Order memory"
                            }
                          },
                          "id": 30594,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "makerAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31083,
                          "src": "3816:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 30595,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30564,
                            "src": "3847:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                              "typeString": "struct Order memory"
                            }
                          },
                          "id": 30596,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31086,
                          "src": "3847:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 30597,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30564,
                            "src": "3878:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                              "typeString": "struct Order memory"
                            }
                          },
                          "id": 30598,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "side",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31099,
                          "src": "3878:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$31056",
                            "typeString": "enum Side"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_Side_$31056",
                            "typeString": "enum Side"
                          }
                        ],
                        "expression": {
                          "id": 30573,
                          "name": "CalculatorHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31051,
                          "src": "3584:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CalculatorHelper_$31051_$",
                            "typeString": "type(library CalculatorHelper)"
                          }
                        },
                        "id": 30574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "calcRefund",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30884,
                        "src": "3584:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Side_$31056_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256,uint256,enum Side) pure returns (uint256)"
                        }
                      },
                      "id": 30599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3584:314:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3567:331:24"
                  },
                  {
                    "assignments": [
                      30602
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 30602,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "3917:2:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 30649,
                        "src": "3909:10:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 30601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3909:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 30612,
                    "initialValue": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Side_$31056",
                          "typeString": "enum Side"
                        },
                        "id": 30607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 30603,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30564,
                            "src": "3922:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                              "typeString": "struct Order memory"
                            }
                          },
                          "id": 30604,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "side",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31099,
                          "src": "3922:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$31056",
                            "typeString": "enum Side"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 30605,
                            "name": "Side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31056,
                            "src": "3936:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Side_$31056_$",
                              "typeString": "type(enum Side)"
                            }
                          },
                          "id": 30606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "BUY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31054,
                          "src": "3936:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$31056",
                            "typeString": "enum Side"
                          }
                        },
                        "src": "3922:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "30",
                        "id": 30610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3963:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "id": 30611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "3922:42:24",
                      "trueExpression": {
                        "expression": {
                          "id": 30608,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30564,
                          "src": "3947:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                            "typeString": "struct Order memory"
                          }
                        },
                        "id": 30609,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31080,
                        "src": "3947:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3909:55:24"
                  },
                  {
                    "assignments": [
                      30614
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 30614,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3982:5:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 30649,
                        "src": "3974:13:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 30613,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3974:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 30623,
                    "initialValue": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Side_$31056",
                          "typeString": "enum Side"
                        },
                        "id": 30619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 30615,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30564,
                            "src": "3990:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                              "typeString": "struct Order memory"
                            }
                          },
                          "id": 30616,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "side",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31099,
                          "src": "3990:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$31056",
                            "typeString": "enum Side"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 30617,
                            "name": "Side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31056,
                            "src": "4004:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Side_$31056_$",
                              "typeString": "type(enum Side)"
                            }
                          },
                          "id": 30618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "BUY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31054,
                          "src": "4004:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$31056",
                            "typeString": "enum Side"
                          }
                        },
                        "src": "3990:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 30621,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30407,
                        "src": "4021:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 30622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "3990:41:24",
                      "trueExpression": {
                        "id": 30620,
                        "name": "ctf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30410,
                        "src": "4015:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3974:57:24"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 30626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 30624,
                        "name": "refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30572,
                        "src": "4115:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 30625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4124:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4115:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 30648,
                    "nodeType": "IfStatement",
                    "src": "4111:159:24",
                    "trueBody": {
                      "id": 30647,
                      "nodeType": "Block",
                      "src": "4127:143:24",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30628,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30614,
                                "src": "4151:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 30631,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "4166:4:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_FeeModule_$30651",
                                      "typeString": "contract FeeModule"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_FeeModule_$30651",
                                      "typeString": "contract FeeModule"
                                    }
                                  ],
                                  "id": 30630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4158:7:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 30629,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4158:7:24",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 30632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4158:13:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 30633,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30564,
                                  "src": "4173:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                                    "typeString": "struct Order memory"
                                  }
                                },
                                "id": 30634,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "maker",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31071,
                                "src": "4173:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 30635,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30602,
                                "src": "4186:2:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 30636,
                                "name": "refund",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30572,
                                "src": "4190:6:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 30627,
                              "name": "_transfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31362,
                              "src": "4141:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,address,uint256,uint256)"
                              }
                            },
                            "id": 30637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4141:56:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30638,
                          "nodeType": "ExpressionStatement",
                          "src": "4141:56:24"
                        },
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "id": 30640,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30614,
                                "src": "4228:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 30641,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30564,
                                  "src": "4235:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                                    "typeString": "struct Order memory"
                                  }
                                },
                                "id": 30642,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "maker",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31071,
                                "src": "4235:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 30643,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30602,
                                "src": "4248:2:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 30644,
                                "name": "refund",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30572,
                                "src": "4252:6:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 30639,
                              "name": "FeeRefunded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30789,
                              "src": "4216:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,uint256,uint256)"
                              }
                            },
                            "id": 30645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4216:43:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30646,
                          "nodeType": "EmitStatement",
                          "src": "4211:48:24"
                        }
                      ]
                    }
                  }
                ]
              },
              "documentation": {
                "id": 30561,
                "nodeType": "StructuredDocumentation",
                "src": "3208:208:24",
                "text": "@notice Refund fee for an order\n @param order        - The order\n @param fillAmount   - The fill amount for the order\n @param feeRate      - The fee rate to be charged to maker orders"
              },
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_refundFee",
              "nameLocation": "3430:10:24",
              "parameters": {
                "id": 30569,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 30564,
                    "mutability": "mutable",
                    "name": "order",
                    "nameLocation": "3454:5:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30650,
                    "src": "3441:18:24",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$31107_memory_ptr",
                      "typeString": "struct Order"
                    },
                    "typeName": {
                      "id": 30563,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 30562,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31107,
                        "src": "3441:5:24"
                      },
                      "referencedDeclaration": 31107,
                      "src": "3441:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$31107_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 30566,
                    "mutability": "mutable",
                    "name": "fillAmount",
                    "nameLocation": "3469:10:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30650,
                    "src": "3461:18:24",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 30565,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3461:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 30568,
                    "mutability": "mutable",
                    "name": "feeRate",
                    "nameLocation": "3489:7:24",
                    "nodeType": "VariableDeclaration",
                    "scope": 30650,
                    "src": "3481:15:24",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 30567,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3481:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3440:57:24"
              },
              "returnParameters": {
                "id": 30570,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3507:0:24"
              },
              "scope": 30651,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            }
          ],
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 30393,
                "name": "IFeeModule",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30819,
                "src": "635:10:24"
              },
              "id": 30394,
              "nodeType": "InheritanceSpecifier",
              "src": "635:10:24"
            },
            {
              "baseName": {
                "id": 30395,
                "name": "Auth",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31303,
                "src": "647:4:24"
              },
              "id": 30396,
              "nodeType": "InheritanceSpecifier",
              "src": "647:4:24"
            },
            {
              "baseName": {
                "id": 30397,
                "name": "Transfers",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31363,
                "src": "653:9:24"
              },
              "id": 30398,
              "nodeType": "InheritanceSpecifier",
              "src": "653:9:24"
            },
            {
              "baseName": {
                "id": 30399,
                "name": "ERC1155TokenReceiver",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29901,
                "src": "664:20:24"
              },
              "id": 30400,
              "nodeType": "InheritanceSpecifier",
              "src": "664:20:24"
            }
          ],
          "canonicalName": "FeeModule",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 30392,
            "nodeType": "StructuredDocumentation",
            "src": "460:153:24",
            "text": "@title Polymarket CTF Fee Module\n @notice Proxies the CTFExchange contract and refunds maker orders\n @author Jon Amenechi (jon@polymarket.com)"
          },
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            30651,
            29901,
            31363,
            31303,
            30733,
            30710,
            30819,
            30790
          ],
          "name": "FeeModule",
          "nameLocation": "622:9:24",
          "scope": 30652,
          "usedErrors": [
            30695
          ]
        }
      ],
      "license": "MIT"
    },
    "id": 24
  }