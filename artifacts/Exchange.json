{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ctf",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_proxyFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_safeFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FeeTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidComplement",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidNonce",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTokenId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MakingGtRemaining",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MismatchedTokenIds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotCrossing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotTaker",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OrderExpired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OrderFilledOrCancelled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Paused",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooLittleTokensReceived",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FeeCharged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdminAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOperatorAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "NewOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "makerAssetId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerAssetId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "makerAmountFilled",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerAmountFilled",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "OrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "takerOrderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "takerOrderMaker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "makerAssetId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerAssetId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "makerAmountFilled",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerAmountFilled",
          "type": "uint256"
        }
      ],
      "name": "OrdersMatched",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldProxyFactory",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newProxyFactory",
          "type": "address"
        }
      ],
      "name": "ProxyFactoryUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "RemovedAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedOperator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "RemovedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldSafeFactory",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSafeFactory",
          "type": "address"
        }
      ],
      "name": "SafeFactoryUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "token0",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "token1",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "conditionId",
          "type": "bytes32"
        }
      ],
      "name": "TokenRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pauser",
          "type": "address"
        }
      ],
      "name": "TradingPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pauser",
          "type": "address"
        }
      ],
      "name": "TradingUnpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator_",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeRateBps",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "enum SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeRateBps",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "enum SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "cancelOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeRateBps",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "enum SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "fillAmount",
          "type": "uint256"
        }
      ],
      "name": "fillOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeRateBps",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "enum SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "fillAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "fillOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateral",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "token",
          "type": "uint256"
        }
      ],
      "name": "getComplement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "token",
          "type": "uint256"
        }
      ],
      "name": "getConditionId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCtf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxFeeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "getOrderStatus",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isFilledOrCancelled",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "remaining",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderStatus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPolyProxyFactoryImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "getPolyProxyWalletAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProxyFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "getSafeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSafeFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSafeFactoryImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeRateBps",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "enum SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "hashOrder",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incrementNonce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "isValidNonce",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeRateBps",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "enum SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "takerOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeRateBps",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "enum SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "makerOrders",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "takerFillAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "makerFillAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "matchOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "operators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "orderStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isFilledOrCancelled",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentCollectionId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseTrading",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxyFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "token",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "complement",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "conditionId",
          "type": "bytes32"
        }
      ],
      "name": "registerToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "complement",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "conditionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceAdminRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOperatorRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "safeFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newProxyFactory",
          "type": "address"
        }
      ],
      "name": "setProxyFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newSafeFactory",
          "type": "address"
        }
      ],
      "name": "setSafeFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpauseTrading",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "token",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "complement",
          "type": "uint256"
        }
      ],
      "name": "validateComplement",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeRateBps",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "enum SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "validateOrder",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeRateBps",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "enum SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "validateOrderSignature",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "validateTokenId",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101a060405260016000556003805460ff191690553480156200002157600080fd5b506040516200473f3803806200473f8339810160408190526200004491620002d6565b604080518082018252601781527f506f6c796d61726b6574204354462045786368616e67650000000000000000006020808301918252835180850185526001808252603160f81b82840190815233600090815282855287812083905560028552879020919091558451909320815190932060e08490526101008190524660a081815287517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818701819052818a0188905260608201859052608082019390935230818301528851808203909201825260c0019097528651969093019590952087958795879587959194938d938d9387938793909291906080523060c05261012052505050506001600160a01b0382811661014081905290821661016081905260405163095ea7b360e01b81526004810191909152600019602482015263095ea7b3906044016020604051808303816000875af1158015620001a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001cf919062000333565b50620001dd91505062000265565b610180525050600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055506200035e945050505050565b6040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b600060c0516001600160a01b0316306001600160a01b03161480156200028c575060a05146145b1562000299575060805190565b620002b46101205160e051610100516200021c60201b60201c565b905090565b80516001600160a01b0381168114620002d157600080fd5b919050565b60008060008060808587031215620002ed57600080fd5b620002f885620002b9565b93506200030860208601620002b9565b92506200031860408601620002b9565b91506200032860608601620002b9565b905092959194509250565b6000602082840312156200034657600080fd5b815180151581146200035757600080fd5b9392505050565b60805160a05160c05160e05161010051610120516101405161016051610180516143386200040760003960006108970152600081816104c801528181612698015281816129450152818161355201526136820152600081816105eb015281816125e3015281816128ed0152818161358e01526136be01526000612258015260006122a701526000612282015260006121db015260006122050152600061222f01526143386000f3fe608060405234801561001057600080fd5b50600436106103365760003560e01c806370480275116101b2578063d798eff6116100f9578063e60f0c05116100a2578063f698da251161007c578063f698da2514610892578063fa950b48146108b9578063fbddd751146108cc578063fe729aaf146108df57600080fd5b8063e60f0c0514610834578063edef7d8e14610847578063f23a6e611461085a57600080fd5b8063e03ac3d0116100d3578063e03ac3d014610806578063e2eec4051461080e578063e50e4f971461082157600080fd5b8063d798eff6146107bd578063d7fb272f146107d0578063d82da838146107f357600080fd5b8063a287bdf11161015b578063b28c51c011610135578063b28c51c01461073b578063bc197c8114610759578063c10f1a751461079d57600080fd5b8063a287bdf114610702578063a6dfcf8614610715578063ac8a584a1461072857600080fd5b806383b8a5ae1161018c57806383b8a5ae146106d45780639870d7fe146106dc578063a10f3dce146106ef57600080fd5b8063704802751461068357806375d7370a146106965780637ecebe00146106b457600080fd5b8063429b62e5116102815780635893253c1161022a578063627cdcb911610204578063627cdcb91461061c578063654f0ce41461062457806368c7450f146106375780636d70f7ae1461064a57600080fd5b80635893253c146105ad5780635c1548fb146105e95780635c975abb1461060f57600080fd5b8063456068d21161025b578063456068d21461052f57806346423aa7146105375780634a2a11f5146105a557600080fd5b8063429b62e5146104f457806344bea37e146105145780634544f0551461051c57600080fd5b80631785f53c116102e357806334600901116102bd57806334600901146104b35780633b521d78146104c65780633d6d3598146104ec57600080fd5b80631785f53c1461042257806324d7806c146104355780632dff692d1461046f57600080fd5b80631031e36e116103145780631031e36e146103ca578063131e7e1c146103d457806313e7c9d8146103f457600080fd5b806301ffc9a71461033b5780630647ee201461036357806306b9d6911461039d575b600080fd5b61034e6103493660046136e2565b6108f2565b60405190151581526020015b60405180910390f35b61034e610371366004613756565b73ffffffffffffffffffffffffffffffffffffffff919091166000908152600460205260409020541490565b6103a561098b565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161035a565b6103d2610a24565b005b6007546103a59073ffffffffffffffffffffffffffffffffffffffff1681565b610414610402366004613782565b60026020526000908152604090205481565b60405190815260200161035a565b6103d2610430366004613782565b610a78565b61034e610443366004613782565b73ffffffffffffffffffffffffffffffffffffffff166000908152600160208190526040909120541490565b61049c61047d36600461379f565b6008602052600090815260409020805460019091015460ff9091169082565b60408051921515835260208301919091520161035a565b6103d26104c136600461379f565b610b15565b7f00000000000000000000000000000000000000000000000000000000000000006103a5565b6103d2610b5f565b610414610502366004613782565b60016020526000908152604090205481565b610414600081565b6103d261052a366004613782565b610be3565b6103d2610c36565b61058861054536600461379f565b6040805180820190915260008082526020820152506000908152600860209081526040918290208251808401909352805460ff1615158352600101549082015290565b60408051825115158152602092830151928101929092520161035a565b6103e8610414565b6105d46105bb36600461379f565b6005602052600090815260409020805460019091015482565b6040805192835260208301919091520161035a565b7f00000000000000000000000000000000000000000000000000000000000000006103a5565b60035461034e9060ff1681565b6103d2610c88565b6103d26106323660046139f8565b610c92565b6103d2610645366004613a2d565b610cad565b61034e610658366004613782565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205460011490565b6103d2610691366004613782565b610d07565b60075473ffffffffffffffffffffffffffffffffffffffff166103a5565b6104146106c2366004613782565b60046020526000908152604090205481565b6103d2610da7565b6103d26106ea366004613782565b610e2c565b6104146106fd36600461379f565b610eca565b6103a5610710366004613782565b610ee8565b6103d26107233660046139f8565b610f14565b6103d2610736366004613782565b610f1d565b60065473ffffffffffffffffffffffffffffffffffffffff166103a5565b61076c610767366004613ae8565b610fba565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161035a565b6006546103a59073ffffffffffffffffffffffffffffffffffffffff1681565b6103d26107cb366004613c16565b610fe5565b6104146107de36600461379f565b60009081526005602052604090206001015490565b6103d2610801366004613c7a565b6110f5565b6103a5611136565b6103d261081c366004613c9c565b6111a6565b61041461082f3660046139f8565b6111fb565b6103d2610842366004613cd9565b611298565b6103a5610855366004613782565b6113a6565b61076c610868366004613d6b565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b6104147f000000000000000000000000000000000000000000000000000000000000000081565b6103d26108c7366004613dd4565b6113d2565b6103d26108da366004613782565b611409565b6103d26108ed366004613e09565b61145c565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000148061098557507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600654604080517faaf10f42000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163aaf10f429160048083019260209291908290030181865afa1580156109fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1f9190613e4e565b905090565b3360009081526001602081905260409091205414610a6e576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a7661155e565b565b3360009081526001602081905260409091205414610ac2576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020526040808220829055513392917f787a2e12f4a55b658b8f573c32432ee11a5e8b51677d1e1e937aaf6a0bb5776e91a350565b6000818152600560205260408120549003610b5c576040517f3f6cc76800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b33600090815260026020526040902054600114610ba8576040517f7c214f0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152600260205260408082208290555182917ff7262ed0443cc211121ceb1a80d69004f319245615a7488f951f1437fd91642c91a3565b3360009081526001602081905260409091205414610c2d576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b5c816115b6565b3360009081526001602081905260409091205414610c80576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a76611644565b610a766001611699565b6000610c9d826111fb565b9050610ca981836116c7565b5050565b3360009081526001602081905260409091205414610cf7576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d02838383611826565b505050565b3360009081526001602081905260409091205414610d51576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020819052604080832091909155513392917ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc91a350565b3360009081526001602081905260409091205414610df1576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152600160205260408082208290555182917f787a2e12f4a55b658b8f573c32432ee11a5e8b51677d1e1e937aaf6a0bb5776e91a3565b3360009081526001602081905260409091205414610e76576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526002602052604080822060019055513392917ff1e04d73c4304b5ff164f9d10c7473e2a1593b740674a6107975e2a7001c1e5c91a350565b6000610ed582610b15565b5060009081526005602052604090205490565b600061098582610ef6611136565b60075473ffffffffffffffffffffffffffffffffffffffff16611982565b610b5c81611a80565b3360009081526001602081905260409091205414610f67576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116600081815260026020526040808220829055513392917ff7262ed0443cc211121ceb1a80d69004f319245615a7488f951f1437fd91642c91a350565b7fbc197c81000000000000000000000000000000000000000000000000000000005b95945050505050565b600054600203611056576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002600081815533815260209190915260409020546001146110a4576040517f7c214f0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60035460ff16156110e1576040517f9e87fac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110ec828233611b85565b50506001600055565b806110ff83610eca565b14610ca9576040517f66f8620a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600754604080517fa619486e000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163a619486e9160048083019260209291908290030181865afa1580156109fb573d6000803e3d6000fd5b6111c58160400151826020015184846101800151856101600151611bde565b610ca9576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109857fa852566c4e14d00869b6db0220888a9090a13eccdaea03713ff0a3d27bf9767c836000015184602001518560400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001518d61014001518e610160015160405160200161127d9d9c9b9a99989796959493929190613eae565b60405160208183030381529060405280519060200120611c3c565b600054600203611304576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e435900000000000000000000000000000000000000000000604482015260640161104d565b600260008181553381526020919091526040902054600114611352576040517f7c214f0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60035460ff161561138f576040517f9e87fac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61139b84848484611ca5565b505060016000555050565b6000610985826113b461098b565b60065473ffffffffffffffffffffffffffffffffffffffff16611e5c565b805160005b81811015610d02576114018382815181106113f4576113f4613f4c565b6020026020010151611a80565b6001016113d7565b3360009081526001602081905260409091205414611453576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b5c81611ebe565b6000546002036114c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e435900000000000000000000000000000000000000000000604482015260640161104d565b600260008181553381526020919091526040902054600114611516576040517f7c214f0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60035460ff1615611553576040517f9e87fac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110ec828233611f4c565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905560405133907f203c4bd3e526634f661575359ff30de3b0edaba6c2cb1eac60f730b6d2d9d53690600090a2565b60075460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f9726d7faf7429d6b059560dc858ed769377ccdf8b7541eabe12b22548719831f90600090a3600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905560405133907fa1e8a54850dbd7f520bcc09f47bff152294b77b2081da545a7adf531b7ea283b90600090a2565b336000908152600460205260409020546116b4908290613faa565b3360009081526004602052604090205550565b60008160e001511180156116de5750428160e00151105b15611715576040517fc56873ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61171f82826111a6565b6103e88161012001511115611760576040517fcd4e616700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61176d8160800151610b15565b60008281526008602052604090205460ff16156117b6576040517f7b38b76e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117f0816020015182610100015173ffffffffffffffffffffffffffffffffffffffff919091166000908152600460205260409020541490565b610ca9576040517f756688fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8183148061183a575082158061183a575081155b15611871576040517f3f6cc76800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008381526005602052604090205415158061189a575060008281526005602052604090205415155b156118d1576040517f3a81d6fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805180820182528381526020808201848152600087815260058084528582209451855591516001948501558451808601865288815280840187815288835292909352848120925183559051919092015590518291849186917fbc9a2432e8aeb48327246cddd6e872ef452812b4243c04e6bfb786a2cd8faf0d91a48083837fbc9a2432e8aeb48327246cddd6e872ef452812b4243c04e6bfb786a2cd8faf0d60405160405180910390a4505050565b60008061198e8461205a565b8051906020012090506000856040516020016119c6919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001815282825280516020918201207fff000000000000000000000000000000000000000000000000000000000000008285015260609790971b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021840152603583019690965260558083019490945280518083039094018452607590910190525080519201919091209392505050565b602081015173ffffffffffffffffffffffffffffffffffffffff163314611ad3576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611ade826111fb565b600081815260086020526040902080549192509060ff1615611b2c576040517f7b38b76e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117815560405182907f5152abf959f6564662358c2e52b702259b78bac5ee7842a0f01937e670efcc7d90600090a2505050565b825160005b81811015611bd757611bcf858281518110611ba757611ba7613f4c565b6020026020010151858381518110611bc157611bc1613f4c565b602002602001015185611f4c565b600101611b8a565b5050505050565b600080826002811115611bf357611bf3613e6b565b03611c0b57611c04868686866120eb565b9050610fdc565b6002826002811115611c1f57611c1f613e6b565b03611c3057611c0486868686612139565b611c048686868661218d565b6000610985611c496121c1565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b81600080611cb387846122f5565b91509150600080611cc389612342565b91509150611cd78960200151308488612379565b611ce28989886123a3565b611cec84826123f5565b6101208a0151909450600090611d2e90828c61014001516001811115611d1457611d14613e6b565b14611d1f5787611d21565b865b88888e610140015161243d565b9050611d4b308b60200151848489611d469190613fc2565b612379565b611d573033848461252d565b6000611d6284612596565b90508015611d7a57611d7a308c602001518684612379565b60208b8101516040805187815292830186905282018990526060820188905260808201849052309173ffffffffffffffffffffffffffffffffffffffff9091169087907fd0a08e8c493f9c94f29311604c9de1b4e8c8d4c06bd0c789af57f2d65bfec0f69060a00160405180910390a46020808c01516040805187815292830186905282018990526060820188905273ffffffffffffffffffffffffffffffffffffffff169086907f63bf4d16b7fa898ef4c4b2b6d90fd201e9c56313b65638af6088d149d2ce956c9060800160405180910390a35050505050505050505050565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606085901b166020820152600090611eb49083908590603401604051602081830303815290604052805190602001206126c6565b90505b9392505050565b60065460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f3053c6252a932554235c173caffc1913604dba3a41cee89516f631c4a1a50a3790600090a3600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b81600080611f5a86846122f5565b6101208801519193509150600090611fa790825b8961014001516001811115611f8557611f85613e6b565b14611f905785611f92565b845b8960a001518a60c001518b610140015161243d565b9050600080611fb589612342565b91509150611fcf338a60200151838689611d469190613fc2565b611fdf8960200151888489612379565b6020898101516040805185815292830184905282018890526060820187905260808201859052339173ffffffffffffffffffffffffffffffffffffffff9091169086907fd0a08e8c493f9c94f29311604c9de1b4e8c8d4c06bd0c789af57f2d65bfec0f69060a00160405180910390a4505050505050505050565b6060604051806101a00160405280610171815260200161419261017191396040805173ffffffffffffffffffffffffffffffffffffffff8516602082015201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526120d59291602001614005565b6040516020818303038152906040529050919050565b60008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614801561212e575061212e858484612763565b90505b949350505050565b6000612146858484612763565b801561212e57508373ffffffffffffffffffffffffffffffffffffffff1661216d86610ee8565b73ffffffffffffffffffffffffffffffffffffffff161495945050505050565b600061219a858484612763565b801561212e57508373ffffffffffffffffffffffffffffffffffffffff1661216d866113a6565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614801561222757507f000000000000000000000000000000000000000000000000000000000000000046145b1561225157507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008061230584606001516127a5565b61230e846111fb565b905061231a81856116c7565b61232d838560a001518660c00151612817565b915061233a81858561283e565b509250929050565b60008080836101400151600181111561235d5761235d613e6b565b0361236d57505060800151600091565b50506080015190600090565b816000036123915761238c8484836128eb565b61239d565b61239d84848484612940565b50505050565b815160005b81811015611bd7576123ed858583815181106123c6576123c6613f4c565b60200260200101518584815181106123e0576123e0613f4c565b602002602001015161296d565b6001016123a8565b60008061240183612596565b905083811015611eb7576040517fdf4d808000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008515610fdc576000612452858585612a52565b905060008111801561246c5750670de0b6b3a76400008111155b1561252357600083600181111561248557612485613e6b565b036124d75761249661271082614034565b866124b2836124ad81670de0b6b3a7640000613fc2565b612ac1565b6124bc908a614034565b6124c69190614034565b6124d09190614071565b9150612523565b6124eb670de0b6b3a7640000612710614034565b86612502836124ad81670de0b6b3a7640000613fc2565b61250c908a614034565b6125169190614034565b6125209190614071565b91505b5095945050505050565b801561239d5761253f84848484612379565b604080518381526020810183905273ffffffffffffffffffffffffffffffffffffffff8516917facffcc86834d0f1a64b0d5a675798deed6ff0bcfc2231edd3480e7288dba7ff4910160405180910390a250505050565b60008160000361264f576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa15801561262b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098591906140ac565b6040517efdd58e0000000000000000000000000000000000000000000000000000000081523060048201526024810183905273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169062fdd58e9060440161260e565b6000806126d38585612ad7565b8051602091820120604080517fff000000000000000000000000000000000000000000000000000000000000008185015260609890981b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021890152603588019590955260558088019190915284518088039091018152607590960190935250508251920191909120919050565b60008373ffffffffffffffffffffffffffffffffffffffff166127868484612c5a565b73ffffffffffffffffffffffffffffffffffffffff1614949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116158015906127e0575073ffffffffffffffffffffffffffffffffffffffff81163314155b15610b5c576040517f5211a07900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260000361282957506000611eb7565b826128348386614034565b611eb49190614071565b6000838152600860205260409020600181015490811561285e5781612864565b8360a001515b9150818311156128a0576040517fe2cc6ad600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6128aa8383613fc2565b9150816000036128de5780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781555b6001018190559392505050565b7f00000000000000000000000000000000000000000000000000000000000000003073ffffffffffffffffffffffffffffffffffffffff8516036129345761238c818484612c7e565b61239d81858585612c89565b61239d7f000000000000000000000000000000000000000000000000000000000000000085858585612c95565b60006129798484612d41565b9050612986848483612ddd565b8160008061299486846122f5565b61012088015191935091506000906129ac9082611f6e565b90506000806129ba89612342565b915091506129d186868b6020015185858c89612e89565b6020808b01518a820151604080518681529384018590528301899052606083018890526080830186905273ffffffffffffffffffffffffffffffffffffffff9182169291169086907fd0a08e8c493f9c94f29311604c9de1b4e8c8d4c06bd0c789af57f2d65bfec0f69060a00160405180910390a450505050505050505050565b600080826001811115612a6757612a67613e6b565b03612a9f5782600003612a7b576000612a98565b82612a8e670de0b6b3a764000086614034565b612a989190614071565b9050611eb7565b83600003612aae576000611eb4565b83612834670de0b6b3a764000085614034565b6000818310612ad05781611eb7565b5090919050565b6040805160008082526020820190925260609190612af890604481016140c5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f52e831dd000000000000000000000000000000000000000000000000000000001790528151606380825260a082019093529293506000929190820181803683370190505090507f3d3d606380380380913d393d73bebebebebebebebebebebebebebebebebebebe60208201526c010000000000000000000000008502602d8201527f5af4602a57600080fd5b602d8060366000396000f3363d3d373d3d3d363d73be60418201526c01000000000000000000000000840260608201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060748201528082604051602001612c41929190614005565b6040516020818303038152906040529250505092915050565b6000806000612c698585612f09565b91509150612c7681612f4e565b509392505050565b610d02838383613101565b61239d848484846131ba565b6040517ff242432a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b158015612d2257600080fd5b505af1158015612d36573d6000803e3d6000fd5b505050505050505050565b6000808361014001516001811115612d5b57612d5b613e6b565b148015612d7e575060008261014001516001811115612d7c57612d7c613e6b565b145b15612d8b57506001610985565b60018361014001516001811115612da457612da4613e6b565b148015612dc7575060018261014001516001811115612dc557612dc5613e6b565b145b15612dd457506002610985565b50600092915050565b612de78383613279565b612e1d576040517f7f9a6f4600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816002811115612e3157612e31613e6b565b03612e77578160800151836080015114610d02576040517fa0b9446500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d02836080015183608001516110f5565b612e958530868a612379565b612ea287878686866132c3565b85612eac84612596565b1015612ee4576040517fdf4d808000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612ef4308685611d46858b613fc2565b612f003033858461252d565b50505050505050565b6000808251604103612f3f5760208301516040840151606085015160001a612f338782858561334b565b94509450505050612f47565b506000905060025b9250929050565b6000816004811115612f6257612f62613e6b565b03612f6a5750565b6001816004811115612f7e57612f7e613e6b565b03612fe5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161104d565b6002816004811115612ff957612ff9613e6b565b03613060576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161104d565b600381600481111561307457613074613e6b565b03610b5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161104d565b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061239d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161104d565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080611bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015260640161104d565b60008260c0015160001480613290575060c0820151155b1561329d57506001610985565b611eb76132a98461343a565b6132b28461343a565b856101400151856101400151613454565b60008160028111156132d7576132d7613e6b565b14611bd75760018160028111156132f0576132f0613e6b565b036133165760008281526005602052604090206001015461331190856134ee565b611bd7565b600281600281111561332a5761332a613e6b565b03611bd757600083815260056020526040902060010154613311908661361e565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156133825750600090506003613431565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156133d6573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661342a57600060019250925050613431565b9150600090505b94509492505050565b60006109858260a001518360c00151846101400151612a52565b60008083600181111561346957613469613e6b565b036134ad57600082600181111561348257613482613e6b565b036134a357670de0b6b3a764000061349a8587613faa565b10159050612131565b5082841015612131565b60008260018111156134c1576134c1613e6b565b036134d0575083831015612131565b670de0b6b3a76400006134e38587613faa565b111595945050505050565b60408051600280825260608201835260009260208301908036833701905050905060018160008151811061352457613524613f4c565b60200260200101818152505060028160018151811061354557613545613f4c565b60209081029190910101527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166372ce42757f00000000000000000000000000000000000000000000000000000000000000005b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526135f09190600090889087908990600401614116565b600060405180830381600087803b15801561360a57600080fd5b505af1158015612f00573d6000803e3d6000fd5b60408051600280825260608201835260009260208301908036833701905050905060018160008151811061365457613654613f4c565b60200260200101818152505060028160018151811061367557613675613f4c565b60209081029190910101527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639e7212ad7f00000000000000000000000000000000000000000000000000000000000000006135ae565b6000602082840312156136f457600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611eb757600080fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610b5c57600080fd5b803561375181613724565b919050565b6000806040838503121561376957600080fd5b823561377481613724565b946020939093013593505050565b60006020828403121561379457600080fd5b8135611eb781613724565b6000602082840312156137b157600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101a0810167ffffffffffffffff8111828210171561380b5761380b6137b8565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613858576138586137b8565b604052919050565b80356002811061375157600080fd5b80356003811061375157600080fd5b600082601f83011261388f57600080fd5b813567ffffffffffffffff8111156138a9576138a96137b8565b6138da60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601613811565b8181528460208386010111156138ef57600080fd5b816020850160208301376000918101602001919091529392505050565b60006101a0828403121561391f57600080fd5b6139276137e7565b90508135815261393960208301613746565b602082015261394a60408301613746565b604082015261395b60608301613746565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101208083013581830152506101406139ae818401613860565b908201526101606139c083820161386f565b908201526101808281013567ffffffffffffffff8111156139e057600080fd5b6139ec8582860161387e565b82840152505092915050565b600060208284031215613a0a57600080fd5b813567ffffffffffffffff811115613a2157600080fd5b6121318482850161390c565b600080600060608486031215613a4257600080fd5b505081359360208301359350604090920135919050565b600067ffffffffffffffff821115613a7357613a736137b8565b5060051b60200190565b600082601f830112613a8e57600080fd5b81356020613aa3613a9e83613a59565b613811565b82815260059290921b84018101918181019086841115613ac257600080fd5b8286015b84811015613add5780358352918301918301613ac6565b509695505050505050565b600080600080600060a08688031215613b0057600080fd5b8535613b0b81613724565b94506020860135613b1b81613724565b9350604086013567ffffffffffffffff80821115613b3857600080fd5b613b4489838a01613a7d565b94506060880135915080821115613b5a57600080fd5b613b6689838a01613a7d565b93506080880135915080821115613b7c57600080fd5b50613b898882890161387e565b9150509295509295909350565b600082601f830112613ba757600080fd5b81356020613bb7613a9e83613a59565b82815260059290921b84018101918181019086841115613bd657600080fd5b8286015b84811015613add57803567ffffffffffffffff811115613bfa5760008081fd5b613c088986838b010161390c565b845250918301918301613bda565b60008060408385031215613c2957600080fd5b823567ffffffffffffffff80821115613c4157600080fd5b613c4d86838701613b96565b93506020850135915080821115613c6357600080fd5b50613c7085828601613a7d565b9150509250929050565b60008060408385031215613c8d57600080fd5b50508035926020909101359150565b60008060408385031215613caf57600080fd5b82359150602083013567ffffffffffffffff811115613ccd57600080fd5b613c708582860161390c565b60008060008060808587031215613cef57600080fd5b843567ffffffffffffffff80821115613d0757600080fd5b613d138883890161390c565b95506020870135915080821115613d2957600080fd5b613d3588838901613b96565b9450604087013593506060870135915080821115613d5257600080fd5b50613d5f87828801613a7d565b91505092959194509250565b600080600080600060a08688031215613d8357600080fd5b8535613d8e81613724565b94506020860135613d9e81613724565b93506040860135925060608601359150608086013567ffffffffffffffff811115613dc857600080fd5b613b898882890161387e565b600060208284031215613de657600080fd5b813567ffffffffffffffff811115613dfd57600080fd5b61213184828501613b96565b60008060408385031215613e1c57600080fd5b823567ffffffffffffffff811115613e3357600080fd5b613e3f8582860161390c565b95602094909401359450505050565b600060208284031215613e6057600080fd5b8151611eb781613724565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110613eaa57613eaa613e6b565b9052565b60006101a0820190508e82528d602083015273ffffffffffffffffffffffffffffffffffffffff808e166040840152808d166060840152808c166080840152508960a08301528860c08301528760e083015286610100830152856101208301528461014083015260028410613f2557613f25613e6b565b83610160830152613f3a610180830184613e9a565b9e9d5050505050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115613fbd57613fbd613f7b565b500190565b600082821015613fd457613fd4613f7b565b500390565b60005b83811015613ff4578181015183820152602001613fdc565b8381111561239d5750506000910152565b60008351614017818460208801613fd9565b83519083019061402b818360208801613fd9565b01949350505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561406c5761406c613f7b565b500290565b6000826140a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000602082840312156140be57600080fd5b5051919050565b60208152600082518060208401526140e4816040850160208701613fd9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600060a0820173ffffffffffffffffffffffffffffffffffffffff881683526020878185015286604085015260a0606085015281865180845260c086019150828801935060005b818110156141795784518352938301939183019160010161415d565b5050809350505050826080830152969550505050505056fe608060405234801561001057600080fd5b5060405161017138038061017183398101604081905261002f916100b9565b6001600160a01b0381166100945760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100e7565b6000602082840312156100ca578081fd5b81516001600160a01b03811681146100e0578182fd5b9392505050565b607c806100f56000396000f3fe6080604052600080546001600160a01b0316813563530ca43760e11b1415602857808252602082f35b3682833781823684845af490503d82833e806041573d82fd5b503d81f3fea264697066735822122015938e3bf2c49f5df5c1b7f9569fa85cc5d6f3074bb258a2dc0c7e299bc9e33664736f6c63430008040033a2646970667358221220c9489efe43f1a39cf1d76c8f3ba9f07e5c0a07a9579604410a5a24547e01a84064736f6c634300080f0033",
    "sourceMap": "766:3634:54:-:0;;;322:1:27;297:26;;161::77;;;-1:-1:-1;;161:26:77;;;986:181:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;370:132:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;370:132:75;;;;;;690:10:73;-1:-1:-1;683:18:73;;;;;;;;;:22;;;715:9;:21;;;;;:25;;;;2470:22:18;;;;;2526:25;;;;;2707;;;;2742:31;;;;2802:13;2783:32;;;;3562:73;;2580:117;3562:73;;;1485:25:87;;;1526:18;;;1519:34;;;-1:-1:-1;1569:18:87;;1562:34;;;1612:18;;;1605:34;;;;3629:4:18;1655:19:87;;;1648:61;3562:73:18;;;;;;;;;;1457:19:87;;3562:73:18;;;3552:84;;;;;;;;;;1131:13:54;;1146:12;;1131:13;;1146:12;;370:132:75;;;1093:11:54;;1106:4;;370:132:75;;;;2470:22:18;;2526:25;2580:117;2825:85;;2943:4;2920:28;;2958:21;;-1:-1:-1;;;;;;;;;363:24:72;;;;;;;397:10;;;;;;;417:50;;-1:-1:-1;;;417:50:72;;;;;839:51:87;;;;-1:-1:-1;;906:18:87;;;899:34;417:26:72;;812:18:87;;417:50:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;475:20:75::1;::::0;-1:-1:-1;;475:18:75::1;:20::i;:::-;457:38;::::0;-1:-1:-1;;859:12:78;:28;;-1:-1:-1;;;;;859:28:78;;;-1:-1:-1;;;;;;859:28:78;;;;;;;897:11;:26;;;;;;;;;;;-1:-1:-1;766:3634:54;;-1:-1:-1;;;;;766:3634:54;3386:257:18;3562:73;;;;;;1485:25:87;;;1526:18;;;1519:34;;;1569:18;;;1562:34;;;3606:13:18;1612:18:87;;;1605:34;3629:4:18;1655:19:87;;;1648:61;3526:7:18;;1457:19:87;;3562:73:18;;;;;;;;;;;;3552:84;;;;;;3545:91;;3386:257;;;;;:::o;3072:308::-;3125:7;3165:12;;-1:-1:-1;;;;;3148:29:18;3156:4;-1:-1:-1;;;;;3148:29:18;;:66;;;;;3198:16;;3181:13;:33;3148:66;3144:230;;;-1:-1:-1;3237:24:18;;;3072:308::o;3144:230::-;3299:64;3321:10;;3333:12;;3347:15;;3299:21;;;:64;;:::i;:::-;3292:71;;3072:308;:::o;14:177:87:-;93:13;;-1:-1:-1;;;;;135:31:87;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:464::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;527:59;;605:49;650:2;639:9;635:18;605:49;:::i;:::-;595:59;;196:464;;;;;;;:::o;944:277::-;1011:6;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1112:9;1106:16;1165:5;1158:13;1151:21;1144:5;1141:32;1131:60;;1187:1;1184;1177:12;1131:60;1210:5;944:277;-1:-1:-1;;;944:277:87:o;1226:489::-;766:3634:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106103365760003560e01c806370480275116101b2578063d798eff6116100f9578063e60f0c05116100a2578063f698da251161007c578063f698da2514610892578063fa950b48146108b9578063fbddd751146108cc578063fe729aaf146108df57600080fd5b8063e60f0c0514610834578063edef7d8e14610847578063f23a6e611461085a57600080fd5b8063e03ac3d0116100d3578063e03ac3d014610806578063e2eec4051461080e578063e50e4f971461082157600080fd5b8063d798eff6146107bd578063d7fb272f146107d0578063d82da838146107f357600080fd5b8063a287bdf11161015b578063b28c51c011610135578063b28c51c01461073b578063bc197c8114610759578063c10f1a751461079d57600080fd5b8063a287bdf114610702578063a6dfcf8614610715578063ac8a584a1461072857600080fd5b806383b8a5ae1161018c57806383b8a5ae146106d45780639870d7fe146106dc578063a10f3dce146106ef57600080fd5b8063704802751461068357806375d7370a146106965780637ecebe00146106b457600080fd5b8063429b62e5116102815780635893253c1161022a578063627cdcb911610204578063627cdcb91461061c578063654f0ce41461062457806368c7450f146106375780636d70f7ae1461064a57600080fd5b80635893253c146105ad5780635c1548fb146105e95780635c975abb1461060f57600080fd5b8063456068d21161025b578063456068d21461052f57806346423aa7146105375780634a2a11f5146105a557600080fd5b8063429b62e5146104f457806344bea37e146105145780634544f0551461051c57600080fd5b80631785f53c116102e357806334600901116102bd57806334600901146104b35780633b521d78146104c65780633d6d3598146104ec57600080fd5b80631785f53c1461042257806324d7806c146104355780632dff692d1461046f57600080fd5b80631031e36e116103145780631031e36e146103ca578063131e7e1c146103d457806313e7c9d8146103f457600080fd5b806301ffc9a71461033b5780630647ee201461036357806306b9d6911461039d575b600080fd5b61034e6103493660046136e2565b6108f2565b60405190151581526020015b60405180910390f35b61034e610371366004613756565b73ffffffffffffffffffffffffffffffffffffffff919091166000908152600460205260409020541490565b6103a561098b565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161035a565b6103d2610a24565b005b6007546103a59073ffffffffffffffffffffffffffffffffffffffff1681565b610414610402366004613782565b60026020526000908152604090205481565b60405190815260200161035a565b6103d2610430366004613782565b610a78565b61034e610443366004613782565b73ffffffffffffffffffffffffffffffffffffffff166000908152600160208190526040909120541490565b61049c61047d36600461379f565b6008602052600090815260409020805460019091015460ff9091169082565b60408051921515835260208301919091520161035a565b6103d26104c136600461379f565b610b15565b7f00000000000000000000000000000000000000000000000000000000000000006103a5565b6103d2610b5f565b610414610502366004613782565b60016020526000908152604090205481565b610414600081565b6103d261052a366004613782565b610be3565b6103d2610c36565b61058861054536600461379f565b6040805180820190915260008082526020820152506000908152600860209081526040918290208251808401909352805460ff1615158352600101549082015290565b60408051825115158152602092830151928101929092520161035a565b6103e8610414565b6105d46105bb36600461379f565b6005602052600090815260409020805460019091015482565b6040805192835260208301919091520161035a565b7f00000000000000000000000000000000000000000000000000000000000000006103a5565b60035461034e9060ff1681565b6103d2610c88565b6103d26106323660046139f8565b610c92565b6103d2610645366004613a2d565b610cad565b61034e610658366004613782565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205460011490565b6103d2610691366004613782565b610d07565b60075473ffffffffffffffffffffffffffffffffffffffff166103a5565b6104146106c2366004613782565b60046020526000908152604090205481565b6103d2610da7565b6103d26106ea366004613782565b610e2c565b6104146106fd36600461379f565b610eca565b6103a5610710366004613782565b610ee8565b6103d26107233660046139f8565b610f14565b6103d2610736366004613782565b610f1d565b60065473ffffffffffffffffffffffffffffffffffffffff166103a5565b61076c610767366004613ae8565b610fba565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161035a565b6006546103a59073ffffffffffffffffffffffffffffffffffffffff1681565b6103d26107cb366004613c16565b610fe5565b6104146107de36600461379f565b60009081526005602052604090206001015490565b6103d2610801366004613c7a565b6110f5565b6103a5611136565b6103d261081c366004613c9c565b6111a6565b61041461082f3660046139f8565b6111fb565b6103d2610842366004613cd9565b611298565b6103a5610855366004613782565b6113a6565b61076c610868366004613d6b565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b6104147f000000000000000000000000000000000000000000000000000000000000000081565b6103d26108c7366004613dd4565b6113d2565b6103d26108da366004613782565b611409565b6103d26108ed366004613e09565b61145c565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000148061098557507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600654604080517faaf10f42000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163aaf10f429160048083019260209291908290030181865afa1580156109fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1f9190613e4e565b905090565b3360009081526001602081905260409091205414610a6e576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a7661155e565b565b3360009081526001602081905260409091205414610ac2576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020526040808220829055513392917f787a2e12f4a55b658b8f573c32432ee11a5e8b51677d1e1e937aaf6a0bb5776e91a350565b6000818152600560205260408120549003610b5c576040517f3f6cc76800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b33600090815260026020526040902054600114610ba8576040517f7c214f0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152600260205260408082208290555182917ff7262ed0443cc211121ceb1a80d69004f319245615a7488f951f1437fd91642c91a3565b3360009081526001602081905260409091205414610c2d576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b5c816115b6565b3360009081526001602081905260409091205414610c80576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a76611644565b610a766001611699565b6000610c9d826111fb565b9050610ca981836116c7565b5050565b3360009081526001602081905260409091205414610cf7576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d02838383611826565b505050565b3360009081526001602081905260409091205414610d51576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020819052604080832091909155513392917ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc91a350565b3360009081526001602081905260409091205414610df1576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152600160205260408082208290555182917f787a2e12f4a55b658b8f573c32432ee11a5e8b51677d1e1e937aaf6a0bb5776e91a3565b3360009081526001602081905260409091205414610e76576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526002602052604080822060019055513392917ff1e04d73c4304b5ff164f9d10c7473e2a1593b740674a6107975e2a7001c1e5c91a350565b6000610ed582610b15565b5060009081526005602052604090205490565b600061098582610ef6611136565b60075473ffffffffffffffffffffffffffffffffffffffff16611982565b610b5c81611a80565b3360009081526001602081905260409091205414610f67576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116600081815260026020526040808220829055513392917ff7262ed0443cc211121ceb1a80d69004f319245615a7488f951f1437fd91642c91a350565b7fbc197c81000000000000000000000000000000000000000000000000000000005b95945050505050565b600054600203611056576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002600081815533815260209190915260409020546001146110a4576040517f7c214f0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60035460ff16156110e1576040517f9e87fac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110ec828233611b85565b50506001600055565b806110ff83610eca565b14610ca9576040517f66f8620a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600754604080517fa619486e000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163a619486e9160048083019260209291908290030181865afa1580156109fb573d6000803e3d6000fd5b6111c58160400151826020015184846101800151856101600151611bde565b610ca9576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109857fa852566c4e14d00869b6db0220888a9090a13eccdaea03713ff0a3d27bf9767c836000015184602001518560400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001518d61014001518e610160015160405160200161127d9d9c9b9a99989796959493929190613eae565b60405160208183030381529060405280519060200120611c3c565b600054600203611304576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e435900000000000000000000000000000000000000000000604482015260640161104d565b600260008181553381526020919091526040902054600114611352576040517f7c214f0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60035460ff161561138f576040517f9e87fac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61139b84848484611ca5565b505060016000555050565b6000610985826113b461098b565b60065473ffffffffffffffffffffffffffffffffffffffff16611e5c565b805160005b81811015610d02576114018382815181106113f4576113f4613f4c565b6020026020010151611a80565b6001016113d7565b3360009081526001602081905260409091205414611453576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b5c81611ebe565b6000546002036114c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e435900000000000000000000000000000000000000000000604482015260640161104d565b600260008181553381526020919091526040902054600114611516576040517f7c214f0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60035460ff1615611553576040517f9e87fac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110ec828233611f4c565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905560405133907f203c4bd3e526634f661575359ff30de3b0edaba6c2cb1eac60f730b6d2d9d53690600090a2565b60075460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f9726d7faf7429d6b059560dc858ed769377ccdf8b7541eabe12b22548719831f90600090a3600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905560405133907fa1e8a54850dbd7f520bcc09f47bff152294b77b2081da545a7adf531b7ea283b90600090a2565b336000908152600460205260409020546116b4908290613faa565b3360009081526004602052604090205550565b60008160e001511180156116de5750428160e00151105b15611715576040517fc56873ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61171f82826111a6565b6103e88161012001511115611760576040517fcd4e616700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61176d8160800151610b15565b60008281526008602052604090205460ff16156117b6576040517f7b38b76e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117f0816020015182610100015173ffffffffffffffffffffffffffffffffffffffff919091166000908152600460205260409020541490565b610ca9576040517f756688fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8183148061183a575082158061183a575081155b15611871576040517f3f6cc76800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008381526005602052604090205415158061189a575060008281526005602052604090205415155b156118d1576040517f3a81d6fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805180820182528381526020808201848152600087815260058084528582209451855591516001948501558451808601865288815280840187815288835292909352848120925183559051919092015590518291849186917fbc9a2432e8aeb48327246cddd6e872ef452812b4243c04e6bfb786a2cd8faf0d91a48083837fbc9a2432e8aeb48327246cddd6e872ef452812b4243c04e6bfb786a2cd8faf0d60405160405180910390a4505050565b60008061198e8461205a565b8051906020012090506000856040516020016119c6919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001815282825280516020918201207fff000000000000000000000000000000000000000000000000000000000000008285015260609790971b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021840152603583019690965260558083019490945280518083039094018452607590910190525080519201919091209392505050565b602081015173ffffffffffffffffffffffffffffffffffffffff163314611ad3576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611ade826111fb565b600081815260086020526040902080549192509060ff1615611b2c576040517f7b38b76e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117815560405182907f5152abf959f6564662358c2e52b702259b78bac5ee7842a0f01937e670efcc7d90600090a2505050565b825160005b81811015611bd757611bcf858281518110611ba757611ba7613f4c565b6020026020010151858381518110611bc157611bc1613f4c565b602002602001015185611f4c565b600101611b8a565b5050505050565b600080826002811115611bf357611bf3613e6b565b03611c0b57611c04868686866120eb565b9050610fdc565b6002826002811115611c1f57611c1f613e6b565b03611c3057611c0486868686612139565b611c048686868661218d565b6000610985611c496121c1565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b81600080611cb387846122f5565b91509150600080611cc389612342565b91509150611cd78960200151308488612379565b611ce28989886123a3565b611cec84826123f5565b6101208a0151909450600090611d2e90828c61014001516001811115611d1457611d14613e6b565b14611d1f5787611d21565b865b88888e610140015161243d565b9050611d4b308b60200151848489611d469190613fc2565b612379565b611d573033848461252d565b6000611d6284612596565b90508015611d7a57611d7a308c602001518684612379565b60208b8101516040805187815292830186905282018990526060820188905260808201849052309173ffffffffffffffffffffffffffffffffffffffff9091169087907fd0a08e8c493f9c94f29311604c9de1b4e8c8d4c06bd0c789af57f2d65bfec0f69060a00160405180910390a46020808c01516040805187815292830186905282018990526060820188905273ffffffffffffffffffffffffffffffffffffffff169086907f63bf4d16b7fa898ef4c4b2b6d90fd201e9c56313b65638af6088d149d2ce956c9060800160405180910390a35050505050505050505050565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606085901b166020820152600090611eb49083908590603401604051602081830303815290604052805190602001206126c6565b90505b9392505050565b60065460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f3053c6252a932554235c173caffc1913604dba3a41cee89516f631c4a1a50a3790600090a3600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b81600080611f5a86846122f5565b6101208801519193509150600090611fa790825b8961014001516001811115611f8557611f85613e6b565b14611f905785611f92565b845b8960a001518a60c001518b610140015161243d565b9050600080611fb589612342565b91509150611fcf338a60200151838689611d469190613fc2565b611fdf8960200151888489612379565b6020898101516040805185815292830184905282018890526060820187905260808201859052339173ffffffffffffffffffffffffffffffffffffffff9091169086907fd0a08e8c493f9c94f29311604c9de1b4e8c8d4c06bd0c789af57f2d65bfec0f69060a00160405180910390a4505050505050505050565b6060604051806101a00160405280610171815260200161419261017191396040805173ffffffffffffffffffffffffffffffffffffffff8516602082015201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526120d59291602001614005565b6040516020818303038152906040529050919050565b60008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614801561212e575061212e858484612763565b90505b949350505050565b6000612146858484612763565b801561212e57508373ffffffffffffffffffffffffffffffffffffffff1661216d86610ee8565b73ffffffffffffffffffffffffffffffffffffffff161495945050505050565b600061219a858484612763565b801561212e57508373ffffffffffffffffffffffffffffffffffffffff1661216d866113a6565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614801561222757507f000000000000000000000000000000000000000000000000000000000000000046145b1561225157507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008061230584606001516127a5565b61230e846111fb565b905061231a81856116c7565b61232d838560a001518660c00151612817565b915061233a81858561283e565b509250929050565b60008080836101400151600181111561235d5761235d613e6b565b0361236d57505060800151600091565b50506080015190600090565b816000036123915761238c8484836128eb565b61239d565b61239d84848484612940565b50505050565b815160005b81811015611bd7576123ed858583815181106123c6576123c6613f4c565b60200260200101518584815181106123e0576123e0613f4c565b602002602001015161296d565b6001016123a8565b60008061240183612596565b905083811015611eb7576040517fdf4d808000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008515610fdc576000612452858585612a52565b905060008111801561246c5750670de0b6b3a76400008111155b1561252357600083600181111561248557612485613e6b565b036124d75761249661271082614034565b866124b2836124ad81670de0b6b3a7640000613fc2565b612ac1565b6124bc908a614034565b6124c69190614034565b6124d09190614071565b9150612523565b6124eb670de0b6b3a7640000612710614034565b86612502836124ad81670de0b6b3a7640000613fc2565b61250c908a614034565b6125169190614034565b6125209190614071565b91505b5095945050505050565b801561239d5761253f84848484612379565b604080518381526020810183905273ffffffffffffffffffffffffffffffffffffffff8516917facffcc86834d0f1a64b0d5a675798deed6ff0bcfc2231edd3480e7288dba7ff4910160405180910390a250505050565b60008160000361264f576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa15801561262b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098591906140ac565b6040517efdd58e0000000000000000000000000000000000000000000000000000000081523060048201526024810183905273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169062fdd58e9060440161260e565b6000806126d38585612ad7565b8051602091820120604080517fff000000000000000000000000000000000000000000000000000000000000008185015260609890981b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021890152603588019590955260558088019190915284518088039091018152607590960190935250508251920191909120919050565b60008373ffffffffffffffffffffffffffffffffffffffff166127868484612c5a565b73ffffffffffffffffffffffffffffffffffffffff1614949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116158015906127e0575073ffffffffffffffffffffffffffffffffffffffff81163314155b15610b5c576040517f5211a07900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260000361282957506000611eb7565b826128348386614034565b611eb49190614071565b6000838152600860205260409020600181015490811561285e5781612864565b8360a001515b9150818311156128a0576040517fe2cc6ad600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6128aa8383613fc2565b9150816000036128de5780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781555b6001018190559392505050565b7f00000000000000000000000000000000000000000000000000000000000000003073ffffffffffffffffffffffffffffffffffffffff8516036129345761238c818484612c7e565b61239d81858585612c89565b61239d7f000000000000000000000000000000000000000000000000000000000000000085858585612c95565b60006129798484612d41565b9050612986848483612ddd565b8160008061299486846122f5565b61012088015191935091506000906129ac9082611f6e565b90506000806129ba89612342565b915091506129d186868b6020015185858c89612e89565b6020808b01518a820151604080518681529384018590528301899052606083018890526080830186905273ffffffffffffffffffffffffffffffffffffffff9182169291169086907fd0a08e8c493f9c94f29311604c9de1b4e8c8d4c06bd0c789af57f2d65bfec0f69060a00160405180910390a450505050505050505050565b600080826001811115612a6757612a67613e6b565b03612a9f5782600003612a7b576000612a98565b82612a8e670de0b6b3a764000086614034565b612a989190614071565b9050611eb7565b83600003612aae576000611eb4565b83612834670de0b6b3a764000085614034565b6000818310612ad05781611eb7565b5090919050565b6040805160008082526020820190925260609190612af890604481016140c5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f52e831dd000000000000000000000000000000000000000000000000000000001790528151606380825260a082019093529293506000929190820181803683370190505090507f3d3d606380380380913d393d73bebebebebebebebebebebebebebebebebebebe60208201526c010000000000000000000000008502602d8201527f5af4602a57600080fd5b602d8060366000396000f3363d3d373d3d3d363d73be60418201526c01000000000000000000000000840260608201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060748201528082604051602001612c41929190614005565b6040516020818303038152906040529250505092915050565b6000806000612c698585612f09565b91509150612c7681612f4e565b509392505050565b610d02838383613101565b61239d848484846131ba565b6040517ff242432a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b158015612d2257600080fd5b505af1158015612d36573d6000803e3d6000fd5b505050505050505050565b6000808361014001516001811115612d5b57612d5b613e6b565b148015612d7e575060008261014001516001811115612d7c57612d7c613e6b565b145b15612d8b57506001610985565b60018361014001516001811115612da457612da4613e6b565b148015612dc7575060018261014001516001811115612dc557612dc5613e6b565b145b15612dd457506002610985565b50600092915050565b612de78383613279565b612e1d576040517f7f9a6f4600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816002811115612e3157612e31613e6b565b03612e77578160800151836080015114610d02576040517fa0b9446500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d02836080015183608001516110f5565b612e958530868a612379565b612ea287878686866132c3565b85612eac84612596565b1015612ee4576040517fdf4d808000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612ef4308685611d46858b613fc2565b612f003033858461252d565b50505050505050565b6000808251604103612f3f5760208301516040840151606085015160001a612f338782858561334b565b94509450505050612f47565b506000905060025b9250929050565b6000816004811115612f6257612f62613e6b565b03612f6a5750565b6001816004811115612f7e57612f7e613e6b565b03612fe5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161104d565b6002816004811115612ff957612ff9613e6b565b03613060576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161104d565b600381600481111561307457613074613e6b565b03610b5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161104d565b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061239d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161104d565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080611bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015260640161104d565b60008260c0015160001480613290575060c0820151155b1561329d57506001610985565b611eb76132a98461343a565b6132b28461343a565b856101400151856101400151613454565b60008160028111156132d7576132d7613e6b565b14611bd75760018160028111156132f0576132f0613e6b565b036133165760008281526005602052604090206001015461331190856134ee565b611bd7565b600281600281111561332a5761332a613e6b565b03611bd757600083815260056020526040902060010154613311908661361e565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156133825750600090506003613431565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156133d6573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661342a57600060019250925050613431565b9150600090505b94509492505050565b60006109858260a001518360c00151846101400151612a52565b60008083600181111561346957613469613e6b565b036134ad57600082600181111561348257613482613e6b565b036134a357670de0b6b3a764000061349a8587613faa565b10159050612131565b5082841015612131565b60008260018111156134c1576134c1613e6b565b036134d0575083831015612131565b670de0b6b3a76400006134e38587613faa565b111595945050505050565b60408051600280825260608201835260009260208301908036833701905050905060018160008151811061352457613524613f4c565b60200260200101818152505060028160018151811061354557613545613f4c565b60209081029190910101527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166372ce42757f00000000000000000000000000000000000000000000000000000000000000005b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526135f09190600090889087908990600401614116565b600060405180830381600087803b15801561360a57600080fd5b505af1158015612f00573d6000803e3d6000fd5b60408051600280825260608201835260009260208301908036833701905050905060018160008151811061365457613654613f4c565b60200260200101818152505060028160018151811061367557613675613f4c565b60209081029190910101527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639e7212ad7f00000000000000000000000000000000000000000000000000000000000000006135ae565b6000602082840312156136f457600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611eb757600080fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610b5c57600080fd5b803561375181613724565b919050565b6000806040838503121561376957600080fd5b823561377481613724565b946020939093013593505050565b60006020828403121561379457600080fd5b8135611eb781613724565b6000602082840312156137b157600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101a0810167ffffffffffffffff8111828210171561380b5761380b6137b8565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613858576138586137b8565b604052919050565b80356002811061375157600080fd5b80356003811061375157600080fd5b600082601f83011261388f57600080fd5b813567ffffffffffffffff8111156138a9576138a96137b8565b6138da60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601613811565b8181528460208386010111156138ef57600080fd5b816020850160208301376000918101602001919091529392505050565b60006101a0828403121561391f57600080fd5b6139276137e7565b90508135815261393960208301613746565b602082015261394a60408301613746565b604082015261395b60608301613746565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101208083013581830152506101406139ae818401613860565b908201526101606139c083820161386f565b908201526101808281013567ffffffffffffffff8111156139e057600080fd5b6139ec8582860161387e565b82840152505092915050565b600060208284031215613a0a57600080fd5b813567ffffffffffffffff811115613a2157600080fd5b6121318482850161390c565b600080600060608486031215613a4257600080fd5b505081359360208301359350604090920135919050565b600067ffffffffffffffff821115613a7357613a736137b8565b5060051b60200190565b600082601f830112613a8e57600080fd5b81356020613aa3613a9e83613a59565b613811565b82815260059290921b84018101918181019086841115613ac257600080fd5b8286015b84811015613add5780358352918301918301613ac6565b509695505050505050565b600080600080600060a08688031215613b0057600080fd5b8535613b0b81613724565b94506020860135613b1b81613724565b9350604086013567ffffffffffffffff80821115613b3857600080fd5b613b4489838a01613a7d565b94506060880135915080821115613b5a57600080fd5b613b6689838a01613a7d565b93506080880135915080821115613b7c57600080fd5b50613b898882890161387e565b9150509295509295909350565b600082601f830112613ba757600080fd5b81356020613bb7613a9e83613a59565b82815260059290921b84018101918181019086841115613bd657600080fd5b8286015b84811015613add57803567ffffffffffffffff811115613bfa5760008081fd5b613c088986838b010161390c565b845250918301918301613bda565b60008060408385031215613c2957600080fd5b823567ffffffffffffffff80821115613c4157600080fd5b613c4d86838701613b96565b93506020850135915080821115613c6357600080fd5b50613c7085828601613a7d565b9150509250929050565b60008060408385031215613c8d57600080fd5b50508035926020909101359150565b60008060408385031215613caf57600080fd5b82359150602083013567ffffffffffffffff811115613ccd57600080fd5b613c708582860161390c565b60008060008060808587031215613cef57600080fd5b843567ffffffffffffffff80821115613d0757600080fd5b613d138883890161390c565b95506020870135915080821115613d2957600080fd5b613d3588838901613b96565b9450604087013593506060870135915080821115613d5257600080fd5b50613d5f87828801613a7d565b91505092959194509250565b600080600080600060a08688031215613d8357600080fd5b8535613d8e81613724565b94506020860135613d9e81613724565b93506040860135925060608601359150608086013567ffffffffffffffff811115613dc857600080fd5b613b898882890161387e565b600060208284031215613de657600080fd5b813567ffffffffffffffff811115613dfd57600080fd5b61213184828501613b96565b60008060408385031215613e1c57600080fd5b823567ffffffffffffffff811115613e3357600080fd5b613e3f8582860161390c565b95602094909401359450505050565b600060208284031215613e6057600080fd5b8151611eb781613724565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110613eaa57613eaa613e6b565b9052565b60006101a0820190508e82528d602083015273ffffffffffffffffffffffffffffffffffffffff808e166040840152808d166060840152808c166080840152508960a08301528860c08301528760e083015286610100830152856101208301528461014083015260028410613f2557613f25613e6b565b83610160830152613f3a610180830184613e9a565b9e9d5050505050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115613fbd57613fbd613f7b565b500190565b600082821015613fd457613fd4613f7b565b500390565b60005b83811015613ff4578181015183820152602001613fdc565b8381111561239d5750506000910152565b60008351614017818460208801613fd9565b83519083019061402b818360208801613fd9565b01949350505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561406c5761406c613f7b565b500290565b6000826140a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000602082840312156140be57600080fd5b5051919050565b60208152600082518060208401526140e4816040850160208701613fd9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600060a0820173ffffffffffffffffffffffffffffffffffffffff881683526020878185015286604085015260a0606085015281865180845260c086019150828801935060005b818110156141795784518352938301939183019160010161415d565b5050809350505050826080830152969550505050505056fe608060405234801561001057600080fd5b5060405161017138038061017183398101604081905261002f916100b9565b6001600160a01b0381166100945760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100e7565b6000602082840312156100ca578081fd5b81516001600160a01b03811681146100e0578182fd5b9392505050565b607c806100f56000396000f3fe6080604052600080546001600160a01b0316813563530ca43760e11b1415602857808252602082f35b3682833781823684845af490503d82833e806041573d82fd5b503d81f3fea264697066735822122015938e3bf2c49f5df5c1b7f9569fa85cc5d6f3074bb258a2dc0c7e299bc9e33664736f6c63430008040033a2646970667358221220c9489efe43f1a39cf1d76c8f3ba9f07e5c0a07a9579604410a5a24547e01a84064736f6c634300080f0033",
    "sourceMap": "766:3634:54:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:11;;;;;;:::i;:::-;;:::i;:::-;;;516:14:87;;509:22;491:41;;479:2;464:18;387:221:11;;;;;;;;419:131:76;;;;;;:::i;:::-;522:12;;;;;499:4;522:12;;;:6;:12;;;;;;:21;;419:131;1298:150:78;;;:::i;:::-;;;1337:42:87;1325:55;;;1307:74;;1295:2;1280:18;1298:150:78;1161:226:87;1388:75:54;;;:::i;:::-;;566:26:78;;;;;;;;;397:44:73;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1790:25:87;;;1778:2;1763:18;397:44:73;1644:177:87;1639:135:73;;;;;;:::i;:::-;;:::i;753:99::-;;;;;;:::i;:::-;829:11;;806:4;829:11;;;:6;:11;;;;;;;;;:16;;753:99;874:50:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:14:87;;2197:22;2179:41;;2251:2;2236:18;;2229:34;;;;2152:18;874:50:81;2011:258:87;1207:143:79;;;;;;:::i;:::-;;:::i;584:84:72:-;658:3;584:84;;2436:150:73;;;:::i;291:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;628:55:71;;681:1;628:55;;3845:117:54;;;;;;:::i;:::-;;:::i;1517:79::-;;;:::i;1027:131:81:-;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;1128:23:81;;;;:11;:23;;;;;;;;;1121:30;;;;;;;;;;;;;;;;;;;;;;;;1027:131;;;;;2879:13:87;;2872:21;2865:29;2847:48;;2951:4;2939:17;;;2933:24;2911:20;;;2904:54;;;;2820:18;1027:131:81;2641:323:87;346:105:74;257:4;346:105;;255:48:79;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3143:25:87;;;3199:2;3184:18;;3177:34;;;;3116:18;255:48:79;2969:248:87;480:98:72;561:10;480:98;;161:26:77;;;;;;;;;225:75:76;;;:::i;1249:150:81:-;;;;;;:::i;:::-;;:::i;4237:161:54:-;;;;;;:::i;:::-;;:::i;858:105:73:-;;;;;;:::i;:::-;937:14;;914:4;937:14;;;:9;:14;;;;;;955:1;937:19;;858:105;1086:131;;;;;;:::i;:::-;;:::i;1128:91:78:-;1201:11;;;;1128:91;;177:41:76;;;;;;:::i;:::-;;;;;;;;;;;;;;2185:138:73;;;:::i;1349:149::-;;;;;;:::i;:::-;;:::i;619:160:79:-;;;;;;:::i;:::-;;:::i;2132:171:78:-;;;;;;:::i;:::-;;:::i;1585:86:81:-;;;;;;:::i;:::-;;:::i;1924:153:73:-;;;;;;:::i;:::-;;:::i;983:93:78:-;1057:12;;;;983:93;;724:247:10;;;;;;:::i;:::-;;:::i;:::-;;;8976:66:87;8964:79;;;8946:98;;8934:2;8919:18;724:247:10;8802:248:87;473:27:78;;;;;;;;;2299:215:54;;;;;;:::i;:::-;;:::i;398:130:79:-;;;;;;:::i;:::-;467:7;493:16;;;:8;:16;;;;;:28;;;;398:130;942:167;;;;;;:::i;:::-;;:::i;1515:136:78:-;;;:::i;836:257:80:-;;;;;;:::i;:::-;;:::i;601:674:75:-;;;;;;:::i;:::-;;:::i;2982:306:54:-;;;;;;:::i;:::-;;:::i;1794:196:78:-;;;;;;:::i;:::-;;:::i;499:219:10:-;;;;;;:::i;:::-;680:31;499:219;;;;;;;;323:40:75;;;;;1776:261:81;;;;;;:::i;:::-;;:::i;3599:121:54:-;;;;;;:::i;:::-;;:::i;1948:162::-;;;;;;:::i;:::-;;:::i;387:221:11:-;489:4;512:49;;;527:34;512:49;;:89;;-1:-1:-1;952:25:20;937:40;;;;565:36:11;505:96;387:221;-1:-1:-1;;387:221:11:o;1298:150:78:-;1408:12;;1390:51;;;;;;;;1364:7;;1408:12;;;1390:49;;:51;;;;;;;;;;;;;;1408:12;1390:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1383:58;;1298:150;:::o;1388:75:54:-;490:10:73;483:18;;;;:6;:18;;;;;;;;;:23;479:46;;515:10;;;;;;;;;;;;;;479:46;1441:15:54::1;:13;:15::i;:::-;1388:75::o:0;1639:135:73:-;490:10;483:18;;;;:6;:18;;;;;;;;;:23;479:46;;515:10;;;;;;;;;;;;;;479:46;1704:13:::1;::::0;::::1;1720:1;1704:13:::0;;;:6:::1;:13;::::0;;;;;:17;;;1736:31;1756:10:::1;::::0;1704:13;1736:31:::1;::::0;::::1;1639:135:::0;:::o;1207:143:79:-;1284:18;;;;:8;:18;;;;;:29;:34;;1280:63;;1327:16;;;;;;;;;;;;;;1280:63;1207:143;:::o;2436:150:73:-;597:10;587:21;;;;:9;:21;;;;;;612:1;587:26;583:52;;622:13;;;;;;;;;;;;;;583:52;2510:10:::1;2524:1;2500:21:::0;;;:9:::1;:21;::::0;;;;;:25;;;2540:39;2510:10;;2540:39:::1;::::0;::::1;2436:150::o:0;3845:117:54:-;490:10:73;483:18;;;;:6;:18;;;;;;;;;:23;479:46;;515:10;;;;;;;;;;;;;;479:46;3923:32:54::1;3939:15;3923;:32::i;1517:79::-:0;490:10:73;483:18;;;;:6;:18;;;;;;;;;:23;479:46;;515:10;;;;;;;;;;;;;;479:46;1572:17:54::1;:15;:17::i;225:75:76:-:0;279:14;291:1;279:11;:14::i;1249:150:81:-;1314:17;1334:16;1344:5;1334:9;:16::i;:::-;1314:36;;1360:32;1375:9;1386:5;1360:14;:32::i;:::-;1304:95;1249:150;:::o;4237:161:54:-;490:10:73;483:18;;;;:6;:18;;;;;;;;;:23;479:46;;515:10;;;;;;;;;;;;;;479:46;4345::54::1;4360:5;4367:10;4379:11;4345:14;:46::i;:::-;4237:161:::0;;;:::o;1086:131:73:-;490:10;483:18;;;;:6;:18;;;;;;;;;:23;479:46;;515:10;;;;;;;;;;;;;;479:46;1149:14:::1;::::0;::::1;;::::0;;;1166:1:::1;1149:14;::::0;;;;;;;:18;;;;1182:28;1199:10:::1;::::0;1149:14;1182:28:::1;::::0;::::1;1086:131:::0;:::o;2185:138::-;490:10;483:18;;;;:6;:18;;;;;;;;;:23;479:46;;515:10;;;;;;;;;;;;;;479:46;2250:10:::1;2264:1;2243:18:::0;;;:6:::1;:18;::::0;;;;;:22;;;2280:36;2250:10;;2280:36:::1;::::0;::::1;2185:138::o:0;1349:149::-;490:10;483:18;;;;:6;:18;;;;;;;;;:23;479:46;;515:10;;;;;;;;;;;;;;479:46;1418:20:::1;::::0;::::1;;::::0;;;:9:::1;:20;::::0;;;;;1441:1:::1;1418:24:::0;;1457:34;1480:10:::1;::::0;1418:20;1457:34:::1;::::0;::::1;1349:149:::0;:::o;619:160:79:-;687:7;706:22;722:5;706:15;:22::i;:::-;-1:-1:-1;745:16:79;;;;:8;:16;;;;;:27;;619:160::o;2132:171:78:-;2192:7;2218:78;2245:5;2252:30;:28;:30::i;:::-;2284:11;;;;2218:26;:78::i;1585:86:81:-;1645:19;1658:5;1645:12;:19::i;1924:153:73:-;490:10;483:18;;;;:6;:18;;;;;;;;;:23;479:46;;515:10;;;;;;;;;;;;;;479:46;1995:19:::1;::::0;::::1;2017:1;1995:19:::0;;;:9:::1;:19;::::0;;;;;:23;;;2033:37;2059:10:::1;::::0;1995:19;2033:37:::1;::::0;::::1;1924:153:::0;:::o;724:247:10:-;928:36;724:247;;;;;;;;:::o;2299:215:54:-;380:6:27;;390:1;380:11;372:34;;;;;;;14169:2:87;372:34:27;;;14151:21:87;14208:2;14188:18;;;14181:30;14247:12;14227:18;;;14220:40;14277:18;;372:34:27;;;;;;;;;426:1;417:6;:10;;;597::73::1;587:21:::0;;::::1;::::0;;;;;;;;612:1:::1;587:26;583:52;;622:13;;;;;;;;;;;;;;583:52;229:6:77::2;::::0;::::2;;225:27;;;244:8;;;;;;;;;;;;;;225:27;2463:44:54::3;2475:6;2483:11;2496:10;2463:11;:44::i;:::-;-1:-1:-1::0;;459:1:27;450:6;:10;2299:215:54:o;942:167:79:-;1064:10;1040:20;1054:5;1040:13;:20::i;:::-;:34;1036:66;;1083:19;;;;;;;;;;;;;;1515:136:78;1619:11;;1602:42;;;;;;;;1576:7;;1619:11;;;1602:40;;:42;;;;;;;;;;;;;;1619:11;1602:42;;;;;;;;;;;;;;836:257:80;943:92;960:5;:12;;;974:5;:11;;;987:9;998:5;:15;;;1015:5;:19;;;943:16;:92::i;:::-;938:149;;1058:18;;;;;;;;;;;;;;601:674:75;670:7;696:572;91:220:67;821:5:75;:10;;;853:5;:11;;;886:5;:12;;;920:5;:11;;;953:5;:13;;;988:5;:17;;;1027:5;:17;;;1066:5;:16;;;1104:5;:11;;;1137:5;:16;;;1175:5;:10;;;1207:5;:19;;;753:491;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;726:532;;;;;;696:16;:572::i;2982:306:54:-;380:6:27;;390:1;380:11;372:34;;;;;;;14169:2:87;372:34:27;;;14151:21:87;14208:2;14188:18;;;14181:30;14247:12;14227:18;;;14220:40;14277:18;;372:34:27;13967:334:87;372:34:27;426:1;417:6;:10;;;597::73::1;587:21:::0;;::::1;::::0;;;;;;;;612:1:::1;587:26;583:52;;622:13;;;;;;;;;;;;;;583:52;229:6:77::2;::::0;::::2;;225:27;;;244:8;;;;;;;;;;;;;;225:27;3209:72:54::3;3222:10;3234:11;3247:15;3264:16;3209:12;:72::i;:::-;-1:-1:-1::0;;459:1:27;450:6;:10;-1:-1:-1;;2982:306:54:o;1794:196:78:-;1865:7;1891:92;1926:5;1933:35;:33;:35::i;:::-;1970:12;;;;1891:34;:92::i;1776:261:81:-;1857:13;;1840:14;1903:128;1914:6;1910:1;:10;1903:128;;;1937:24;1950:6;1958:1;1950:10;;;;;;;;:::i;:::-;;;;;;;1937:12;:24::i;:::-;2003:3;;1903:128;;3599:121:54;490:10:73;483:18;;;;:6;:18;;;;;;;;;:23;479:46;;515:10;;;;;;;;;;;;;;479:46;3679:34:54::1;3696:16;3679;:34::i;1948:162::-:0;380:6:27;;390:1;380:11;372:34;;;;;;;14169:2:87;372:34:27;;;14151:21:87;14208:2;14188:18;;;14181:30;14247:12;14227:18;;;14220:40;14277:18;;372:34:27;13967:334:87;372:34:27;426:1;417:6;:10;;;597::73::1;587:21:::0;;::::1;::::0;;;;;;;;612:1:::1;587:26;583:52;;622:13;;;;;;;;;;;;;;583:52;229:6:77::2;::::0;::::2;;225:27;;;244:8;;;;;;;;;;;;;;225:27;2062:41:54::3;2073:5;2080:10;2092;2062;:41::i;276:113:77:-:0;329:6;:13;;;;338:4;329:13;;;357:25;;371:10;;357:25;;329:6;;357:25;276:113::o;2481:159:78:-;2571:11;;2552:45;;;;;;;2571:11;;2552:45;;2571:11;;2552:45;2607:11;:26;;;;;;;;;;;;;;;2481:159::o;395:118:77:-;450:6;:14;;;;;;479:27;;495:10;;479:27;;459:5;;479:27;395:118::o;306:107:76:-;389:10;381:19;;;;:6;:19;;;;;;:25;;403:3;;381:25;:::i;:::-;367:10;359:19;;;;:6;:19;;;;;:47;-1:-1:-1;306:107:76:o;2430:717:81:-;2577:1;2558:5;:16;;;:20;:58;;;;;2601:15;2582:5;:16;;;:34;2558:58;2554:85;;;2625:14;;;;;;;;;;;;;;2554:85;2680:40;2703:9;2714:5;2680:22;:40::i;:::-;257:4:74;2759:5:81;:16;;;:34;2755:59;;;2802:12;;;;;;;;;;;;;;2755:59;2868:30;2884:5;:13;;;2868:15;:30::i;:::-;2962:22;;;;:11;:22;;;;;:42;;;2958:79;;;3013:24;;;;;;;;;;;;;;2958:79;3079:38;3092:5;:11;;;3105:5;:11;;;522:12:76;;;;;499:4;522:12;;;:6;:12;;;;;;:21;;419:131;3079:38:81;3074:66;;3126:14;;;;;;;;;;;;;;1356:593:79;1466:6;1456;:16;:48;;;-1:-1:-1;1477:11:79;;;:26;;-1:-1:-1;1492:11:79;;1477:26;1452:77;;;1513:16;;;;;;;;;;;;;;1452:77;1543:17;;;;:8;:17;;;;;:28;:33;;;:70;;-1:-1:-1;1580:17:79;;;;:8;:17;;;;;:28;:33;;1543:70;1539:102;;;1622:19;;;;;;;;;;;;;;1539:102;1672:60;;;;;;;;;;;;;;;;;;-1:-1:-1;1652:17:79;;;:8;:17;;;;;;:80;;;;;;;;;;;1763:60;;;;;;;;;;;;;;;;1743:17;;;;;;;;;;:80;;;;;;;;;;;1839:44;;1719:11;;1698:6;;1662;;1839:44;;;1930:11;1922:6;1914;1898:44;;;;;;;;;;1356:593;;;:::o;1154:356:69:-;1283:12;1311:20;1344:35;1364:14;1344:19;:35::i;:::-;1334:46;;;;;;1311:69;;1390:12;1426:6;1415:18;;;;;;;1337:42:87;1325:55;;;;1307:74;;1295:2;1280:18;;1161:226;1415:18:69;;;;;;;;;;;;;;1405:29;;1415:18;1405:29;;;;1890:12;1873:60;;;18606:92:87;18735:2;18731:15;;;;18748:66;18727:88;18714:11;;;18707:109;18832:12;;;18825:28;;;;18869:12;;;;18862:28;;;;1873:60:69;;;;;;;;;;18906:12:87;;;;1873:60:69;;-1:-1:-1;1863:71:69;;;;;;;;;1444:59;-1:-1:-1;;;1154:356:69:o;2043:381:81:-;2108:11;;;;:25;;2123:10;2108:25;2104:48;;2142:10;;;;;;;;;;;;;;2104:48;2163:17;2183:16;2193:5;2183:9;:16::i;:::-;2209:26;2238:22;;;:11;:22;;;;;2274:26;;2163:36;;-1:-1:-1;2238:22:81;2274:26;;2270:63;;;2309:24;;;;;;;;;;;;;;2270:63;2344:33;;;;2373:4;2344:33;;;2392:25;;2407:9;;2392:25;;2344:26;;2392:25;2094:330;;2043:381;:::o;4714:319::-;4836:13;;4819:14;4882:145;4893:6;4889:1;:10;4882:145;;;4916:41;4927:6;4934:1;4927:9;;;;;;;;:::i;:::-;;;;;;;4938:11;4950:1;4938:14;;;;;;;;:::i;:::-;;;;;;;4954:2;4916:10;:41::i;:::-;4999:3;;4882:145;;;4809:224;;4714:319;;;:::o;1725:647:80:-;1929:4;;1949:13;:34;;;;;;;;:::i;:::-;;1945:421;;2006:61;2025:6;2033:10;2045;2057:9;2006:18;:61::i;:::-;1999:68;;;;1945:421;2105:30;2088:13;:47;;;;;;;;:::i;:::-;;2084:282;;2158:66;2182:6;2190:10;2202;2214:9;2158:23;:66::i;2084:282::-;2288:67;2313:6;2321:10;2333;2345:9;2288:24;:67::i;4268:165:18:-;4345:7;4371:55;4393:20;:18;:20::i;:::-;4415:10;8470:57:17;;19199:66:87;8470:57:17;;;19187:79:87;19282:11;;;19275:27;;;19318:12;;;19311:28;;;8434:7:17;;19355:12:87;;8470:57:17;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;;5531:1759:81;5740:15;5723:14;;5804:39;5824:10;5740:15;5804:19;:39::i;:::-;5766:77;;;;5854:20;5876;5900:27;5916:10;5900:15;:27::i;:::-;5853:74;;;;6016:64;6026:10;:16;;;6052:4;6059:12;6073:6;6016:9;:64::i;:::-;6124:59;6141:10;6153:11;6166:16;6124;:59::i;:::-;6203:46;6228:6;6236:12;6203:24;:46::i;:::-;6316:21;;;;6194:55;;-1:-1:-1;6259:11:81;;6273:154;;6259:11;6339:10;:15;;;:27;;;;;;;;:::i;:::-;;:45;;6378:6;6339:45;;;6369:6;6339:45;6386:6;6394;6402:10;:15;;;6273:29;:154::i;:::-;6259:168;;6556:70;6574:4;6581:10;:16;;;6599:12;6622:3;6613:6;:12;;;;:::i;:::-;6556:9;:70::i;:::-;6751:56;6770:4;6777:10;6789:12;6803:3;6751:10;:56::i;:::-;6897:14;6914:25;6926:12;6914:11;:25::i;:::-;6897:42;-1:-1:-1;6953:10:81;;6949:80;;6965:64;6983:4;6990:10;:16;;;7008:12;7022:6;6965:9;:64::i;:::-;7081:16;;;;;7045:126;;;16787:25:87;;;16828:18;;;16821:34;;;16871:18;;16864:34;;;16929:2;16914:18;;16907:34;;;16972:3;16957:19;;16950:35;;;7107:4:81;;7045:126;;;;;7070:9;;7045:126;;16774:3:87;16759:19;7045:126:81;;;;;;;7212:16;;;;;7187:86;;;17227:25:87;;;17268:18;;;17261:34;;;17311:18;;17304:34;;;17369:2;17354:18;;17347:34;;;7187:86:81;;;7201:9;;7187:86;;17214:3:87;17199:19;7187:86:81;;;;;;;5713:1577;;;;;;;5531:1759;;;;:::o;265:270:68:-;502:24;;17554:66:87;17541:2;17537:15;;;17533:88;502:24:68;;;17521:101:87;401:19:68;;443:85;;466:8;;476:14;;17638:12:87;;502:24:68;;;;;;;;;;;;492:35;;;;;;443:22;:85::i;:::-;436:92;;265:270;;;;;;:::o;2309:166:78:-;2402:12;;2382:48;;;;;;;2402:12;;2382:48;;2402:12;;2382:48;2440:12;:28;;;;;;;;;;;;;;;2309:166::o;3430:993:81:-;3538:10;3521:14;;3596:34;3616:5;3538:10;3596:19;:34::i;:::-;3698:16;;;;3558:72;;-1:-1:-1;3558:72:81;-1:-1:-1;3641:11:81;;3655:161;;3641:11;3716:22;:5;:10;;;:22;;;;;;;;:::i;:::-;;:40;;3750:6;3716:40;;;3741:6;3716:40;3758:5;:17;;;3777:5;:17;;;3796:5;:10;;;3655:29;:161::i;:::-;3641:175;;3828:20;3850;3874:22;3890:5;3874:15;:22::i;:::-;3827:69;;;;3984:62;3994:10;4006:5;:11;;;4019:12;4042:3;4033:6;:12;;;;:::i;3984:62::-;4115:48;4125:5;:11;;;4138:2;4142:12;4156:6;4115:9;:48::i;:::-;4343:11;;;;;4320:96;;;16787:25:87;;;16828:18;;;16821:34;;;16871:18;;16864:34;;;16929:2;16914:18;;16907:34;;;16972:3;16957:19;;16950:35;;;4356:10:81;;4320:96;;;;;4332:9;;4320:96;;16774:3:87;16759:19;4320:96:81;;;;;;;3511:912;;;;;;3430:993;;;:::o;1516:169:69:-;1588:12;1636:17;;;;;;;;;;;;;;;;;1655:22;;;1337:42:87;1325:55;;1655:22:69;;;1307:74:87;1280:18;1655:22:69;;;;;;;;;;;;;;1619:59;;;1655:22;1619:59;;:::i;:::-;;;;;;;;;;;;;1612:66;;1516:169;;;:::o;2762:256:80:-;2912:4;2950:5;2940:15;;:6;:15;;;2939:72;;;;;2960:51;2981:6;2989:10;3001:9;2960:20;:51::i;:::-;2932:79;;2762:256;;;;;;;:::o;4682:275::-;4837:4;4864:45;4885:6;4893:4;4899:9;4864:20;:45::i;:::-;:86;;;;;4939:11;4913:37;;:22;4928:6;4913:14;:22::i;:::-;:37;;;;4682:275;-1:-1:-1;;;;;4682:275:80:o;3985:299::-;4147:4;4174:51;4195:6;4203:10;4215:9;4174:20;:51::i;:::-;:103;;;;;4266:11;4229:48;;:33;4255:6;4229:25;:33::i;3072:308:18:-;3125:7;3156:4;3148:29;3165:12;3148:29;;:66;;;;;3198:16;3181:13;:33;3148:66;3144:230;;;-1:-1:-1;3237:24:18;;3072:308::o;3144:230::-;-1:-1:-1;3562:73:18;;;3321:10;3562:73;;;;20893:25:87;;;;3333:12:18;20934:18:87;;;20927:34;3347:15:18;20977:18:87;;;20970:34;3606:13:18;21020:18:87;;;21013:34;3629:4:18;21063:19:87;;;;21056:84;;;;3562:73:18;;;;;;;;;;20865:19:87;;;;3562:73:18;;;3552:84;;;;;;1298:150:78:o;9282:542:81:-;9381:20;9403:17;9436:27;9451:5;:11;;;9436:14;:27::i;:::-;9486:16;9496:5;9486:9;:16::i;:::-;9474:28;;9539:32;9554:9;9565:5;9539:14;:32::i;:::-;9632:84;9671:6;9679:5;:17;;;9698:5;:17;;;9632:38;:84::i;:::-;9617:99;;9773:44;9792:9;9803:5;9810:6;9773:18;:44::i;:::-;;9282:542;;;;;:::o;11684:217::-;11752:20;;;11810:5;:10;;;:22;;;;;;;;:::i;:::-;;11806:53;;-1:-1:-1;;11845:13:81;;;11842:1;;11684:217::o;11806:53::-;-1:-1:-1;;11877:13:81;;;;11892:1;;11684:217::o;929:213:71:-;1033:2;1039:1;1033:7;1029:56;;1049:36;1069:4;1075:2;1079:5;1049:19;:36::i;:::-;1042:43;;1029:56;1102:33;1115:4;1121:2;1125;1129:5;1102:12;:33::i;:::-;929:213;;;;:::o;7296:387:81:-;7458:18;;7441:14;7509:168;7520:6;7516:1;:10;7509:168;;;7543:64;7559:10;7571:11;7583:1;7571:14;;;;;;;;:::i;:::-;;;;;;;7587:16;7604:1;7587:19;;;;;;;;:::i;:::-;;;;;;;7543:15;:64::i;:::-;7649:3;;7509:168;;15334:266;15426:7;15445:20;15468;15480:7;15468:11;:20::i;:::-;15445:43;;15517:13;15502:12;:28;15498:66;;;15539:25;;;;;;;;;;;;;;961:935:66;1148:11;1175:14;;1171:719;;1205:13;1221:47;1237:11;1250;1263:4;1221:15;:47::i;:::-;1205:63;;1294:1;1286:5;:9;:25;;;;;182:8;1299:5;:12;;1286:25;1282:598;;;1343:8;1335:4;:16;;;;;;;;:::i;:::-;;1331:535;;1571:19;237:6;1571:5;:19;:::i;:::-;1553:13;1527:23;1531:5;1538:11;1531:5;182:8;1538:11;:::i;:::-;1527:3;:23::i;:::-;1514:36;;:10;:36;:::i;:::-;:52;;;;:::i;:::-;1513:78;;;;:::i;:::-;1507:84;;1331:535;;;1829:17;182:8;237:6;1829:17;:::i;:::-;1812:13;1786:23;1790:5;1797:11;1790:5;182:8;1797:11;:::i;1786:23::-;1773:36;;:10;:36;:::i;:::-;:52;;;;:::i;:::-;:74;;;;:::i;:::-;1767:80;;1331:535;1191:699;961:935;;;;;;;:::o;14123:281:81:-;14271:7;;14267:131;;14294:40;14304:5;14311:8;14321:7;14330:3;14294:9;:40::i;:::-;14353:34;;;3143:25:87;;;3199:2;3184:18;;3177:34;;;14353::81;;;;;;3116:18:87;14353:34:81;;;;;;;14123:281;;;;:::o;690:233:71:-;755:7;778;789:1;778:12;774:73;;799:48;;;;;841:4;799:48;;;1307:74:87;799:33:71;561:10:72;799:33:71;;;;1280:18:87;;799:48:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;774:73::-;864:52;;;;;901:4;864:52;;;20506:74:87;20596:18;;;20589:34;;;864:28:71;658:3:72;864:28:71;;;;20479:18:87;;864:52:71;20332:297:87;541:335:68;640:7;659:20;692:34;713:4;719:6;692:20;:34::i;:::-;682:45;;;;;;;763:56;;;780:12;763:56;;;18606:92:87;18735:2;18731:15;;;;18748:66;18727:88;18714:11;;;18707:109;18832:12;;;18825:28;;;;18869:12;;;;18862:28;;;;763:56:68;;;;;;;;;;18906:12:87;;;;763:56:68;;;-1:-1:-1;;753:67:68;;;;;;;;;;-1:-1:-1;541:335:68:o;3344:217:80:-;3481:4;3548:6;3508:46;;:36;3522:10;3534:9;3508:13;:36::i;:::-;:46;;;;3344:217;-1:-1:-1;;;;3344:217:80:o;13982:135:81:-;14049:19;;;;;;;:42;;-1:-1:-1;14072:19:81;;;14081:10;14072:19;;14049:42;14045:65;;;14100:10;;;;;;;;;;;;;;250:259:66;392:7;419:11;434:1;419:16;415:30;;-1:-1:-1;444:1:66;437:8;;415:30;491:11;462:26;477:11;462:12;:26;:::i;:::-;:40;;;;:::i;14410:918:81:-;14533:17;14595:22;;;:11;:22;;;;;14686:16;;;;;14793:14;;:46;;14830:9;14793:46;;;14810:5;:17;;;14793:46;14781:58;;14964:9;14949:12;:24;14945:56;;;14982:19;;;;;;;;;;;;;;14945:56;15075:24;15087:12;15075:9;:24;:::i;:::-;15063:36;;15194:9;15207:1;15194:14;15190:53;;15210:33;;;;15239:4;15210:33;;;15190:53;15293:16;;:28;;;15312:9;14410:918;-1:-1:-1;;;14410:918:81:o;1148:283:71:-;561:10:72;1298:4:71;1282:21;;;;1278:146;;1305:47;1335:5;1342:2;1346:5;1305:29;:47::i;1278:146::-;1367:57;1401:5;1408:4;1414:2;1418:5;1367:33;:57::i;1437:167::-;1531:66;658:3:72;1577:4:71;1583:2;1587;1591:5;1531:35;:66::i;7863:1023:81:-;7977:19;7999:40;8016:10;8028;7999:16;:40::i;:::-;7977:62;;8102:57;8125:10;8137;8149:9;8102:22;:57::i;:::-;8187:10;8170:14;;8245:39;8265:10;8187;8245:19;:39::i;:::-;8351:21;;;;8207:77;;-1:-1:-1;8207:77:81;-1:-1:-1;8294:11:81;;8308:234;;8294:11;8386:27;;8308:234;8294:248;;8553:20;8575;8599:27;8615:10;8599:15;:27::i;:::-;8552:74;;;;8637:97;8657:6;8665;8673:10;:16;;;8691:12;8705;8719:9;8730:3;8637:19;:97::i;:::-;8804:16;;;;;8786;;;;8750:129;;;16787:25:87;;;16828:18;;;16821:34;;;16871:18;;16864:34;;;16929:2;16914:18;;16907:34;;;16972:3;16957:19;;16950:35;;;8750:129:81;;;;;;;;8775:9;;8750:129;;16774:3:87;16759:19;8750:129:81;;;;;;;7967:919;;;;;;;7863:1023;;;:::o;2183:281:66:-;2284:7;;2307:4;:16;;;;;;;;:::i;:::-;;2303:83;;2332:11;2347:1;2332:16;:54;;2385:1;2332:54;;;2371:11;2351:17;182:8;2351:11;:17;:::i;:::-;:31;;;;:::i;:::-;2325:61;;;;2303:83;2403:11;2418:1;2403:16;:54;;2456:1;2403:54;;;2442:11;2422:17;182:8;2422:11;:17;:::i;1902:104::-;1960:7;1990:1;1986;:5;:13;;1998:1;1986:13;;;-1:-1:-1;1994:1:66;;1979:20;-1:-1:-1;1902:104:66:o;882:892:68:-;1074:12;;;999:21;1074:12;;;;;;;;;969:18;;999:21;1023:64;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;1119:13;;1129:2;1119:13;;;;;;;;;1023:64;;-1:-1:-1;;;1119:13:68;1129:2;1119:13;;1129:2;;1119:13;;;;;-1:-1:-1;1119:13:68;1097:35;;1191:66;1184:4;1176:6;1172:17;1165:93;1311:28;1301:8;1297:43;1290:4;1282:6;1278:17;1271:70;1380:66;1373:4;1365:6;1361:17;1354:93;1498:28;1490:6;1486:41;1479:4;1471:6;1467:17;1460:68;1566:66;1560:3;1552:6;1548:16;1541:92;1728:6;1736:8;1711:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1703:42;;1755:12;;882:892;;;;:::o;3661:227:17:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:17;3661:227;-1:-1:-1;;;3661:227:17:o;577:147:70:-;663:54;698:5;706:2;710:6;663:28;:54::i;1105:175::-;1209:64;1248:5;1256:4;1262:2;1266:6;1209:32;:64::i;1688:183::-;1806:58;;;;;:32;21970:15:87;;;1806:58:70;;;21952:34:87;22022:15;;;22002:18;;;21995:43;22054:18;;;22047:34;;;22097:18;;;22090:34;;;22161:3;22140:19;;;22133:32;-1:-1:-1;22181:19:87;;;22174:30;1806:32:70;;;;;22221:19:87;;1806:58:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:183;;;;;:::o;11328:350:81:-;11427:9;;11452:10;:15;;;:27;;;;;;;;:::i;:::-;;:58;;;;-1:-1:-1;11502:8:81;11483:10;:15;;;:27;;;;;;;;:::i;:::-;;11452:58;11448:85;;;-1:-1:-1;11519:14:81;11512:21;;11448:85;11566:9;11547:10;:15;;;:28;;;;;;;;:::i;:::-;;:60;;;;-1:-1:-1;11598:9:81;11579:10;:15;;;:28;;;;;;;;:::i;:::-;;11547:60;11543:88;;;-1:-1:-1;11616:15:81;11609:22;;11543:88;-1:-1:-1;11648:23:81;11328:350;;;;:::o;13436:540::-;13588:51;13616:10;13628;13588:27;:51::i;:::-;13583:78;;13648:13;;;;;;;;;;;;;;13583:78;13720:23;13707:9;:36;;;;;;;;:::i;:::-;;13703:267;;13785:10;:18;;;13763:10;:18;;;:40;13759:73;;13812:20;;;;;;;;;;;;;;13703:267;13901:58;13920:10;:18;;;13940:10;:18;;;13901;:58::i;10349:973::-;10665:59;10675:5;10690:4;10697:12;10711;10665:9;:59::i;:::-;10788:84;10806:12;10820;10834;10848;10862:9;10788:17;:84::i;:::-;10988:12;10960:25;10972:12;10960:11;:25::i;:::-;:40;10956:78;;;11009:25;;;;;;;;;;;;;;10956:78;11128:65;11146:4;11153:5;11160:12;11174:18;11189:3;11174:12;:18;:::i;11128:65::-;11259:56;11278:4;11285:10;11297:12;11311:3;11259:10;:56::i;:::-;10349:973;;;;;;;:::o;2145:730:17:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:17;;-1:-1:-1;2822:35:17;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;;;;22453:2:87;788:34:17;;;22435:21:87;22492:2;22472:18;;;22465:30;22531:26;22511:18;;;22504:54;22575:18;;788:34:17;22251:348:87;730:345:17;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;;;;22806:2:87;903:41:17;;;22788:21:87;22845:2;22825:18;;;22818:30;22884:33;22864:18;;;22857:61;22935:18;;903:41:17;22604:355:87;839:236:17;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;;;;23166:2:87;1020:44:17;;;23148:21:87;23205:2;23185:18;;;23178:30;23244:34;23224:18;;;23217:62;23315:4;23295:18;;;23288:32;23337:19;;1020:44:17;22964:398:87;2864:1456:25;2976:12;3103:4;3097:11;3245:66;3226:17;3219:93;3359:2;3355:1;3336:17;3332:25;3325:37;3439:6;3434:2;3415:17;3411:26;3404:42;4241:2;4238:1;4234:2;4215:17;4212:1;4205:5;4198;4193:51;3762:16;3755:24;3749:2;3731:16;3728:24;3724:1;3720;3714:8;3711:15;3707:46;3704:76;3504:754;3493:765;;;4286:7;4278:35;;;;;;;23569:2:87;4278:35:25;;;23551:21:87;23608:2;23588:18;;;23581:30;23647:17;23627:18;;;23620:45;23682:18;;4278:35:25;23367:339:87;1285:1573:25;1423:12;1550:4;1544:11;1692:66;1673:17;1666:93;1806:4;1802:1;1783:17;1779:25;1772:39;1890:2;1885;1866:17;1862:26;1855:38;1970:6;1965:2;1946:17;1942:26;1935:42;2774:2;2771:1;2766:3;2747:17;2744:1;2737:5;2730;2725:52;2293:16;2286:24;2280:2;2262:16;2259:24;2255:1;2251;2245:8;2242:15;2238:46;2235:76;2035:756;2024:767;;;2819:7;2811:40;;;;;;;23913:2:87;2811:40:25;;;23895:21:87;23952:2;23932:18;;;23925:30;23991:22;23971:18;;;23964:50;24031:18;;2811:40:25;23711:344:87;2470:238:66;2545:4;2565:1;:13;;;2582:1;2565:18;:40;;;-1:-1:-1;2587:13:66;;;;:18;2565:40;2561:57;;;-1:-1:-1;2614:4:66;2607:11;;2561:57;2636:65;2648:17;2663:1;2648:14;:17::i;:::-;2667;2682:1;2667:14;:17::i;:::-;2686:1;:6;;;2694:1;:6;;;2636:11;:65::i;12373:880:81:-;12591:23;12578:9;:36;;;;;;;;:::i;:::-;12574:156;12713:7;12574:156;12756:14;12743:9;:27;;;;;;;;:::i;:::-;;12739:248;;467:7:79;493:16;;;:8;:16;;;;;:28;;;12927:49:81;;12963:12;12927:5;:49::i;:::-;12920:56;;12739:248;13013:15;13000:9;:28;;;;;;;;:::i;:::-;;12996:251;;467:7:79;493:16;;;:8;:16;;;;;:28;;;13186:50:81;;13223:12;13186:6;:50::i;5069:1494:17:-;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:17;;-1:-1:-1;6221:30:17;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;24287:25:87;;;24360:4;24348:17;;24328:18;;;24321:45;;;;24382:18;;;24375:34;;;24425:18;;;24418:34;;;6374:24:17;;24259:19:87;;6374:24:17;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:17;;;;;;-1:-1:-1;;6412:20:17;;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:17;;-1:-1:-1;5069:1494:17;;;;;;;;:::o;2012:165:66:-;2079:7;2105:65;2121:5;:17;;;2140:5;:17;;;2159:5;:10;;;2105:15;:65::i;2714:560::-;2814:4;;2834:5;:17;;;;;;;;:::i;:::-;;2830:248;;2880:8;2871:5;:17;;;;;;;;:::i;:::-;;2867:124;;182:8;2954:15;2963:6;2954;:15;:::i;:::-;:22;;2947:29;;;;2867:124;-1:-1:-1;3051:16:66;;;;3044:23;;2830:248;3100:8;3091:5;:17;;;;;;;;:::i;:::-;;3087:111;;-1:-1:-1;3171:16:66;;;;3164:23;;3087:111;182:8;3245:15;3254:6;3245;:15;:::i;:::-;:22;;;2714:560;-1:-1:-1;;;;;2714:560:66:o;1610:335:71:-;1719:16;;;1733:1;1719:16;;;;;;;;1690:26;;1719:16;;;;;;;;;;-1:-1:-1;1719:16:71;1690:45;;1760:1;1745:9;1755:1;1745:12;;;;;;;;:::i;:::-;;;;;;:16;;;;;1786:1;1771:9;1781:1;1771:12;;;;;;;;:::i;:::-;;;;;;;;;;:16;658:3:72;1797:42:71;;;561:10:72;1860:15:71;1797:141;;;;;;;;;;;;;681:1;;1898:11;;1911:9;;1922:6;;1797:141;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1951:338;2061:16;;;2075:1;2061:16;;;;;;;;2032:26;;2061:16;;;;;;;;;;-1:-1:-1;2061:16:71;2032:45;;2102:1;2087:9;2097:1;2087:12;;;;;;;;:::i;:::-;;;;;;:16;;;;;2128:1;2113:9;2123:1;2113:12;;;;;;;;:::i;:::-;;;;;;;;;;:16;658:3:72;2140:43:71;;;561:10:72;2204:15:71;480:98:72;14:332:87;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:154;629:42;622:5;618:54;611:5;608:65;598:93;;687:1;684;677:12;702:134;770:20;;799:31;770:20;799:31;:::i;:::-;702:134;;;:::o;841:315::-;909:6;917;970:2;958:9;949:7;945:23;941:32;938:52;;;986:1;983;976:12;938:52;1025:9;1012:23;1044:31;1069:5;1044:31;:::i;:::-;1094:5;1146:2;1131:18;;;;1118:32;;-1:-1:-1;;;841:315:87:o;1392:247::-;1451:6;1504:2;1492:9;1483:7;1479:23;1475:32;1472:52;;;1520:1;1517;1510:12;1472:52;1559:9;1546:23;1578:31;1603:5;1578:31;:::i;1826:180::-;1885:6;1938:2;1926:9;1917:7;1913:23;1909:32;1906:52;;;1954:1;1951;1944:12;1906:52;-1:-1:-1;1977:23:87;;1826:180;-1:-1:-1;1826:180:87:o;3222:184::-;3274:77;3271:1;3264:88;3371:4;3368:1;3361:15;3395:4;3392:1;3385:15;3411:255;3483:2;3477:9;3525:6;3513:19;;3562:18;3547:34;;3583:22;;;3544:62;3541:88;;;3609:18;;:::i;:::-;3645:2;3638:22;3411:255;:::o;3671:334::-;3742:2;3736:9;3798:2;3788:13;;3803:66;3784:86;3772:99;;3901:18;3886:34;;3922:22;;;3883:62;3880:88;;;3948:18;;:::i;:::-;3984:2;3977:22;3671:334;;-1:-1:-1;3671:334:87:o;4010:145::-;4080:20;;4129:1;4119:12;;4109:40;;4145:1;4142;4135:12;4160:154;4239:20;;4288:1;4278:12;;4268:40;;4304:1;4301;4294:12;4319:589;4361:5;4414:3;4407:4;4399:6;4395:17;4391:27;4381:55;;4432:1;4429;4422:12;4381:55;4468:6;4455:20;4494:18;4490:2;4487:26;4484:52;;;4516:18;;:::i;:::-;4560:114;4668:4;4599:66;4592:4;4588:2;4584:13;4580:86;4576:97;4560:114;:::i;:::-;4699:2;4690:7;4683:19;4745:3;4738:4;4733:2;4725:6;4721:15;4717:26;4714:35;4711:55;;;4762:1;4759;4752:12;4711:55;4827:2;4820:4;4812:6;4808:17;4801:4;4792:7;4788:18;4775:55;4875:1;4850:16;;;4868:4;4846:27;4839:38;;;;4854:7;4319:589;-1:-1:-1;;;4319:589:87:o;4913:1285::-;4965:5;5013:6;5001:9;4996:3;4992:19;4988:32;4985:52;;;5033:1;5030;5023:12;4985:52;5055:22;;:::i;:::-;5046:31;;5113:9;5100:23;5093:5;5086:38;5156;5190:2;5179:9;5175:18;5156:38;:::i;:::-;5151:2;5144:5;5140:14;5133:62;5227:38;5261:2;5250:9;5246:18;5227:38;:::i;:::-;5222:2;5215:5;5211:14;5204:62;5298:38;5332:2;5321:9;5317:18;5298:38;:::i;:::-;5293:2;5286:5;5282:14;5275:62;5398:3;5387:9;5383:19;5370:33;5364:3;5357:5;5353:15;5346:58;5465:3;5454:9;5450:19;5437:33;5431:3;5424:5;5420:15;5413:58;5532:3;5521:9;5517:19;5504:33;5498:3;5491:5;5487:15;5480:58;5599:3;5588:9;5584:19;5571:33;5565:3;5558:5;5554:15;5547:58;5624:3;5687:2;5676:9;5672:18;5659:32;5654:2;5647:5;5643:14;5636:56;;5711:3;5774:2;5763:9;5759:18;5746:32;5741:2;5734:5;5730:14;5723:56;;5798:3;5833:40;5869:2;5858:9;5854:18;5833:40;:::i;:::-;5817:14;;;5810:64;5893:3;5928:49;5958:18;;;5928:49;:::i;:::-;5912:14;;;5905:73;5997:3;6036:18;;;6023:32;6078:18;6067:30;;6064:50;;;6110:1;6107;6100:12;6064:50;6146:45;6187:3;6178:6;6167:9;6163:22;6146:45;:::i;:::-;6141:2;6134:5;6130:14;6123:69;;;4913:1285;;;;:::o;6203:342::-;6286:6;6339:2;6327:9;6318:7;6314:23;6310:32;6307:52;;;6355:1;6352;6345:12;6307:52;6395:9;6382:23;6428:18;6420:6;6417:30;6414:50;;;6460:1;6457;6450:12;6414:50;6483:56;6531:7;6522:6;6511:9;6507:22;6483:56;:::i;6550:316::-;6627:6;6635;6643;6696:2;6684:9;6675:7;6671:23;6667:32;6664:52;;;6712:1;6709;6702:12;6664:52;-1:-1:-1;;6735:23:87;;;6805:2;6790:18;;6777:32;;-1:-1:-1;6856:2:87;6841:18;;;6828:32;;6550:316;-1:-1:-1;6550:316:87:o;6871:183::-;6931:4;6964:18;6956:6;6953:30;6950:56;;;6986:18;;:::i;:::-;-1:-1:-1;7031:1:87;7027:14;7043:4;7023:25;;6871:183::o;7059:662::-;7113:5;7166:3;7159:4;7151:6;7147:17;7143:27;7133:55;;7184:1;7181;7174:12;7133:55;7220:6;7207:20;7246:4;7270:60;7286:43;7326:2;7286:43;:::i;:::-;7270:60;:::i;:::-;7364:15;;;7450:1;7446:10;;;;7434:23;;7430:32;;;7395:12;;;;7474:15;;;7471:35;;;7502:1;7499;7492:12;7471:35;7538:2;7530:6;7526:15;7550:142;7566:6;7561:3;7558:15;7550:142;;;7632:17;;7620:30;;7670:12;;;;7583;;7550:142;;;-1:-1:-1;7710:5:87;7059:662;-1:-1:-1;;;;;;7059:662:87:o;7726:1071::-;7880:6;7888;7896;7904;7912;7965:3;7953:9;7944:7;7940:23;7936:33;7933:53;;;7982:1;7979;7972:12;7933:53;8021:9;8008:23;8040:31;8065:5;8040:31;:::i;:::-;8090:5;-1:-1:-1;8147:2:87;8132:18;;8119:32;8160:33;8119:32;8160:33;:::i;:::-;8212:7;-1:-1:-1;8270:2:87;8255:18;;8242:32;8293:18;8323:14;;;8320:34;;;8350:1;8347;8340:12;8320:34;8373:61;8426:7;8417:6;8406:9;8402:22;8373:61;:::i;:::-;8363:71;;8487:2;8476:9;8472:18;8459:32;8443:48;;8516:2;8506:8;8503:16;8500:36;;;8532:1;8529;8522:12;8500:36;8555:63;8610:7;8599:8;8588:9;8584:24;8555:63;:::i;:::-;8545:73;;8671:3;8660:9;8656:19;8643:33;8627:49;;8701:2;8691:8;8688:16;8685:36;;;8717:1;8714;8707:12;8685:36;;8740:51;8783:7;8772:8;8761:9;8757:24;8740:51;:::i;:::-;8730:61;;;7726:1071;;;;;;;;:::o;9055:900::-;9114:5;9167:3;9160:4;9152:6;9148:17;9144:27;9134:55;;9185:1;9182;9175:12;9134:55;9221:6;9208:20;9247:4;9271:60;9287:43;9327:2;9287:43;:::i;9271:60::-;9365:15;;;9451:1;9447:10;;;;9435:23;;9431:32;;;9396:12;;;;9475:15;;;9472:35;;;9503:1;9500;9493:12;9472:35;9539:2;9531:6;9527:15;9551:375;9567:6;9562:3;9559:15;9551:375;;;9653:3;9640:17;9689:18;9676:11;9673:35;9670:125;;;9749:1;9778:2;9774;9767:14;9670:125;9820:63;9879:3;9874:2;9860:11;9852:6;9848:24;9844:33;9820:63;:::i;:::-;9808:76;;-1:-1:-1;9904:12:87;;;;9584;;9551:375;;9960:624;10102:6;10110;10163:2;10151:9;10142:7;10138:23;10134:32;10131:52;;;10179:1;10176;10169:12;10131:52;10219:9;10206:23;10248:18;10289:2;10281:6;10278:14;10275:34;;;10305:1;10302;10295:12;10275:34;10328:66;10386:7;10377:6;10366:9;10362:22;10328:66;:::i;:::-;10318:76;;10447:2;10436:9;10432:18;10419:32;10403:48;;10476:2;10466:8;10463:16;10460:36;;;10492:1;10489;10482:12;10460:36;;10515:63;10570:7;10559:8;10548:9;10544:24;10515:63;:::i;:::-;10505:73;;;9960:624;;;;;:::o;10589:248::-;10657:6;10665;10718:2;10706:9;10697:7;10693:23;10689:32;10686:52;;;10734:1;10731;10724:12;10686:52;-1:-1:-1;;10757:23:87;;;10827:2;10812:18;;;10799:32;;-1:-1:-1;10589:248:87:o;10842:410::-;10934:6;10942;10995:2;10983:9;10974:7;10970:23;10966:32;10963:52;;;11011:1;11008;11001:12;10963:52;11047:9;11034:23;11024:33;;11108:2;11097:9;11093:18;11080:32;11135:18;11127:6;11124:30;11121:50;;;11167:1;11164;11157:12;11121:50;11190:56;11238:7;11229:6;11218:9;11214:22;11190:56;:::i;11257:913::-;11441:6;11449;11457;11465;11518:3;11506:9;11497:7;11493:23;11489:33;11486:53;;;11535:1;11532;11525:12;11486:53;11575:9;11562:23;11604:18;11645:2;11637:6;11634:14;11631:34;;;11661:1;11658;11651:12;11631:34;11684:56;11732:7;11723:6;11712:9;11708:22;11684:56;:::i;:::-;11674:66;;11793:2;11782:9;11778:18;11765:32;11749:48;;11822:2;11812:8;11809:16;11806:36;;;11838:1;11835;11828:12;11806:36;11861:68;11921:7;11910:8;11899:9;11895:24;11861:68;:::i;:::-;11851:78;;11976:2;11965:9;11961:18;11948:32;11938:42;;12033:2;12022:9;12018:18;12005:32;11989:48;;12062:2;12052:8;12049:16;12046:36;;;12078:1;12075;12068:12;12046:36;;12101:63;12156:7;12145:8;12134:9;12130:24;12101:63;:::i;:::-;12091:73;;;11257:913;;;;;;;:::o;12175:734::-;12279:6;12287;12295;12303;12311;12364:3;12352:9;12343:7;12339:23;12335:33;12332:53;;;12381:1;12378;12371:12;12332:53;12420:9;12407:23;12439:31;12464:5;12439:31;:::i;:::-;12489:5;-1:-1:-1;12546:2:87;12531:18;;12518:32;12559:33;12518:32;12559:33;:::i;:::-;12611:7;-1:-1:-1;12665:2:87;12650:18;;12637:32;;-1:-1:-1;12716:2:87;12701:18;;12688:32;;-1:-1:-1;12771:3:87;12756:19;;12743:33;12799:18;12788:30;;12785:50;;;12831:1;12828;12821:12;12785:50;12854:49;12895:7;12886:6;12875:9;12871:22;12854:49;:::i;12914:377::-;13022:6;13075:2;13063:9;13054:7;13050:23;13046:32;13043:52;;;13091:1;13088;13081:12;13043:52;13131:9;13118:23;13164:18;13156:6;13153:30;13150:50;;;13196:1;13193;13186:12;13150:50;13219:66;13277:7;13268:6;13257:9;13253:22;13219:66;:::i;13296:410::-;13388:6;13396;13449:2;13437:9;13428:7;13424:23;13420:32;13417:52;;;13465:1;13462;13455:12;13417:52;13505:9;13492:23;13538:18;13530:6;13527:30;13524:50;;;13570:1;13567;13560:12;13524:50;13593:56;13641:7;13632:6;13621:9;13617:22;13593:56;:::i;:::-;13583:66;13696:2;13681:18;;;;13668:32;;-1:-1:-1;;;;13296:410:87:o;13711:251::-;13781:6;13834:2;13822:9;13813:7;13809:23;13805:32;13802:52;;;13850:1;13847;13840:12;13802:52;13882:9;13876:16;13901:31;13926:5;13901:31;:::i;14306:184::-;14358:77;14355:1;14348:88;14455:4;14452:1;14445:15;14479:4;14476:1;14469:15;14495:144;14580:1;14573:5;14570:12;14560:46;;14586:18;;:::i;:::-;14615;;14495:144::o;14644:1238::-;15100:4;15142:3;15131:9;15127:19;15119:27;;15173:6;15162:9;15155:25;15216:6;15211:2;15200:9;15196:18;15189:34;15242:42;15332:2;15324:6;15320:15;15315:2;15304:9;15300:18;15293:43;15384:2;15376:6;15372:15;15367:2;15356:9;15352:18;15345:43;15437:2;15429:6;15425:15;15419:3;15408:9;15404:19;15397:44;;15478:6;15472:3;15461:9;15457:19;15450:35;15522:6;15516:3;15505:9;15501:19;15494:35;15566:6;15560:3;15549:9;15545:19;15538:35;15610:6;15604:3;15593:9;15589:19;15582:35;15654:6;15648:3;15637:9;15633:19;15626:35;15698:7;15692:3;15681:9;15677:19;15670:36;15737:1;15728:7;15725:14;15715:48;;15743:18;;:::i;:::-;15800:7;15794:3;15783:9;15779:19;15772:36;15817:59;15871:3;15860:9;15856:19;15847:7;15817:59;:::i;:::-;14644:1238;;;;;;;;;;;;;;;;:::o;15887:184::-;15939:77;15936:1;15929:88;16036:4;16033:1;16026:15;16060:4;16057:1;16050:15;16076:184;16128:77;16125:1;16118:88;16225:4;16222:1;16215:15;16249:4;16246:1;16239:15;16265:128;16305:3;16336:1;16332:6;16329:1;16326:13;16323:39;;;16342:18;;:::i;:::-;-1:-1:-1;16378:9:87;;16265:128::o;16398:125::-;16438:4;16466:1;16463;16460:8;16457:34;;;16471:18;;:::i;:::-;-1:-1:-1;16508:9:87;;16398:125::o;17661:258::-;17733:1;17743:113;17757:6;17754:1;17751:13;17743:113;;;17833:11;;;17827:18;17814:11;;;17807:39;17779:2;17772:10;17743:113;;;17874:6;17871:1;17868:13;17865:48;;;-1:-1:-1;;17909:1:87;17891:16;;17884:27;17661:258::o;17924:466::-;18099:3;18137:6;18131:13;18153:53;18199:6;18194:3;18187:4;18179:6;18175:17;18153:53;:::i;:::-;18269:13;;18228:16;;;;18291:57;18269:13;18228:16;18325:4;18313:17;;18291:57;:::i;:::-;18364:20;;17924:466;-1:-1:-1;;;;17924:466:87:o;19378:228::-;19418:7;19544:1;19476:66;19472:74;19469:1;19466:81;19461:1;19454:9;19447:17;19443:105;19440:131;;;19551:18;;:::i;:::-;-1:-1:-1;19591:9:87;;19378:228::o;19611:274::-;19651:1;19677;19667:189;;19712:77;19709:1;19702:88;19813:4;19810:1;19803:15;19841:4;19838:1;19831:15;19667:189;-1:-1:-1;19870:9:87;;19611:274::o;20143:184::-;20213:6;20266:2;20254:9;20245:7;20241:23;20237:32;20234:52;;;20282:1;20279;20272:12;20234:52;-1:-1:-1;20305:16:87;;20143:184;-1:-1:-1;20143:184:87:o;21151:440::-;21298:2;21287:9;21280:21;21261:4;21330:6;21324:13;21373:6;21368:2;21357:9;21353:18;21346:34;21389:66;21448:6;21443:2;21432:9;21428:18;21423:2;21415:6;21411:15;21389:66;:::i;:::-;21507:2;21495:15;21512:66;21491:88;21476:104;;;;21582:2;21472:113;;21151:440;-1:-1:-1;;21151:440:87:o;24463:985::-;24733:4;24781:3;24770:9;24766:19;24824:42;24816:6;24812:55;24801:9;24794:74;24887:2;24925:6;24920:2;24909:9;24905:18;24898:34;24968:6;24963:2;24952:9;24948:18;24941:34;25011:3;25006:2;24995:9;24991:18;24984:31;25035:6;25070;25064:13;25101:6;25093;25086:22;25139:3;25128:9;25124:19;25117:26;;25178:2;25170:6;25166:15;25152:29;;25199:1;25209:169;25223:6;25220:1;25217:13;25209:169;;;25284:13;;25272:26;;25353:15;;;;25318:12;;;;25245:1;25238:9;25209:169;;;25213:3;;25395;25387:11;;;;;25435:6;25429:3;25418:9;25414:19;25407:35;24463:985;;;;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "24716": [
        {
          "start": 8751,
          "length": 32
        }
      ],
      "24718": [
        {
          "start": 8709,
          "length": 32
        }
      ],
      "24720": [
        {
          "start": 8667,
          "length": 32
        }
      ],
      "24722": [
        {
          "start": 8834,
          "length": 32
        }
      ],
      "24724": [
        {
          "start": 8871,
          "length": 32
        }
      ],
      "24726": [
        {
          "start": 8792,
          "length": 32
        }
      ],
      "30204": [
        {
          "start": 1515,
          "length": 32
        },
        {
          "start": 9699,
          "length": 32
        },
        {
          "start": 10477,
          "length": 32
        },
        {
          "start": 13710,
          "length": 32
        },
        {
          "start": 14014,
          "length": 32
        }
      ],
      "30206": [
        {
          "start": 1224,
          "length": 32
        },
        {
          "start": 9880,
          "length": 32
        },
        {
          "start": 10565,
          "length": 32
        },
        {
          "start": 13650,
          "length": 32
        },
        {
          "start": 13954,
          "length": 32
        }
      ],
      "30507": [
        {
          "start": 2199,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addAdmin(address)": "70480275",
    "addOperator(address)": "9870d7fe",
    "admins(address)": "429b62e5",
    "cancelOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))": "a6dfcf86",
    "cancelOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[])": "fa950b48",
    "domainSeparator()": "f698da25",
    "fillOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),uint256)": "fe729aaf",
    "fillOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256[])": "d798eff6",
    "getCollateral()": "5c1548fb",
    "getComplement(uint256)": "a10f3dce",
    "getConditionId(uint256)": "d7fb272f",
    "getCtf()": "3b521d78",
    "getMaxFeeRate()": "4a2a11f5",
    "getOrderStatus(bytes32)": "46423aa7",
    "getPolyProxyFactoryImplementation()": "06b9d691",
    "getPolyProxyWalletAddress(address)": "edef7d8e",
    "getProxyFactory()": "b28c51c0",
    "getSafeAddress(address)": "a287bdf1",
    "getSafeFactory()": "75d7370a",
    "getSafeFactoryImplementation()": "e03ac3d0",
    "hashOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))": "e50e4f97",
    "incrementNonce()": "627cdcb9",
    "isAdmin(address)": "24d7806c",
    "isOperator(address)": "6d70f7ae",
    "isValidNonce(address,uint256)": "0647ee20",
    "matchOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256,uint256[])": "e60f0c05",
    "nonces(address)": "7ecebe00",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "operators(address)": "13e7c9d8",
    "orderStatus(bytes32)": "2dff692d",
    "parentCollectionId()": "44bea37e",
    "pauseTrading()": "1031e36e",
    "paused()": "5c975abb",
    "proxyFactory()": "c10f1a75",
    "registerToken(uint256,uint256,bytes32)": "68c7450f",
    "registry(uint256)": "5893253c",
    "removeAdmin(address)": "1785f53c",
    "removeOperator(address)": "ac8a584a",
    "renounceAdminRole()": "83b8a5ae",
    "renounceOperatorRole()": "3d6d3598",
    "safeFactory()": "131e7e1c",
    "setProxyFactory(address)": "fbddd751",
    "setSafeFactory(address)": "4544f055",
    "supportsInterface(bytes4)": "01ffc9a7",
    "unpauseTrading()": "456068d2",
    "validateComplement(uint256,uint256)": "d82da838",
    "validateOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))": "654f0ce4",
    "validateOrderSignature(bytes32,(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))": "e2eec405",
    "validateTokenId(uint256)": "34600901"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ctf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_proxyFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_safeFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidComplement\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MakingGtRemaining\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedTokenIds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCrossing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotTaker\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderFilledOrCancelled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Paused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooLittleTokensReceived\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeCharged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdminAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"NewOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"makerAssetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerAssetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"makerAmountFilled\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerAmountFilled\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"OrderFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"takerOrderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takerOrderMaker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"makerAssetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerAssetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"makerAmountFilled\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerAmountFilled\",\"type\":\"uint256\"}],\"name\":\"OrdersMatched\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldProxyFactory\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newProxyFactory\",\"type\":\"address\"}],\"name\":\"ProxyFactoryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"RemovedAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"RemovedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSafeFactory\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSafeFactory\",\"type\":\"address\"}],\"name\":\"SafeFactoryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"token0\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"token1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"}],\"name\":\"TokenRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"}],\"name\":\"TradingPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"}],\"name\":\"TradingUnpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRateBps\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"enum SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRateBps\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"enum SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"}],\"name\":\"cancelOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRateBps\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"enum SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"fillAmount\",\"type\":\"uint256\"}],\"name\":\"fillOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRateBps\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"enum SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"fillAmounts\",\"type\":\"uint256[]\"}],\"name\":\"fillOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"}],\"name\":\"getComplement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"}],\"name\":\"getConditionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCtf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"getOrderStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isFilledOrCancelled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderStatus\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPolyProxyFactoryImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getPolyProxyWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProxyFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getSafeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSafeFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSafeFactoryImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRateBps\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"enum SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"hashOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"isValidNonce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRateBps\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"enum SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"takerOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRateBps\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"enum SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order[]\",\"name\":\"makerOrders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"takerFillAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"makerFillAmounts\",\"type\":\"uint256[]\"}],\"name\":\"matchOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isFilledOrCancelled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentCollectionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"complement\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"}],\"name\":\"registerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"complement\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOperatorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safeFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newProxyFactory\",\"type\":\"address\"}],\"name\":\"setProxyFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newSafeFactory\",\"type\":\"address\"}],\"name\":\"setSafeFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"complement\",\"type\":\"uint256\"}],\"name\":\"validateComplement\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRateBps\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"enum SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"validateOrder\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRateBps\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"enum SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"validateOrderSignature\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"validateTokenId\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Polymarket\",\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"params\":{\"admin_\":\"- The new admin\"}},\"addOperator(address)\":{\"params\":{\"operator_\":\"- The new operator\"}},\"fillOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),uint256)\":{\"params\":{\"fillAmount\":\"- The amount to be filled, always in terms of the maker amount\",\"order\":\"- The order to be filled\"}},\"fillOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256[])\":{\"params\":{\"fillAmounts\":\"- The amounts to be filled, always in terms of the maker amount\",\"orders\":\"- The order to be filled\"}},\"getComplement(uint256)\":{\"params\":{\"token\":\"- The token\"}},\"getConditionId(uint256)\":{\"params\":{\"token\":\"- The token\"}},\"getOrderStatus(bytes32)\":{\"params\":{\"orderHash\":\"- The hash of the order\"}},\"getPolyProxyWalletAddress(address)\":{\"params\":{\"_addr\":\"- The address that owns the proxy wallet\"}},\"getSafeAddress(address)\":{\"params\":{\"_addr\":\"- The address that owns the proxy wallet\"}},\"hashOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))\":{\"params\":{\"order\":\"- The order to be hashed\"}},\"matchOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256,uint256[])\":{\"params\":{\"makerFillAmounts\":\"- The array of amounts to fill on the maker orders, always in terms of the maker amount\",\"makerOrders\":\"- The array of maker orders to be matched against the active order\",\"takerFillAmount\":\"- The amount to fill on the taker order, always in terms of the maker amount\",\"takerOrder\":\"- The active order to be matched\"}},\"registerToken(uint256,uint256,bytes32)\":{\"params\":{\"complement\":\"- The complement of the tokenId\",\"conditionId\":\"- The CTF conditionId\",\"token\":\"- The tokenId being registered\"}},\"removeAdmin(address)\":{\"params\":{\"admin\":\"- The admin to be removed\"}},\"removeOperator(address)\":{\"params\":{\"operator\":\"- The operator to be removed\"}},\"setProxyFactory(address)\":{\"params\":{\"_newProxyFactory\":\"- The new Proxy Wallet factory\"}},\"setSafeFactory(address)\":{\"params\":{\"_newSafeFactory\":\"- The new Safe wallet factory\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"validateComplement(uint256,uint256)\":{\"params\":{\"complement\":\"- The complement to be validated\",\"token\":\"- The tokenId\"}},\"validateOrderSignature(bytes32,(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))\":{\"params\":{\"order\":\"- The order\",\"orderHash\":\"- The hash of the order\"}},\"validateTokenId(uint256)\":{\"params\":{\"tokenId\":\"- The tokenId\"}}},\"title\":\"CTF Exchange\",\"version\":1},\"userdoc\":{\"events\":{\"FeeCharged(address,uint256,uint256)\":{\"notice\":\"Emitted when a fee is charged\"},\"NewAdmin(address,address)\":{\"notice\":\"Emitted when a new admin is added\"},\"NewOperator(address,address)\":{\"notice\":\"Emitted when a new operator is added\"},\"OrderCancelled(bytes32)\":{\"notice\":\"Emitted when an order is cancelled\"},\"OrderFilled(bytes32,address,address,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted when an order is filled\"},\"OrdersMatched(bytes32,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a set of orders is matched\"},\"RemovedAdmin(address,address)\":{\"notice\":\"Emitted when an admin is removed\"},\"RemovedOperator(address,address)\":{\"notice\":\"Emitted when an operator is removed\"},\"TokenRegistered(uint256,uint256,bytes32)\":{\"notice\":\"Emitted when a token is registered\"}},\"kind\":\"user\",\"methods\":{\"addAdmin(address)\":{\"notice\":\"Adds a new admin Can only be called by a current admin\"},\"addOperator(address)\":{\"notice\":\"Adds a new operator Can only be called by a current admin\"},\"cancelOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))\":{\"notice\":\"Cancels an order An order can only be cancelled by its maker, the address which holds funds for the orderorder - The order to be cancelled\"},\"cancelOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[])\":{\"notice\":\"Cancels a set of ordersorders - The set of orders to be cancelled\"},\"fillOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),uint256)\":{\"notice\":\"Fills an order\"},\"fillOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256[])\":{\"notice\":\"Fills a set of orders\"},\"getComplement(uint256)\":{\"notice\":\"Gets the complement of a tokenId\"},\"getConditionId(uint256)\":{\"notice\":\"Gets the conditionId from a tokenId\"},\"getMaxFeeRate()\":{\"notice\":\"Returns the maximum fee rate for an order\"},\"getOrderStatus(bytes32)\":{\"notice\":\"Gets the status of an order\"},\"getPolyProxyFactoryImplementation()\":{\"notice\":\"Gets the Polymarket Proxy factory implementation address\"},\"getPolyProxyWalletAddress(address)\":{\"notice\":\"Gets the Polymarket proxy wallet address for an address\"},\"getProxyFactory()\":{\"notice\":\"Gets the Proxy factory address\"},\"getSafeAddress(address)\":{\"notice\":\"Gets the Polymarket Gnosis Safe address for an address\"},\"getSafeFactory()\":{\"notice\":\"Gets the Safe factory address\"},\"getSafeFactoryImplementation()\":{\"notice\":\"Gets the Safe factory implementation address\"},\"hashOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))\":{\"notice\":\"Computes the hash for an order\"},\"matchOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256,uint256[])\":{\"notice\":\"Matches a taker order against a list of maker orders\"},\"orderStatus(bytes32)\":{\"notice\":\"Mapping of orders to their current status\"},\"pauseTrading()\":{\"notice\":\"Pause trading on the Exchange\"},\"proxyFactory()\":{\"notice\":\"The Polymarket Proxy Wallet Factory Contract\"},\"registerToken(uint256,uint256,bytes32)\":{\"notice\":\"Registers a tokenId, its complement and its conditionId for trading on the Exchange\"},\"removeAdmin(address)\":{\"notice\":\"Removes an existing Admin Can only be called by a current admin\"},\"removeOperator(address)\":{\"notice\":\"Removes an existing operator Can only be called by a current admin\"},\"renounceAdminRole()\":{\"notice\":\"Removes the admin role for the caller Can only be called by an existing admin\"},\"renounceOperatorRole()\":{\"notice\":\"Removes the operator role for the caller Can only be called by an exiting operator\"},\"safeFactory()\":{\"notice\":\"The Polymarket Gnosis Safe Factory Contract\"},\"setProxyFactory(address)\":{\"notice\":\"Sets a new Proxy Wallet factory for the Exchange\"},\"setSafeFactory(address)\":{\"notice\":\"Sets a new safe factory for the Exchange\"},\"unpauseTrading()\":{\"notice\":\"Unpause trading on the Exchange\"},\"validateComplement(uint256,uint256)\":{\"notice\":\"Validates the complement of a tokenId\"},\"validateOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))\":{\"notice\":\"Validates an orderorder - The order to be validated\"},\"validateOrderSignature(bytes32,(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))\":{\"notice\":\"Validates the signature of an order\"},\"validateTokenId(uint256)\":{\"notice\":\"Validates that a tokenId is registered\"}},\"notice\":\"Implements logic for trading CTF assets\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/exchange/CTFExchange.sol\":\"CTFExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":common/=src/common/\",\":creator/=src/creator/\",\":dev/=src/dev/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":exchange/=src/exchange/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0\",\"dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x34d5fd3e73f17311fc4ae0ec192c59d5e46d585045017b41a78b8c75ab387d9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11224aad5e5e78cda2e0e8456e27121ece04e725a24d63568fa56f100dc47fb3\",\"dweb:/ipfs/QmWrpMpotNwYyWcZJUuRcwas9nuy7KYsFTQ1EELUdWQRww\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x852987c093178595e02298b72a5f3c09aee541604b9e24a3a550bc63d92f3a22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9b51f6bbe233c5ad5aa9dd2d09e1dc2f7e5b7a8007ad6d0a1c4cdd8e913d157\",\"dweb:/ipfs/QmNZz3XegYagUgKBPBNeMuPZQNwmYd6j7GbwTFU1T6ZsD2\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x39625646d85d5ac7009db6a76674186e2404a5907791ffe01df88df2e2f1abe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d53b213ac8e03d454d8bafd7393c757420cf170ba76e33b6aa5bb1b804779335\",\"dweb:/ipfs/QmZc7Mb8MGZmuSkcohtqPC2MgVYTXwDwVRguqAA1rQq6eF\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf\",\"dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"src/common/ReentrancyGuard.sol\":{\"keccak256\":\"0x51475ac2429bbf514b7b0b9e1833857c009e283d553ea086c33dcf52d4857a16\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e92d88f9a6365da67417290b1af11b63312d8ab5b8e1a296490a897cf4e376a9\",\"dweb:/ipfs/QmR8xgKmExUftpQD4M8gT1kyR13ULaUvyv5rRuC9bicJKP\"]},\"src/common/libraries/SafeTransferLib.sol\":{\"keccak256\":\"0x95044db1857cb3317e61376246060ce214157f5b7fbc9be740e7ad904bea9d19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d31322b215909d6de015c3f6ec68084d387eef687e2231250fa469f34227787d\",\"dweb:/ipfs/QmepnBzhjWTjRKY6aoD5PVERkdsXoGPpZPtMFfsdEhurHT\"]},\"src/exchange/BaseExchange.sol\":{\"keccak256\":\"0xe930049428f63f8867c963247c739c194e8264752e4fadcd9c6cb5bf26eb2596\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://903222ac0178af88dcd0b2efb2bc290bfc2b361fa52d50c06d30efc1fc3d4267\",\"dweb:/ipfs/QmeGMJuGQ78TFzKkCMU7U5UAmVFSNkgRpnTa9rDcXuGjNT\"]},\"src/exchange/CTFExchange.sol\":{\"keccak256\":\"0x1688e624113198eff88d42fb78631ca6983456f0146158def0f4f34c223cac07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11c9c4762f319f1d872d31d884afb6b61444ab2a65ac49a2a1cac340beb10ae1\",\"dweb:/ipfs/QmVT1b61Akm6mwTTDxDAa22GF5Ybk7JXqKi77dAw8APr7i\"]},\"src/exchange/interfaces/IAssetOperations.sol\":{\"keccak256\":\"0x699d40015c3d6c24f9145886d19e20ebb6887c1c676d9b972c0a0a611786ed5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6ac4553a301d37c2b8518bcf70180f8b6d85ffcc1a9cc9597866b58d355c5e\",\"dweb:/ipfs/QmT2fcBoHN7aqEQ8cMa87zwyNbA29xTtjw2yFwX7U4uHP9\"]},\"src/exchange/interfaces/IAssets.sol\":{\"keccak256\":\"0xf24de0c34a39131536eee303a74c5b01380879879e1075a94e10a94280176035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8741e3d8e944e8c8021c3d04ee9ad28d6a4f2da4c77d4edca451c71914ed19ba\",\"dweb:/ipfs/QmdyCHLeW4grjbG5X67tPbtZvWZvYsX35cD8rXY7S7CwtZ\"]},\"src/exchange/interfaces/IAuth.sol\":{\"keccak256\":\"0x28840ffbea3ecba8ba9fb19272ba3f3c5be11af9f3fac19bd9e183142554c436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a650ccbc2b69cb929fd4c8572f804f4c19b794bbb43e0e1d507db1663cd4ee6\",\"dweb:/ipfs/QmTwdHsTA8UZ52GysqBaMfs8bbQGJoEwdRn9UZ38wwEV1V\"]},\"src/exchange/interfaces/IConditionalTokens.sol\":{\"keccak256\":\"0x320e2dd0a8aa8771b86a07a252303b4a6c4cd2e369f0c00a87c30c89b3969d13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7134d460cbee5a3f8cf4a97cc3d81f59b4d6aad978c18e65caff265ac7002e71\",\"dweb:/ipfs/Qmc4cmZRDVsvGWXuk946nMG6YseMWya8VmTRN5K7ds6gHt\"]},\"src/exchange/interfaces/IFees.sol\":{\"keccak256\":\"0x94910bd74962e9bee385ea7b6fbc7f8ef9344e6c650ae534434a45907e65601d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c5a673ed2eaf5de79f4d784401015eaef05b7d06be898204b069c1ea5b4b3de\",\"dweb:/ipfs/QmcsFzpLy1kfAjMXpmd4igHHSzMxPyukCPsaZFovnABV7S\"]},\"src/exchange/interfaces/IHashing.sol\":{\"keccak256\":\"0xfa065713a0e9ab2a2eea407144344ebdc5f96a50763e8bcd26614e8a29618b4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5301d014a3ba3abef2601867bd3783950af5c121254ad961d98e873933ae27ff\",\"dweb:/ipfs/QmVC2G3YanK2Uok3fi7b1M6x7oke7r5CurfWE2CUU3PpuH\"]},\"src/exchange/interfaces/INonceManager.sol\":{\"keccak256\":\"0xdafbd9242bdbf96a9b6d8fab709d5fc9235540f1b9d5fc7e88fda2bc55ca4ecc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dea605edf760a8c290e85e31c33417b46499430d2121fb25cf0cd8a3b60de14\",\"dweb:/ipfs/QmXEZUEMkcwQKzAZR2K3A7tZHxUFnXKANJ6wkNA7end5o3\"]},\"src/exchange/interfaces/IPausable.sol\":{\"keccak256\":\"0x9fd256477ea8b221df172e742e82b9acbbe92542b091e90d9f6481cd17b5b16c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47be49567b529875e9f55e1e9a525cdb4df4a1d3bc6c2353b5a4905e0c5ea6a9\",\"dweb:/ipfs/QmQ2ccCsBDuKQFxy9BwHdhS4ms3fgp6TLXSnXzNcwcCmYX\"]},\"src/exchange/interfaces/IRegistry.sol\":{\"keccak256\":\"0x4f2dfb6549927580d679a500e7292523b75f83292e22b5434863081a0a89b656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10418609e8ffa8576d331b9f981984040805a610884e1aa0d369f8bd89ed26c1\",\"dweb:/ipfs/QmasnvPKKyZRP52M6JhXUNNKRFr5XSRiaorLPCu8zN55PA\"]},\"src/exchange/interfaces/ISignatures.sol\":{\"keccak256\":\"0xebda841593e4e6adc6479ecc8c019c071c1ba241599c61b49bf2a77a674ac558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://259e6ce3aaebd89ad38d4e25b63861e92b879f979273524d6483939ce5fc545e\",\"dweb:/ipfs/QmRzTA2Bdu6NG2qMHVqXiwEYdbyuE3vXidpNMkUwzexAMd\"]},\"src/exchange/interfaces/ITrading.sol\":{\"keccak256\":\"0xa06ff0c9dee50838f221ac0761414874805538751d9011b48272f9ac04fc7353\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9abfc33326d045e518decd655e570d8b25737d961008ca9e7b584318b5e5d0\",\"dweb:/ipfs/QmQpjQUZVCEE7pex9K1WWG9qxbDRnBoaNyfq8s1wwLWFUN\"]},\"src/exchange/libraries/CalculatorHelper.sol\":{\"keccak256\":\"0xa7234192ae26da247e3fe18958907e556e73c022480ea9c91b49744cce8f1949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87592da00cb7da14312f445c27cdfe1b8521729758bf7a076e88e121e006e988\",\"dweb:/ipfs/QmRufuL8V74Ud2nqQCjVdnSGxzxawX33qzsQe8nfRUEQWy\"]},\"src/exchange/libraries/OrderStructs.sol\":{\"keccak256\":\"0x77c6e2c11bac9b60ab0c6b7d03ad11c829f176ba35f6418bbcefb10e8713d39a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0b31336ee6be3a2a5dec6676a76bfa3435d10085ae40c9d333e980dfbbe369b\",\"dweb:/ipfs/QmNjqk8xvq6VcxE3KPuGq3iv1RiLZUT3feqzq8wntSiZ2J\"]},\"src/exchange/libraries/PolyProxyLib.sol\":{\"keccak256\":\"0x61e523b9f2d66217963acf42086746db43823cda37b2fb3a6e46efd7727b668e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://250c6a90c192c041225244b9a91ee61cab4a8ba9834791d590d74b0f32c7ea36\",\"dweb:/ipfs/QmRy2yM3omqYAiB2KKFC5Rqv9dV3yPehoHUd2Sk9X8mdx7\"]},\"src/exchange/libraries/PolySafeLib.sol\":{\"keccak256\":\"0x38030ab9c88a7e87974e1e46c80f640452e3f0099043750c680a086455194bd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fdb8f5e134b8a659c116794f6d698674ad629fb50a7889ee08f98230cce7f4d\",\"dweb:/ipfs/QmZjfP7LaE7yDCgDyHRzjmD22zJmouruVooH7xJRPfgGhM\"]},\"src/exchange/libraries/TransferHelper.sol\":{\"keccak256\":\"0x18ce3d87da126557b003af507b92757c51f670d3e96b9ae3aeba9e451e666c77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c5faa184338f73f33f7f79d918ecb99aa1182da8af83b116bd33b3281421e92\",\"dweb:/ipfs/QmU9NZPZLUfyFdcdaLBXhzjA58h3dpuowughYyVp9sDi8C\"]},\"src/exchange/mixins/AssetOperations.sol\":{\"keccak256\":\"0x1c0a271460e381b2e152e5fac6e459bb42def5c787d7319722cd48396763a5ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bb58bcfbb1ff64d17e7bbbc69b0d0b044a63f7ff9e8ee996ad23823c0441651\",\"dweb:/ipfs/QmbEZqoGeUJQ9ZqSTmMXqzPifaJzCobwbmTQwaRp3oGXZS\"]},\"src/exchange/mixins/Assets.sol\":{\"keccak256\":\"0x1afce518482db670731eb08b9d713149f30e6e5166cbaae028f1f90644ea530e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b472fea967460337e4b1ff5b19957f162752ee4eb3461e43e86007de603d2a2a\",\"dweb:/ipfs/QmZc1ekmjQiizqe2URYtDXRkEVwsuDXxromJPXnBBPFJZ1\"]},\"src/exchange/mixins/Auth.sol\":{\"keccak256\":\"0x8977d1321c550ee2ba58e9dd5cbb044ca5e8e0a26aab92df76be0b905a1d77b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05a61f151952f515003c9797e72d266a7a4ace4b5d0793829e07b649318c4e80\",\"dweb:/ipfs/Qmce6zy5LZHHT5db5b7fi46MxgYMzTSq4jD8fdAmQ61GRf\"]},\"src/exchange/mixins/Fees.sol\":{\"keccak256\":\"0x3454ddb3c5f07dba53638af88026df751b3ca9431433cd173430b62dd22da4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e508671dfca599835fc4916645fc0ee29eb4de8c942d63583aede7ae2ffe65ef\",\"dweb:/ipfs/QmQFMBd5ZcUA9qPPbpqoiXoy4ebvDGRmCQ4UzzGCo3wFtg\"]},\"src/exchange/mixins/Hashing.sol\":{\"keccak256\":\"0xb8db6fa8135edfb35775853e04d90cc5237848638f22b4f450327b92c296a0b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f53730d36fa0c4111403dcbf484e6710f699508be74ae968f2a0e336bcf3454\",\"dweb:/ipfs/QmfHhbubwaUtrgNwHexiHYbhEnCdWAZroTW4vtrmyqB61D\"]},\"src/exchange/mixins/NonceManager.sol\":{\"keccak256\":\"0x00865e31b738a8318c33fc6b3a07b474f5cc51e9ee9a7e9d4ee558af75cf7d02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10c731bb43053c677c8e21e5ca6c0fd4d0d921bf0aae13c439e14b80237c841c\",\"dweb:/ipfs/QmVseycNZUzjWy1JRTc1zJhj11iVw5G6oMWe8FuMcMmyTf\"]},\"src/exchange/mixins/Pausable.sol\":{\"keccak256\":\"0x35765bcb37ca980d478b066c00ed6efdb357dc2ad9ecf7a6b0689dbd09631eab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8afe0f4b8d7ed16349224f6c808caf1e80bcbdac489d038800a95dd95f105238\",\"dweb:/ipfs/QmaAHATxCBfe3kMjeWknEoURHsFQTqvki76KmRUkCY73yu\"]},\"src/exchange/mixins/PolyFactoryHelper.sol\":{\"keccak256\":\"0x7a54482123cfb8eebb914cc43f12d656f2291209e5d6ae7f014545c3c8ee26b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c444e92d53a24f86e3a6531644141a5548df9a5d6da6fb1e615da4609590a7\",\"dweb:/ipfs/QmYUQMUhRDqJtYreY1GWpgq6GiTxWeBvJ4gQmBUkEoXuB4\"]},\"src/exchange/mixins/Registry.sol\":{\"keccak256\":\"0x6c3af2124e5002fa6c653b1858159e67889cc228f2c4b23da2389b39ead31806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89a053877b096053794a3e575ac3f4e1bb2d42de42f3a476a9a3e8303693194a\",\"dweb:/ipfs/QmWH5ZfjYeLTPR8Jmcy1nfTaBfqBxJDH1Puf8R1kV9HpBW\"]},\"src/exchange/mixins/Signatures.sol\":{\"keccak256\":\"0x6347d6f992b5dee392ea98c6095e11b8808d504f7bb05feccf313bd22167b60f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1431e9e1b16e0a1e684a8af6108696ccb315cbf9b0e7feba4e7116845d6eb4c\",\"dweb:/ipfs/QmUC7Kf4QQZZoKCcQWRKY6WQPwaERgpz4VmigXXcDwMDTH\"]},\"src/exchange/mixins/Trading.sol\":{\"keccak256\":\"0x9c0f6025629047d9680262a66d89e8720ffbdd62a73681f5b77083ead8daa99d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01287bc4b8b6693ab618f4287527a6681c18dfdf9a69ed85dab5f902a082f9bd\",\"dweb:/ipfs/QmTDaixdDGgKZL2VB1E8CMrMqyzNrt7xQMytthcqNvcFgb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_collateral",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_ctf",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_proxyFactory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_safeFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyRegistered"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FeeTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidComplement"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNonce"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTokenId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MakingGtRemaining"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MismatchedTokenIds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAdmin"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotCrossing"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotTaker"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OrderExpired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OrderFilledOrCancelled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Paused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TooLittleTokensReceived"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FeeCharged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdminAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOperatorAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OrderCancelled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "makerAssetId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "takerAssetId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "makerAmountFilled",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "takerAmountFilled",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OrderFilled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "takerOrderHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "takerOrderMaker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "makerAssetId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "takerAssetId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "makerAmountFilled",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "takerAmountFilled",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OrdersMatched",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldProxyFactory",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newProxyFactory",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ProxyFactoryUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "removedAdmin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemovedAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "removedOperator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemovedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldSafeFactory",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newSafeFactory",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SafeFactoryUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "token0",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "token1",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "conditionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokenRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pauser",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TradingPaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pauser",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TradingUnpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "admins",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeRateBps",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Side",
                  "name": "side",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SignatureType",
                  "name": "signatureType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOrder"
        },
        {
          "inputs": [
            {
              "internalType": "struct Order[]",
              "name": "orders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeRateBps",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Side",
                  "name": "side",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SignatureType",
                  "name": "signatureType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOrders"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeRateBps",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Side",
                  "name": "side",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SignatureType",
                  "name": "signatureType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "fillAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "fillOrder"
        },
        {
          "inputs": [
            {
              "internalType": "struct Order[]",
              "name": "orders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeRateBps",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Side",
                  "name": "side",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SignatureType",
                  "name": "signatureType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "fillAmounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "fillOrders"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCollateral",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "token",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getComplement",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "token",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getConditionId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCtf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getMaxFeeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOrderStatus",
          "outputs": [
            {
              "internalType": "struct OrderStatus",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isFilledOrCancelled",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "remaining",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPolyProxyFactoryImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPolyProxyWalletAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getProxyFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSafeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSafeFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSafeFactoryImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeRateBps",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Side",
                  "name": "side",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SignatureType",
                  "name": "signatureType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hashOrder",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "incrementNonce"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "usr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAdmin",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "usr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "usr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidNonce",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Order",
              "name": "takerOrder",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeRateBps",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Side",
                  "name": "side",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SignatureType",
                  "name": "signatureType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct Order[]",
              "name": "makerOrders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeRateBps",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Side",
                  "name": "side",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SignatureType",
                  "name": "signatureType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "takerFillAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "makerFillAmounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "matchOrders"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operators",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "orderStatus",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isFilledOrCancelled",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "remaining",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "parentCollectionId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseTrading"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxyFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "token",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "complement",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conditionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "registry",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "complement",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conditionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceAdminRole"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOperatorRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "safeFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newProxyFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProxyFactory"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newSafeFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSafeFactory"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpauseTrading"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "token",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "complement",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateComplement"
        },
        {
          "inputs": [
            {
              "internalType": "struct Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeRateBps",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Side",
                  "name": "side",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SignatureType",
                  "name": "signatureType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateOrder"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "struct Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeRateBps",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Side",
                  "name": "side",
                  "type": "uint8"
                },
                {
                  "internalType": "enum SignatureType",
                  "name": "signatureType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateOrderSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateTokenId"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addAdmin(address)": {
            "params": {
              "admin_": "- The new admin"
            }
          },
          "addOperator(address)": {
            "params": {
              "operator_": "- The new operator"
            }
          },
          "fillOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),uint256)": {
            "params": {
              "fillAmount": "- The amount to be filled, always in terms of the maker amount",
              "order": "- The order to be filled"
            }
          },
          "fillOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256[])": {
            "params": {
              "fillAmounts": "- The amounts to be filled, always in terms of the maker amount",
              "orders": "- The order to be filled"
            }
          },
          "getComplement(uint256)": {
            "params": {
              "token": "- The token"
            }
          },
          "getConditionId(uint256)": {
            "params": {
              "token": "- The token"
            }
          },
          "getOrderStatus(bytes32)": {
            "params": {
              "orderHash": "- The hash of the order"
            }
          },
          "getPolyProxyWalletAddress(address)": {
            "params": {
              "_addr": "- The address that owns the proxy wallet"
            }
          },
          "getSafeAddress(address)": {
            "params": {
              "_addr": "- The address that owns the proxy wallet"
            }
          },
          "hashOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))": {
            "params": {
              "order": "- The order to be hashed"
            }
          },
          "matchOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256,uint256[])": {
            "params": {
              "makerFillAmounts": "- The array of amounts to fill on the maker orders, always in terms of the maker amount",
              "makerOrders": "- The array of maker orders to be matched against the active order",
              "takerFillAmount": "- The amount to fill on the taker order, always in terms of the maker amount",
              "takerOrder": "- The active order to be matched"
            }
          },
          "registerToken(uint256,uint256,bytes32)": {
            "params": {
              "complement": "- The complement of the tokenId",
              "conditionId": "- The CTF conditionId",
              "token": "- The tokenId being registered"
            }
          },
          "removeAdmin(address)": {
            "params": {
              "admin": "- The admin to be removed"
            }
          },
          "removeOperator(address)": {
            "params": {
              "operator": "- The operator to be removed"
            }
          },
          "setProxyFactory(address)": {
            "params": {
              "_newProxyFactory": "- The new Proxy Wallet factory"
            }
          },
          "setSafeFactory(address)": {
            "params": {
              "_newSafeFactory": "- The new Safe wallet factory"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "validateComplement(uint256,uint256)": {
            "params": {
              "complement": "- The complement to be validated",
              "token": "- The tokenId"
            }
          },
          "validateOrderSignature(bytes32,(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))": {
            "params": {
              "order": "- The order",
              "orderHash": "- The hash of the order"
            }
          },
          "validateTokenId(uint256)": {
            "params": {
              "tokenId": "- The tokenId"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addAdmin(address)": {
            "notice": "Adds a new admin Can only be called by a current admin"
          },
          "addOperator(address)": {
            "notice": "Adds a new operator Can only be called by a current admin"
          },
          "cancelOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))": {
            "notice": "Cancels an order An order can only be cancelled by its maker, the address which holds funds for the orderorder - The order to be cancelled"
          },
          "cancelOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[])": {
            "notice": "Cancels a set of ordersorders - The set of orders to be cancelled"
          },
          "fillOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),uint256)": {
            "notice": "Fills an order"
          },
          "fillOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256[])": {
            "notice": "Fills a set of orders"
          },
          "getComplement(uint256)": {
            "notice": "Gets the complement of a tokenId"
          },
          "getConditionId(uint256)": {
            "notice": "Gets the conditionId from a tokenId"
          },
          "getMaxFeeRate()": {
            "notice": "Returns the maximum fee rate for an order"
          },
          "getOrderStatus(bytes32)": {
            "notice": "Gets the status of an order"
          },
          "getPolyProxyFactoryImplementation()": {
            "notice": "Gets the Polymarket Proxy factory implementation address"
          },
          "getPolyProxyWalletAddress(address)": {
            "notice": "Gets the Polymarket proxy wallet address for an address"
          },
          "getProxyFactory()": {
            "notice": "Gets the Proxy factory address"
          },
          "getSafeAddress(address)": {
            "notice": "Gets the Polymarket Gnosis Safe address for an address"
          },
          "getSafeFactory()": {
            "notice": "Gets the Safe factory address"
          },
          "getSafeFactoryImplementation()": {
            "notice": "Gets the Safe factory implementation address"
          },
          "hashOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))": {
            "notice": "Computes the hash for an order"
          },
          "matchOrders((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes),(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes)[],uint256,uint256[])": {
            "notice": "Matches a taker order against a list of maker orders"
          },
          "orderStatus(bytes32)": {
            "notice": "Mapping of orders to their current status"
          },
          "pauseTrading()": {
            "notice": "Pause trading on the Exchange"
          },
          "proxyFactory()": {
            "notice": "The Polymarket Proxy Wallet Factory Contract"
          },
          "registerToken(uint256,uint256,bytes32)": {
            "notice": "Registers a tokenId, its complement and its conditionId for trading on the Exchange"
          },
          "removeAdmin(address)": {
            "notice": "Removes an existing Admin Can only be called by a current admin"
          },
          "removeOperator(address)": {
            "notice": "Removes an existing operator Can only be called by a current admin"
          },
          "renounceAdminRole()": {
            "notice": "Removes the admin role for the caller Can only be called by an existing admin"
          },
          "renounceOperatorRole()": {
            "notice": "Removes the operator role for the caller Can only be called by an exiting operator"
          },
          "safeFactory()": {
            "notice": "The Polymarket Gnosis Safe Factory Contract"
          },
          "setProxyFactory(address)": {
            "notice": "Sets a new Proxy Wallet factory for the Exchange"
          },
          "setSafeFactory(address)": {
            "notice": "Sets a new safe factory for the Exchange"
          },
          "unpauseTrading()": {
            "notice": "Unpause trading on the Exchange"
          },
          "validateComplement(uint256,uint256)": {
            "notice": "Validates the complement of a tokenId"
          },
          "validateOrder((uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))": {
            "notice": "Validates an orderorder - The order to be validated"
          },
          "validateOrderSignature(bytes32,(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bytes))": {
            "notice": "Validates the signature of an order"
          },
          "validateTokenId(uint256)": {
            "notice": "Validates that a tokenId is registered"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":common/=src/common/",
        ":creator/=src/creator/",
        ":dev/=src/dev/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":exchange/=src/exchange/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/exchange/CTFExchange.sol": "CTFExchange"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
        "keccak256": "0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3",
        "urls": [
          "bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519",
          "dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
        "keccak256": "0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb",
        "urls": [
          "bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d",
          "dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e",
        "urls": [
          "bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0",
          "dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x34d5fd3e73f17311fc4ae0ec192c59d5e46d585045017b41a78b8c75ab387d9d",
        "urls": [
          "bzz-raw://11224aad5e5e78cda2e0e8456e27121ece04e725a24d63568fa56f100dc47fb3",
          "dweb:/ipfs/QmWrpMpotNwYyWcZJUuRcwas9nuy7KYsFTQ1EELUdWQRww"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x852987c093178595e02298b72a5f3c09aee541604b9e24a3a550bc63d92f3a22",
        "urls": [
          "bzz-raw://f9b51f6bbe233c5ad5aa9dd2d09e1dc2f7e5b7a8007ad6d0a1c4cdd8e913d157",
          "dweb:/ipfs/QmNZz3XegYagUgKBPBNeMuPZQNwmYd6j7GbwTFU1T6ZsD2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0x39625646d85d5ac7009db6a76674186e2404a5907791ffe01df88df2e2f1abe6",
        "urls": [
          "bzz-raw://d53b213ac8e03d454d8bafd7393c757420cf170ba76e33b6aa5bb1b804779335",
          "dweb:/ipfs/QmZc7Mb8MGZmuSkcohtqPC2MgVYTXwDwVRguqAA1rQq6eF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe",
        "urls": [
          "bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf",
          "dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/common/ReentrancyGuard.sol": {
        "keccak256": "0x51475ac2429bbf514b7b0b9e1833857c009e283d553ea086c33dcf52d4857a16",
        "urls": [
          "bzz-raw://e92d88f9a6365da67417290b1af11b63312d8ab5b8e1a296490a897cf4e376a9",
          "dweb:/ipfs/QmR8xgKmExUftpQD4M8gT1kyR13ULaUvyv5rRuC9bicJKP"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/common/libraries/SafeTransferLib.sol": {
        "keccak256": "0x95044db1857cb3317e61376246060ce214157f5b7fbc9be740e7ad904bea9d19",
        "urls": [
          "bzz-raw://d31322b215909d6de015c3f6ec68084d387eef687e2231250fa469f34227787d",
          "dweb:/ipfs/QmepnBzhjWTjRKY6aoD5PVERkdsXoGPpZPtMFfsdEhurHT"
        ],
        "license": "MIT"
      },
      "src/exchange/BaseExchange.sol": {
        "keccak256": "0xe930049428f63f8867c963247c739c194e8264752e4fadcd9c6cb5bf26eb2596",
        "urls": [
          "bzz-raw://903222ac0178af88dcd0b2efb2bc290bfc2b361fa52d50c06d30efc1fc3d4267",
          "dweb:/ipfs/QmeGMJuGQ78TFzKkCMU7U5UAmVFSNkgRpnTa9rDcXuGjNT"
        ],
        "license": "MIT"
      },
      "src/exchange/CTFExchange.sol": {
        "keccak256": "0x1688e624113198eff88d42fb78631ca6983456f0146158def0f4f34c223cac07",
        "urls": [
          "bzz-raw://11c9c4762f319f1d872d31d884afb6b61444ab2a65ac49a2a1cac340beb10ae1",
          "dweb:/ipfs/QmVT1b61Akm6mwTTDxDAa22GF5Ybk7JXqKi77dAw8APr7i"
        ],
        "license": "MIT"
      },
      "src/exchange/interfaces/IAssetOperations.sol": {
        "keccak256": "0x699d40015c3d6c24f9145886d19e20ebb6887c1c676d9b972c0a0a611786ed5b",
        "urls": [
          "bzz-raw://4a6ac4553a301d37c2b8518bcf70180f8b6d85ffcc1a9cc9597866b58d355c5e",
          "dweb:/ipfs/QmT2fcBoHN7aqEQ8cMa87zwyNbA29xTtjw2yFwX7U4uHP9"
        ],
        "license": "MIT"
      },
      "src/exchange/interfaces/IAssets.sol": {
        "keccak256": "0xf24de0c34a39131536eee303a74c5b01380879879e1075a94e10a94280176035",
        "urls": [
          "bzz-raw://8741e3d8e944e8c8021c3d04ee9ad28d6a4f2da4c77d4edca451c71914ed19ba",
          "dweb:/ipfs/QmdyCHLeW4grjbG5X67tPbtZvWZvYsX35cD8rXY7S7CwtZ"
        ],
        "license": "MIT"
      },
      "src/exchange/interfaces/IAuth.sol": {
        "keccak256": "0x28840ffbea3ecba8ba9fb19272ba3f3c5be11af9f3fac19bd9e183142554c436",
        "urls": [
          "bzz-raw://6a650ccbc2b69cb929fd4c8572f804f4c19b794bbb43e0e1d507db1663cd4ee6",
          "dweb:/ipfs/QmTwdHsTA8UZ52GysqBaMfs8bbQGJoEwdRn9UZ38wwEV1V"
        ],
        "license": "MIT"
      },
      "src/exchange/interfaces/IConditionalTokens.sol": {
        "keccak256": "0x320e2dd0a8aa8771b86a07a252303b4a6c4cd2e369f0c00a87c30c89b3969d13",
        "urls": [
          "bzz-raw://7134d460cbee5a3f8cf4a97cc3d81f59b4d6aad978c18e65caff265ac7002e71",
          "dweb:/ipfs/Qmc4cmZRDVsvGWXuk946nMG6YseMWya8VmTRN5K7ds6gHt"
        ],
        "license": "MIT"
      },
      "src/exchange/interfaces/IFees.sol": {
        "keccak256": "0x94910bd74962e9bee385ea7b6fbc7f8ef9344e6c650ae534434a45907e65601d",
        "urls": [
          "bzz-raw://0c5a673ed2eaf5de79f4d784401015eaef05b7d06be898204b069c1ea5b4b3de",
          "dweb:/ipfs/QmcsFzpLy1kfAjMXpmd4igHHSzMxPyukCPsaZFovnABV7S"
        ],
        "license": "MIT"
      },
      "src/exchange/interfaces/IHashing.sol": {
        "keccak256": "0xfa065713a0e9ab2a2eea407144344ebdc5f96a50763e8bcd26614e8a29618b4b",
        "urls": [
          "bzz-raw://5301d014a3ba3abef2601867bd3783950af5c121254ad961d98e873933ae27ff",
          "dweb:/ipfs/QmVC2G3YanK2Uok3fi7b1M6x7oke7r5CurfWE2CUU3PpuH"
        ],
        "license": "MIT"
      },
      "src/exchange/interfaces/INonceManager.sol": {
        "keccak256": "0xdafbd9242bdbf96a9b6d8fab709d5fc9235540f1b9d5fc7e88fda2bc55ca4ecc",
        "urls": [
          "bzz-raw://8dea605edf760a8c290e85e31c33417b46499430d2121fb25cf0cd8a3b60de14",
          "dweb:/ipfs/QmXEZUEMkcwQKzAZR2K3A7tZHxUFnXKANJ6wkNA7end5o3"
        ],
        "license": "MIT"
      },
      "src/exchange/interfaces/IPausable.sol": {
        "keccak256": "0x9fd256477ea8b221df172e742e82b9acbbe92542b091e90d9f6481cd17b5b16c",
        "urls": [
          "bzz-raw://47be49567b529875e9f55e1e9a525cdb4df4a1d3bc6c2353b5a4905e0c5ea6a9",
          "dweb:/ipfs/QmQ2ccCsBDuKQFxy9BwHdhS4ms3fgp6TLXSnXzNcwcCmYX"
        ],
        "license": "MIT"
      },
      "src/exchange/interfaces/IRegistry.sol": {
        "keccak256": "0x4f2dfb6549927580d679a500e7292523b75f83292e22b5434863081a0a89b656",
        "urls": [
          "bzz-raw://10418609e8ffa8576d331b9f981984040805a610884e1aa0d369f8bd89ed26c1",
          "dweb:/ipfs/QmasnvPKKyZRP52M6JhXUNNKRFr5XSRiaorLPCu8zN55PA"
        ],
        "license": "MIT"
      },
      "src/exchange/interfaces/ISignatures.sol": {
        "keccak256": "0xebda841593e4e6adc6479ecc8c019c071c1ba241599c61b49bf2a77a674ac558",
        "urls": [
          "bzz-raw://259e6ce3aaebd89ad38d4e25b63861e92b879f979273524d6483939ce5fc545e",
          "dweb:/ipfs/QmRzTA2Bdu6NG2qMHVqXiwEYdbyuE3vXidpNMkUwzexAMd"
        ],
        "license": "MIT"
      },
      "src/exchange/interfaces/ITrading.sol": {
        "keccak256": "0xa06ff0c9dee50838f221ac0761414874805538751d9011b48272f9ac04fc7353",
        "urls": [
          "bzz-raw://af9abfc33326d045e518decd655e570d8b25737d961008ca9e7b584318b5e5d0",
          "dweb:/ipfs/QmQpjQUZVCEE7pex9K1WWG9qxbDRnBoaNyfq8s1wwLWFUN"
        ],
        "license": "MIT"
      },
      "src/exchange/libraries/CalculatorHelper.sol": {
        "keccak256": "0xa7234192ae26da247e3fe18958907e556e73c022480ea9c91b49744cce8f1949",
        "urls": [
          "bzz-raw://87592da00cb7da14312f445c27cdfe1b8521729758bf7a076e88e121e006e988",
          "dweb:/ipfs/QmRufuL8V74Ud2nqQCjVdnSGxzxawX33qzsQe8nfRUEQWy"
        ],
        "license": "MIT"
      },
      "src/exchange/libraries/OrderStructs.sol": {
        "keccak256": "0x77c6e2c11bac9b60ab0c6b7d03ad11c829f176ba35f6418bbcefb10e8713d39a",
        "urls": [
          "bzz-raw://b0b31336ee6be3a2a5dec6676a76bfa3435d10085ae40c9d333e980dfbbe369b",
          "dweb:/ipfs/QmNjqk8xvq6VcxE3KPuGq3iv1RiLZUT3feqzq8wntSiZ2J"
        ],
        "license": "MIT"
      },
      "src/exchange/libraries/PolyProxyLib.sol": {
        "keccak256": "0x61e523b9f2d66217963acf42086746db43823cda37b2fb3a6e46efd7727b668e",
        "urls": [
          "bzz-raw://250c6a90c192c041225244b9a91ee61cab4a8ba9834791d590d74b0f32c7ea36",
          "dweb:/ipfs/QmRy2yM3omqYAiB2KKFC5Rqv9dV3yPehoHUd2Sk9X8mdx7"
        ],
        "license": "MIT"
      },
      "src/exchange/libraries/PolySafeLib.sol": {
        "keccak256": "0x38030ab9c88a7e87974e1e46c80f640452e3f0099043750c680a086455194bd2",
        "urls": [
          "bzz-raw://2fdb8f5e134b8a659c116794f6d698674ad629fb50a7889ee08f98230cce7f4d",
          "dweb:/ipfs/QmZjfP7LaE7yDCgDyHRzjmD22zJmouruVooH7xJRPfgGhM"
        ],
        "license": "MIT"
      },
      "src/exchange/libraries/TransferHelper.sol": {
        "keccak256": "0x18ce3d87da126557b003af507b92757c51f670d3e96b9ae3aeba9e451e666c77",
        "urls": [
          "bzz-raw://5c5faa184338f73f33f7f79d918ecb99aa1182da8af83b116bd33b3281421e92",
          "dweb:/ipfs/QmU9NZPZLUfyFdcdaLBXhzjA58h3dpuowughYyVp9sDi8C"
        ],
        "license": "MIT"
      },
      "src/exchange/mixins/AssetOperations.sol": {
        "keccak256": "0x1c0a271460e381b2e152e5fac6e459bb42def5c787d7319722cd48396763a5ac",
        "urls": [
          "bzz-raw://4bb58bcfbb1ff64d17e7bbbc69b0d0b044a63f7ff9e8ee996ad23823c0441651",
          "dweb:/ipfs/QmbEZqoGeUJQ9ZqSTmMXqzPifaJzCobwbmTQwaRp3oGXZS"
        ],
        "license": "MIT"
      },
      "src/exchange/mixins/Assets.sol": {
        "keccak256": "0x1afce518482db670731eb08b9d713149f30e6e5166cbaae028f1f90644ea530e",
        "urls": [
          "bzz-raw://b472fea967460337e4b1ff5b19957f162752ee4eb3461e43e86007de603d2a2a",
          "dweb:/ipfs/QmZc1ekmjQiizqe2URYtDXRkEVwsuDXxromJPXnBBPFJZ1"
        ],
        "license": "MIT"
      },
      "src/exchange/mixins/Auth.sol": {
        "keccak256": "0x8977d1321c550ee2ba58e9dd5cbb044ca5e8e0a26aab92df76be0b905a1d77b0",
        "urls": [
          "bzz-raw://05a61f151952f515003c9797e72d266a7a4ace4b5d0793829e07b649318c4e80",
          "dweb:/ipfs/Qmce6zy5LZHHT5db5b7fi46MxgYMzTSq4jD8fdAmQ61GRf"
        ],
        "license": "MIT"
      },
      "src/exchange/mixins/Fees.sol": {
        "keccak256": "0x3454ddb3c5f07dba53638af88026df751b3ca9431433cd173430b62dd22da4ec",
        "urls": [
          "bzz-raw://e508671dfca599835fc4916645fc0ee29eb4de8c942d63583aede7ae2ffe65ef",
          "dweb:/ipfs/QmQFMBd5ZcUA9qPPbpqoiXoy4ebvDGRmCQ4UzzGCo3wFtg"
        ],
        "license": "MIT"
      },
      "src/exchange/mixins/Hashing.sol": {
        "keccak256": "0xb8db6fa8135edfb35775853e04d90cc5237848638f22b4f450327b92c296a0b7",
        "urls": [
          "bzz-raw://4f53730d36fa0c4111403dcbf484e6710f699508be74ae968f2a0e336bcf3454",
          "dweb:/ipfs/QmfHhbubwaUtrgNwHexiHYbhEnCdWAZroTW4vtrmyqB61D"
        ],
        "license": "MIT"
      },
      "src/exchange/mixins/NonceManager.sol": {
        "keccak256": "0x00865e31b738a8318c33fc6b3a07b474f5cc51e9ee9a7e9d4ee558af75cf7d02",
        "urls": [
          "bzz-raw://10c731bb43053c677c8e21e5ca6c0fd4d0d921bf0aae13c439e14b80237c841c",
          "dweb:/ipfs/QmVseycNZUzjWy1JRTc1zJhj11iVw5G6oMWe8FuMcMmyTf"
        ],
        "license": "MIT"
      },
      "src/exchange/mixins/Pausable.sol": {
        "keccak256": "0x35765bcb37ca980d478b066c00ed6efdb357dc2ad9ecf7a6b0689dbd09631eab",
        "urls": [
          "bzz-raw://8afe0f4b8d7ed16349224f6c808caf1e80bcbdac489d038800a95dd95f105238",
          "dweb:/ipfs/QmaAHATxCBfe3kMjeWknEoURHsFQTqvki76KmRUkCY73yu"
        ],
        "license": "MIT"
      },
      "src/exchange/mixins/PolyFactoryHelper.sol": {
        "keccak256": "0x7a54482123cfb8eebb914cc43f12d656f2291209e5d6ae7f014545c3c8ee26b9",
        "urls": [
          "bzz-raw://37c444e92d53a24f86e3a6531644141a5548df9a5d6da6fb1e615da4609590a7",
          "dweb:/ipfs/QmYUQMUhRDqJtYreY1GWpgq6GiTxWeBvJ4gQmBUkEoXuB4"
        ],
        "license": "MIT"
      },
      "src/exchange/mixins/Registry.sol": {
        "keccak256": "0x6c3af2124e5002fa6c653b1858159e67889cc228f2c4b23da2389b39ead31806",
        "urls": [
          "bzz-raw://89a053877b096053794a3e575ac3f4e1bb2d42de42f3a476a9a3e8303693194a",
          "dweb:/ipfs/QmWH5ZfjYeLTPR8Jmcy1nfTaBfqBxJDH1Puf8R1kV9HpBW"
        ],
        "license": "MIT"
      },
      "src/exchange/mixins/Signatures.sol": {
        "keccak256": "0x6347d6f992b5dee392ea98c6095e11b8808d504f7bb05feccf313bd22167b60f",
        "urls": [
          "bzz-raw://c1431e9e1b16e0a1e684a8af6108696ccb315cbf9b0e7feba4e7116845d6eb4c",
          "dweb:/ipfs/QmUC7Kf4QQZZoKCcQWRKY6WQPwaERgpz4VmigXXcDwMDTH"
        ],
        "license": "MIT"
      },
      "src/exchange/mixins/Trading.sol": {
        "keccak256": "0x9c0f6025629047d9680262a66d89e8720ffbdd62a73681f5b77083ead8daa99d",
        "urls": [
          "bzz-raw://01287bc4b8b6693ab618f4287527a6681c18dfdf9a69ed85dab5f902a082f9bd",
          "dweb:/ipfs/QmTDaixdDGgKZL2VB1E8CMrMqyzNrt7xQMytthcqNvcFgb"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/exchange/CTFExchange.sol",
    "id": 28813,
    "exportedSymbols": {
      "AssetOperations": [
        30194
      ],
      "Assets": [
        30253
      ],
      "Auth": [
        30471
      ],
      "BaseExchange": [
        28597
      ],
      "CTFExchange": [
        28812
      ],
      "Fees": [
        30492
      ],
      "Hashing": [
        30569
      ],
      "NonceManager": [
        30624
      ],
      "Order": [
        29608
      ],
      "Pausable": [
        30671
      ],
      "Registry": [
        30994
      ],
      "Signatures": [
        31206
      ],
      "Trading": [
        32278
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4369:54",
    "nodes": [
      {
        "id": 28599,
        "nodeType": "PragmaDirective",
        "src": "32:23:54",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 28601,
        "nodeType": "ImportDirective",
        "src": "57:41:54",
        "nodes": [],
        "absolutePath": "src/exchange/mixins/Auth.sol",
        "file": "./mixins/Auth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28813,
        "sourceUnit": 30472,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28600,
              "name": "Auth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30471,
              "src": "66:4:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28603,
        "nodeType": "ImportDirective",
        "src": "99:41:54",
        "nodes": [],
        "absolutePath": "src/exchange/mixins/Fees.sol",
        "file": "./mixins/Fees.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28813,
        "sourceUnit": 30493,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28602,
              "name": "Fees",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30492,
              "src": "108:4:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28605,
        "nodeType": "ImportDirective",
        "src": "141:45:54",
        "nodes": [],
        "absolutePath": "src/exchange/mixins/Assets.sol",
        "file": "./mixins/Assets.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28813,
        "sourceUnit": 30254,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28604,
              "name": "Assets",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30253,
              "src": "150:6:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28607,
        "nodeType": "ImportDirective",
        "src": "187:47:54",
        "nodes": [],
        "absolutePath": "src/exchange/mixins/Hashing.sol",
        "file": "./mixins/Hashing.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28813,
        "sourceUnit": 30570,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28606,
              "name": "Hashing",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30569,
              "src": "196:7:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28609,
        "nodeType": "ImportDirective",
        "src": "235:47:54",
        "nodes": [],
        "absolutePath": "src/exchange/mixins/Trading.sol",
        "file": "./mixins/Trading.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28813,
        "sourceUnit": 32279,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28608,
              "name": "Trading",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32278,
              "src": "244:7:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28611,
        "nodeType": "ImportDirective",
        "src": "283:49:54",
        "nodes": [],
        "absolutePath": "src/exchange/mixins/Registry.sol",
        "file": "./mixins/Registry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28813,
        "sourceUnit": 30995,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28610,
              "name": "Registry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30994,
              "src": "292:8:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28613,
        "nodeType": "ImportDirective",
        "src": "333:49:54",
        "nodes": [],
        "absolutePath": "src/exchange/mixins/Pausable.sol",
        "file": "./mixins/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28813,
        "sourceUnit": 30672,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28612,
              "name": "Pausable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30671,
              "src": "342:8:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28615,
        "nodeType": "ImportDirective",
        "src": "383:53:54",
        "nodes": [],
        "absolutePath": "src/exchange/mixins/Signatures.sol",
        "file": "./mixins/Signatures.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28813,
        "sourceUnit": 31207,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28614,
              "name": "Signatures",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31206,
              "src": "392:10:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28617,
        "nodeType": "ImportDirective",
        "src": "437:57:54",
        "nodes": [],
        "absolutePath": "src/exchange/mixins/NonceManager.sol",
        "file": "./mixins/NonceManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28813,
        "sourceUnit": 30625,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28616,
              "name": "NonceManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30624,
              "src": "446:12:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28619,
        "nodeType": "ImportDirective",
        "src": "495:63:54",
        "nodes": [],
        "absolutePath": "src/exchange/mixins/AssetOperations.sol",
        "file": "./mixins/AssetOperations.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28813,
        "sourceUnit": 30195,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28618,
              "name": "AssetOperations",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30194,
              "src": "504:15:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28621,
        "nodeType": "ImportDirective",
        "src": "560:50:54",
        "nodes": [],
        "absolutePath": "src/exchange/BaseExchange.sol",
        "file": "./BaseExchange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28813,
        "sourceUnit": 28598,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28620,
              "name": "BaseExchange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28597,
              "src": "569:12:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28623,
        "nodeType": "ImportDirective",
        "src": "612:53:54",
        "nodes": [],
        "absolutePath": "src/exchange/libraries/OrderStructs.sol",
        "file": "./libraries/OrderStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28813,
        "sourceUnit": 29625,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28622,
              "name": "Order",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29608,
              "src": "621:5:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28812,
        "nodeType": "ContractDefinition",
        "src": "766:3634:54",
        "nodes": [
          {
            "id": 28668,
            "nodeType": "FunctionDefinition",
            "src": "986:181:54",
            "nodes": [],
            "body": {
              "id": 28667,
              "nodeType": "Block",
              "src": "1164:3:54",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28659,
                    "name": "_collateral",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28650,
                    "src": "1093:11:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 28660,
                    "name": "_ctf",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28652,
                    "src": "1106:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 28661,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 28658,
                  "name": "Assets",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30253,
                  "src": "1086:6:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "1086:25:54"
              },
              {
                "arguments": [
                  {
                    "id": 28663,
                    "name": "_proxyFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28654,
                    "src": "1131:13:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 28664,
                    "name": "_safeFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28656,
                    "src": "1146:12:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 28665,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 28662,
                  "name": "Signatures",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31206,
                  "src": "1120:10:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "1120:39:54"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28650,
                  "mutability": "mutable",
                  "name": "_collateral",
                  "nameLocation": "1006:11:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28668,
                  "src": "998:19:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28652,
                  "mutability": "mutable",
                  "name": "_ctf",
                  "nameLocation": "1027:4:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28668,
                  "src": "1019:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28654,
                  "mutability": "mutable",
                  "name": "_proxyFactory",
                  "nameLocation": "1041:13:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28668,
                  "src": "1033:21:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28656,
                  "mutability": "mutable",
                  "name": "_safeFactory",
                  "nameLocation": "1064:12:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28668,
                  "src": "1056:20:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "997:80:54"
            },
            "returnParameters": {
              "id": 28666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1164:0:54"
            },
            "scope": 28812,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28678,
            "nodeType": "FunctionDefinition",
            "src": "1388:75:54",
            "nodes": [],
            "body": {
              "id": 28677,
              "nodeType": "Block",
              "src": "1431:32:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 28674,
                      "name": "_pauseTrading",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30656
                      ],
                      "referencedDeclaration": 30656,
                      "src": "1441:13:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 28675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1441:15:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28676,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:15:54"
                }
              ]
            },
            "documentation": {
              "id": 28669,
              "nodeType": "StructuredDocumentation",
              "src": "1342:41:54",
              "text": "@notice Pause trading on the Exchange"
            },
            "functionSelector": "1031e36e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28672,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28671,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30284,
                  "src": "1421:9:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "1421:9:54"
              }
            ],
            "name": "pauseTrading",
            "nameLocation": "1397:12:54",
            "parameters": {
              "id": 28670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1409:2:54"
            },
            "returnParameters": {
              "id": 28673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1431:0:54"
            },
            "scope": 28812,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28688,
            "nodeType": "FunctionDefinition",
            "src": "1517:79:54",
            "nodes": [],
            "body": {
              "id": 28687,
              "nodeType": "Block",
              "src": "1562:34:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 28684,
                      "name": "_unpauseTrading",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30670
                      ],
                      "referencedDeclaration": 30670,
                      "src": "1572:15:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 28685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1572:17:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28686,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:17:54"
                }
              ]
            },
            "documentation": {
              "id": 28679,
              "nodeType": "StructuredDocumentation",
              "src": "1469:43:54",
              "text": "@notice Unpause trading on the Exchange"
            },
            "functionSelector": "456068d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28682,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28681,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30284,
                  "src": "1552:9:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "1552:9:54"
              }
            ],
            "name": "unpauseTrading",
            "nameLocation": "1526:14:54",
            "parameters": {
              "id": 28680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:2:54"
            },
            "returnParameters": {
              "id": 28683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1562:0:54"
            },
            "scope": 28812,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28711,
            "nodeType": "FunctionDefinition",
            "src": "1948:162:54",
            "nodes": [],
            "body": {
              "id": 28710,
              "nodeType": "Block",
              "src": "2052:58:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28704,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28692,
                        "src": "2073:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$29608_memory_ptr",
                          "typeString": "struct Order memory"
                        }
                      },
                      {
                        "id": 28705,
                        "name": "fillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28694,
                        "src": "2080:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 28706,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2092:3:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2092:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$29608_memory_ptr",
                          "typeString": "struct Order memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 28703,
                      "name": "_fillOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31521,
                      "src": "2062:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$29608_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (struct Order memory,uint256,address)"
                      }
                    },
                    "id": 28708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2062:41:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28709,
                  "nodeType": "ExpressionStatement",
                  "src": "2062:41:54"
                }
              ]
            },
            "documentation": {
              "id": 28689,
              "nodeType": "StructuredDocumentation",
              "src": "1773:170:54",
              "text": "@notice Fills an order\n @param order        - The order to be filled\n @param fillAmount   - The amount to be filled, always in terms of the maker amount"
            },
            "functionSelector": "fe729aaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28697,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28696,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26718,
                  "src": "2016:12:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "2016:12:54"
              },
              {
                "id": 28699,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28698,
                  "name": "onlyOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30298,
                  "src": "2029:12:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "2029:12:54"
              },
              {
                "id": 28701,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28700,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30642,
                  "src": "2042:9:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "2042:9:54"
              }
            ],
            "name": "fillOrder",
            "nameLocation": "1957:9:54",
            "parameters": {
              "id": 28695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28692,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1980:5:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28711,
                  "src": "1967:18:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$29608_memory_ptr",
                    "typeString": "struct Order"
                  },
                  "typeName": {
                    "id": 28691,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28690,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29608,
                      "src": "1967:5:54"
                    },
                    "referencedDeclaration": 29608,
                    "src": "1967:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$29608_storage_ptr",
                      "typeString": "struct Order"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28694,
                  "mutability": "mutable",
                  "name": "fillAmount",
                  "nameLocation": "1995:10:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28711,
                  "src": "1987:18:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1987:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1966:40:54"
            },
            "returnParameters": {
              "id": 28702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2052:0:54"
            },
            "scope": 28812,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28736,
            "nodeType": "FunctionDefinition",
            "src": "2299:215:54",
            "nodes": [],
            "body": {
              "id": 28735,
              "nodeType": "Block",
              "src": "2453:61:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28729,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28716,
                        "src": "2475:6:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$29608_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Order memory[] memory"
                        }
                      },
                      {
                        "id": 28730,
                        "name": "fillAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28719,
                        "src": "2483:11:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 28731,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2496:3:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2496:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$29608_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 28728,
                      "name": "_fillOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31563,
                      "src": "2463:11:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$29608_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct Order memory[] memory,uint256[] memory,address)"
                      }
                    },
                    "id": 28733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2463:44:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28734,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:44:54"
                }
              ]
            },
            "documentation": {
              "id": 28712,
              "nodeType": "StructuredDocumentation",
              "src": "2116:178:54",
              "text": "@notice Fills a set of orders\n @param orders       - The order to be filled\n @param fillAmounts  - The amounts to be filled, always in terms of the maker amount"
            },
            "functionSelector": "d798eff6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28722,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28721,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26718,
                  "src": "2397:12:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "2397:12:54"
              },
              {
                "id": 28724,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28723,
                  "name": "onlyOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30298,
                  "src": "2418:12:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "2418:12:54"
              },
              {
                "id": 28726,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28725,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30642,
                  "src": "2439:9:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "2439:9:54"
              }
            ],
            "name": "fillOrders",
            "nameLocation": "2308:10:54",
            "parameters": {
              "id": 28720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28716,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "2334:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28736,
                  "src": "2319:21:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$29608_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28714,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 28713,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 29608,
                        "src": "2319:5:54"
                      },
                      "referencedDeclaration": 29608,
                      "src": "2319:5:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$29608_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 28715,
                    "nodeType": "ArrayTypeName",
                    "src": "2319:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$29608_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28719,
                  "mutability": "mutable",
                  "name": "fillAmounts",
                  "nameLocation": "2359:11:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28736,
                  "src": "2342:28:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28717,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2342:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28718,
                    "nodeType": "ArrayTypeName",
                    "src": "2342:9:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2318:53:54"
            },
            "returnParameters": {
              "id": 28727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2453:0:54"
            },
            "scope": 28812,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28766,
            "nodeType": "FunctionDefinition",
            "src": "2982:306:54",
            "nodes": [],
            "body": {
              "id": 28765,
              "nodeType": "Block",
              "src": "3199:89:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28759,
                        "name": "takerOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28740,
                        "src": "3222:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$29608_memory_ptr",
                          "typeString": "struct Order memory"
                        }
                      },
                      {
                        "id": 28760,
                        "name": "makerOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28744,
                        "src": "3234:11:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$29608_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Order memory[] memory"
                        }
                      },
                      {
                        "id": 28761,
                        "name": "takerFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28746,
                        "src": "3247:15:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28762,
                        "name": "makerFillAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28749,
                        "src": "3264:16:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$29608_memory_ptr",
                          "typeString": "struct Order memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$29608_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 28758,
                      "name": "_matchOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31715,
                      "src": "3209:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$29608_memory_ptr_$_t_array$_t_struct$_Order_$29608_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct Order memory,struct Order memory[] memory,uint256,uint256[] memory)"
                      }
                    },
                    "id": 28763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3209:72:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28764,
                  "nodeType": "ExpressionStatement",
                  "src": "3209:72:54"
                }
              ]
            },
            "documentation": {
              "id": 28737,
              "nodeType": "StructuredDocumentation",
              "src": "2520:457:54",
              "text": "@notice Matches a taker order against a list of maker orders\n @param takerOrder       - The active order to be matched\n @param makerOrders      - The array of maker orders to be matched against the active order\n @param takerFillAmount  - The amount to fill on the taker order, always in terms of the maker amount\n @param makerFillAmounts - The array of amounts to fill on the maker orders, always in terms of the maker amount"
            },
            "functionSelector": "e60f0c05",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28752,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28751,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26718,
                  "src": "3163:12:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "3163:12:54"
              },
              {
                "id": 28754,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28753,
                  "name": "onlyOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30298,
                  "src": "3176:12:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "3176:12:54"
              },
              {
                "id": 28756,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28755,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30642,
                  "src": "3189:9:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "3189:9:54"
              }
            ],
            "name": "matchOrders",
            "nameLocation": "2991:11:54",
            "parameters": {
              "id": 28750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28740,
                  "mutability": "mutable",
                  "name": "takerOrder",
                  "nameLocation": "3025:10:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28766,
                  "src": "3012:23:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$29608_memory_ptr",
                    "typeString": "struct Order"
                  },
                  "typeName": {
                    "id": 28739,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28738,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29608,
                      "src": "3012:5:54"
                    },
                    "referencedDeclaration": 29608,
                    "src": "3012:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$29608_storage_ptr",
                      "typeString": "struct Order"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28744,
                  "mutability": "mutable",
                  "name": "makerOrders",
                  "nameLocation": "3060:11:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28766,
                  "src": "3045:26:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$29608_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28742,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 28741,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 29608,
                        "src": "3045:5:54"
                      },
                      "referencedDeclaration": 29608,
                      "src": "3045:5:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$29608_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 28743,
                    "nodeType": "ArrayTypeName",
                    "src": "3045:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$29608_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28746,
                  "mutability": "mutable",
                  "name": "takerFillAmount",
                  "nameLocation": "3089:15:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28766,
                  "src": "3081:23:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3081:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28749,
                  "mutability": "mutable",
                  "name": "makerFillAmounts",
                  "nameLocation": "3131:16:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28766,
                  "src": "3114:33:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28747,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3114:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28748,
                    "nodeType": "ArrayTypeName",
                    "src": "3114:9:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3002:151:54"
            },
            "returnParameters": {
              "id": 28757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3199:0:54"
            },
            "scope": 28812,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28779,
            "nodeType": "FunctionDefinition",
            "src": "3599:121:54",
            "nodes": [],
            "body": {
              "id": 28778,
              "nodeType": "Block",
              "src": "3669:51:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28775,
                        "name": "_newProxyFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28769,
                        "src": "3696:16:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 28774,
                      "name": "_setProxyFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30816,
                      "src": "3679:16:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 28776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3679:34:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28777,
                  "nodeType": "ExpressionStatement",
                  "src": "3679:34:54"
                }
              ]
            },
            "documentation": {
              "id": 28767,
              "nodeType": "StructuredDocumentation",
              "src": "3471:123:54",
              "text": "@notice Sets a new Proxy Wallet factory for the Exchange\n @param _newProxyFactory - The new Proxy Wallet factory"
            },
            "functionSelector": "fbddd751",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28772,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28771,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30284,
                  "src": "3659:9:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "3659:9:54"
              }
            ],
            "name": "setProxyFactory",
            "nameLocation": "3608:15:54",
            "parameters": {
              "id": 28770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28769,
                  "mutability": "mutable",
                  "name": "_newProxyFactory",
                  "nameLocation": "3632:16:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28779,
                  "src": "3624:24:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3624:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3623:26:54"
            },
            "returnParameters": {
              "id": 28773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3669:0:54"
            },
            "scope": 28812,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28792,
            "nodeType": "FunctionDefinition",
            "src": "3845:117:54",
            "nodes": [],
            "body": {
              "id": 28791,
              "nodeType": "Block",
              "src": "3913:49:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28788,
                        "name": "_newSafeFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28782,
                        "src": "3939:15:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 28787,
                      "name": "_setSafeFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30831,
                      "src": "3923:15:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 28789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3923:32:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28790,
                  "nodeType": "ExpressionStatement",
                  "src": "3923:32:54"
                }
              ]
            },
            "documentation": {
              "id": 28780,
              "nodeType": "StructuredDocumentation",
              "src": "3726:114:54",
              "text": "@notice Sets a new safe factory for the Exchange\n @param _newSafeFactory  - The new Safe wallet factory"
            },
            "functionSelector": "4544f055",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28785,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28784,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30284,
                  "src": "3903:9:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "3903:9:54"
              }
            ],
            "name": "setSafeFactory",
            "nameLocation": "3854:14:54",
            "parameters": {
              "id": 28783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28782,
                  "mutability": "mutable",
                  "name": "_newSafeFactory",
                  "nameLocation": "3877:15:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28792,
                  "src": "3869:23:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3869:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3868:25:54"
            },
            "returnParameters": {
              "id": 28786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3913:0:54"
            },
            "scope": 28812,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28811,
            "nodeType": "FunctionDefinition",
            "src": "4237:161:54",
            "nodes": [],
            "body": {
              "id": 28810,
              "nodeType": "Block",
              "src": "4335:63:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28805,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28795,
                        "src": "4360:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28806,
                        "name": "complement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28797,
                        "src": "4367:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28807,
                        "name": "conditionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28799,
                        "src": "4379:11:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 28804,
                      "name": "_registerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30993,
                      "src": "4345:14:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,bytes32)"
                      }
                    },
                    "id": 28808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4345:46:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28809,
                  "nodeType": "ExpressionStatement",
                  "src": "4345:46:54"
                }
              ]
            },
            "documentation": {
              "id": 28793,
              "nodeType": "StructuredDocumentation",
              "src": "3968:264:54",
              "text": "@notice Registers a tokenId, its complement and its conditionId for trading on the Exchange\n @param token        - The tokenId being registered\n @param complement   - The complement of the tokenId\n @param conditionId  - The CTF conditionId"
            },
            "functionSelector": "68c7450f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28802,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28801,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30284,
                  "src": "4325:9:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "4325:9:54"
              }
            ],
            "name": "registerToken",
            "nameLocation": "4246:13:54",
            "parameters": {
              "id": 28800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28795,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4268:5:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28811,
                  "src": "4260:13:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4260:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28797,
                  "mutability": "mutable",
                  "name": "complement",
                  "nameLocation": "4283:10:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28811,
                  "src": "4275:18:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4275:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28799,
                  "mutability": "mutable",
                  "name": "conditionId",
                  "nameLocation": "4303:11:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 28811,
                  "src": "4295:19:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28798,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4295:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4259:56:54"
            },
            "returnParameters": {
              "id": 28803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4335:0:54"
            },
            "scope": 28812,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28625,
              "name": "BaseExchange",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28597,
              "src": "794:12:54"
            },
            "id": 28626,
            "nodeType": "InheritanceSpecifier",
            "src": "794:12:54"
          },
          {
            "baseName": {
              "id": 28627,
              "name": "Auth",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30471,
              "src": "812:4:54"
            },
            "id": 28628,
            "nodeType": "InheritanceSpecifier",
            "src": "812:4:54"
          },
          {
            "baseName": {
              "id": 28629,
              "name": "Assets",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30253,
              "src": "822:6:54"
            },
            "id": 28630,
            "nodeType": "InheritanceSpecifier",
            "src": "822:6:54"
          },
          {
            "baseName": {
              "id": 28631,
              "name": "Fees",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30492,
              "src": "834:4:54"
            },
            "id": 28632,
            "nodeType": "InheritanceSpecifier",
            "src": "834:4:54"
          },
          {
            "baseName": {
              "id": 28633,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30671,
              "src": "844:8:54"
            },
            "id": 28634,
            "nodeType": "InheritanceSpecifier",
            "src": "844:8:54"
          },
          {
            "baseName": {
              "id": 28635,
              "name": "AssetOperations",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30194,
              "src": "858:15:54"
            },
            "id": 28636,
            "nodeType": "InheritanceSpecifier",
            "src": "858:15:54"
          },
          {
            "arguments": [
              {
                "hexValue": "506f6c796d61726b6574204354462045786368616e6765",
                "id": 28638,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "887:25:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_f30041e9aac4c4d3a1481d2941dfb0a844a72040e9bbc79a810d1ec5b5d6c7af",
                  "typeString": "literal_string \"Polymarket CTF Exchange\""
                },
                "value": "Polymarket CTF Exchange"
              },
              {
                "hexValue": "31",
                "id": 28639,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "914:3:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                  "typeString": "literal_string \"1\""
                },
                "value": "1"
              }
            ],
            "baseName": {
              "id": 28637,
              "name": "Hashing",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30569,
              "src": "879:7:54"
            },
            "id": 28640,
            "nodeType": "InheritanceSpecifier",
            "src": "879:39:54"
          },
          {
            "baseName": {
              "id": 28641,
              "name": "NonceManager",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30624,
              "src": "924:12:54"
            },
            "id": 28642,
            "nodeType": "InheritanceSpecifier",
            "src": "924:12:54"
          },
          {
            "baseName": {
              "id": 28643,
              "name": "Registry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30994,
              "src": "942:8:54"
            },
            "id": 28644,
            "nodeType": "InheritanceSpecifier",
            "src": "942:8:54"
          },
          {
            "baseName": {
              "id": 28645,
              "name": "Signatures",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31206,
              "src": "956:10:54"
            },
            "id": 28646,
            "nodeType": "InheritanceSpecifier",
            "src": "956:10:54"
          },
          {
            "baseName": {
              "id": 28647,
              "name": "Trading",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32278,
              "src": "972:7:54"
            },
            "id": 28648,
            "nodeType": "InheritanceSpecifier",
            "src": "972:7:54"
          }
        ],
        "canonicalName": "CTFExchange",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 28624,
          "nodeType": "StructuredDocumentation",
          "src": "667:99:54",
          "text": "@title CTF Exchange\n @notice Implements logic for trading CTF assets\n @author Polymarket"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28812,
          32278,
          31206,
          30832,
          30994,
          30624,
          30569,
          30194,
          30671,
          29140,
          29131,
          30492,
          30253,
          28860,
          28847,
          29118,
          29205,
          29194,
          29187,
          29158,
          29103,
          29271,
          29268,
          29090,
          29082,
          24864,
          30471,
          28938,
          28895,
          28597,
          26719,
          23428,
          23462,
          23377,
          24891,
          24903
        ],
        "name": "CTFExchange",
        "nameLocation": "775:11:54",
        "scope": 28813,
        "usedErrors": [
          28864,
          28866,
          29072,
          29122,
          29144,
          29146,
          29148,
          29193,
          29212,
          29214,
          29216,
          29218,
          29220,
          29222,
          29224,
          29226,
          29228
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 54
}